local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Persistent GUI setup (same as before)
local trollGui = Instance.new("ScreenGui")
trollGui.Name = "TrollChaosGui"
trollGui.ResetOnSpawn = false
trollGui.Parent = playerGui

local msg = Instance.new("TextLabel")
msg.Size = UDim2.new(1, 0, 1, 0)
msg.BackgroundColor3 = Color3.new(0, 0, 0)
msg.BackgroundTransparency = 0.3
msg.TextColor3 = Color3.new(1, 0, 0)
msg.TextScaled = true
msg.Font = Enum.Font.GothamBold
msg.Text = "[Vecxo]: uhhhhhhhhhhhhhh"
msg.Parent = trollGui

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://401117743"
sound.Volume = 100
sound.Looped = true
sound.Parent = trollGui
sound:Play()

-- Recursive function for all descendants
local function GetRecursiveChildren(parent, collected)
	collected = collected or {}
	for _, child in pairs(parent:GetChildren()) do
		table.insert(collected, child)
		GetRecursiveChildren(child, collected)
	end
	return collected
end

-- Phrases and Textures tables here (same as you had)...
local Phrases = { -- your phrases list }
local Textures = { -- your textures list }

-- Sky setup
local sky = Instance.new("Sky")
sky.CelestialBodiesShown = false
sky.Parent = Lighting

local message = Instance.new("Message")
message.Parent = Workspace
local hint = Instance.new("Hint")
hint.Parent = Workspace

-- Function to start the chaos loop
local function startChaosLoop()
	-- Update current character reference
	local character = player.Character or player.CharacterAdded:Wait()

	while true do
		for _, Part in pairs(GetRecursiveChildren(game, {})) do
			pcall(function()
				if character and character:IsAncestorOf(Part) then return end
				if not Part:IsA("Player") then
					-- Apply random chaos properties, like you had before
					pcall(function() Part.Name = Phrases[math.random(#Phrases)] end)
					pcall(function() Part.Text = Phrases[math.random(#Phrases)] end)
					pcall(function() Part.Image = Textures[math.random(#Textures)] end)
					pcall(function() Part.TextureId = Textures[math.random(#Textures)] end)
					pcall(function() Part.Texture = Textures[math.random(#Textures)] end)
					pcall(function() Part.ShirtTemplate = Textures[math.random(#Textures)] end)
					pcall(function() Part.PantsTemplate = Textures[math.random(#Textures)] end)
					pcall(function() Part.Graphic = Textures[math.random(#Textures)] end)
					pcall(function() Part.Color = Color3.new(math.random(), math.random(), math.random()) end)
					pcall(function() Part.Color3 = Color3.new(math.random(), math.random(), math.random()) end)
					pcall(function()
						Part.SkyboxUp = Textures[math.random(#Textures)]
						Part.SkyboxDn = Textures[math.random(#Textures)]
						Part.SkyboxLf = Textures[math.random(#Textures)]
						Part.SkyboxRt = Textures[math.random(#Textures)]
						Part.SkyboxFt = Textures[math.random(#Textures)]
						Part.SkyboxBk = Textures[math.random(#Textures)]
					end)
					pcall(function()
						Part.TextColor3 = Color3.new(math.random(), math.random(), math.random())
						Part.BackgroundColor3 = Color3.new(math.random(), math.random(), math.random())
						Part.BorderColor3 = Color3.new(math.random(), math.random(), math.random())
					end)
					pcall(function()
						Part.Pitch = math.random() * 5
						Part.Volume = 1
						Part.Looped = true
						Part:Play()
					end)
					pcall(function()
						if Part:IsA("BasePart") then
							if math.random(1, 5) == 1 then
								Part.Anchored = false
							end
							if not Part.Anchored then
								Part.Velocity = Vector3.new(math.random(-10, 10), math.random(0, 50), math.random(-10, 10))
								Part.RotVelocity = Vector3.new(math.random(-100, 100), math.random(-100, 100), math.random(-100, 100))
							end
						end
						Part.Locked = false
						Part.BrickColor = BrickColor.Random()
						Part.TopSurface = Enum.SurfaceType.Weld
						Part.BottomSurface = Enum.SurfaceType.Weld
						Part.FrontSurface = Enum.SurfaceType.Weld
						Part.BackSurface = Enum.SurfaceType.Weld
						Part.LeftSurface = Enum.SurfaceType.Weld
						Part.RightSurface = Enum.SurfaceType.Weld
					end)
				end
			end)

			if math.random(1, 100) == 1 then
				task.wait()
			end
		end
		task.wait(0.05)
	end
end

-- Start chaos loop first time
startChaosLoop()

-- Restart chaos loop on every respawn
player.CharacterAdded:Connect(function()
	-- We spawn a new thread to restart the loop for the new character
	task.spawn(startChaosLoop)
end)
